PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE IF NOT EXISTS "assurance_schema" (
    "assurance_schema_id" VARCHAR PRIMARY KEY NOT NULL,
    "assurance_type" TEXT NOT NULL,
    "code" TEXT NOT NULL,
    "code_json" TEXT CHECK(json_valid(code_json) OR code_json IS NULL),
    "governance" TEXT CHECK(json_valid(governance) OR governance IS NULL),
    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    "created_by" TEXT DEFAULT 'UNKNOWN',
    "updated_at" TIMESTAMP,
    "updated_by" TEXT,
    "deleted_at" TIMESTAMP,
    "deleted_by" TEXT,
    "activity_log" TEXT
);
CREATE TABLE IF NOT EXISTS "code_notebook_kernel" (
    "code_notebook_kernel_id" VARCHAR PRIMARY KEY NOT NULL,
    "kernel_name" TEXT NOT NULL,
    "description" TEXT,
    "mime_type" TEXT,
    "file_extn" TEXT,
    "elaboration" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),
    "governance" TEXT CHECK(json_valid(governance) OR governance IS NULL),
    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    "created_by" TEXT DEFAULT 'UNKNOWN',
    "updated_at" TIMESTAMP,
    "updated_by" TEXT,
    "deleted_at" TIMESTAMP,
    "deleted_by" TEXT,
    "activity_log" TEXT,
    UNIQUE("kernel_name")
);
INSERT INTO code_notebook_kernel VALUES('SQL','Dialect-independent ANSI SQL',NULL,'application/sql','.sql',NULL,NULL,'2023-12-04 03:55:46',NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO code_notebook_kernel VALUES('DenoTaskShell','Deno Task Shell',NULL,'application/x-deno-task-sh','.deno-task-sh',NULL,NULL,'2023-12-04 03:55:46',NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO code_notebook_kernel VALUES('PlantUML','PlantUML ER Diagram',NULL,'text/vnd.plantuml','.puml',NULL,NULL,'2023-12-04 03:55:46',NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO code_notebook_kernel VALUES('LLM Prompt','Large Lanugage Model (LLM) Prompt',NULL,'text/vnd.netspective.llm-prompt','.llm-prompt.txt',NULL,NULL,'2023-12-04 03:55:46',NULL,NULL,NULL,NULL,NULL,NULL);
CREATE TABLE IF NOT EXISTS "code_notebook_cell" (
    "code_notebook_cell_id" VARCHAR PRIMARY KEY NOT NULL,
    "notebook_kernel_id" VARCHAR NOT NULL,
    "notebook_name" TEXT NOT NULL,
    "cell_name" TEXT NOT NULL,
    "cell_governance" TEXT CHECK(json_valid(cell_governance) OR cell_governance IS NULL),
    "interpretable_code" TEXT NOT NULL,
    "interpretable_code_hash" TEXT NOT NULL,
    "description" TEXT,
    "arguments" TEXT CHECK(json_valid(arguments) OR arguments IS NULL),
    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    "created_by" TEXT DEFAULT 'UNKNOWN',
    "updated_at" TIMESTAMP,
    "updated_by" TEXT,
    "deleted_at" TIMESTAMP,
    "deleted_by" TEXT,
    "activity_log" TEXT,
    FOREIGN KEY("notebook_kernel_id") REFERENCES "code_notebook_kernel"("code_notebook_kernel_id"),
    UNIQUE("notebook_name", "cell_name", "interpretable_code_hash")
);
INSERT INTO code_notebook_cell VALUES('01HGSFFG0TNG4JHEWWTRTQVJ97','SQL','BootstrapSqlNotebook','bootstrapDDL',NULL,replace('CREATE TABLE IF NOT EXISTS "assurance_schema" (\n    "assurance_schema_id" VARCHAR PRIMARY KEY NOT NULL,\n    "assurance_type" TEXT NOT NULL,\n    "code" TEXT NOT NULL,\n    "code_json" TEXT CHECK(json_valid(code_json) OR code_json IS NULL),\n    "governance" TEXT CHECK(json_valid(governance) OR governance IS NULL),\n    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "created_by" TEXT DEFAULT ''UNKNOWN'',\n    "updated_at" TIMESTAMP,\n    "updated_by" TEXT,\n    "deleted_at" TIMESTAMP,\n    "deleted_by" TEXT,\n    "activity_log" TEXT\n);\nCREATE TABLE IF NOT EXISTS "code_notebook_kernel" (\n    "code_notebook_kernel_id" VARCHAR PRIMARY KEY NOT NULL,\n    "kernel_name" TEXT NOT NULL,\n    "description" TEXT,\n    "mime_type" TEXT,\n    "file_extn" TEXT,\n    "elaboration" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    "governance" TEXT CHECK(json_valid(governance) OR governance IS NULL),\n    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "created_by" TEXT DEFAULT ''UNKNOWN'',\n    "updated_at" TIMESTAMP,\n    "updated_by" TEXT,\n    "deleted_at" TIMESTAMP,\n    "deleted_by" TEXT,\n    "activity_log" TEXT,\n    UNIQUE("kernel_name")\n);\nCREATE TABLE IF NOT EXISTS "code_notebook_cell" (\n    "code_notebook_cell_id" VARCHAR PRIMARY KEY NOT NULL,\n    "notebook_kernel_id" VARCHAR NOT NULL,\n    "notebook_name" TEXT NOT NULL,\n    "cell_name" TEXT NOT NULL,\n    "cell_governance" TEXT CHECK(json_valid(cell_governance) OR cell_governance IS NULL),\n    "interpretable_code" TEXT NOT NULL,\n    "interpretable_code_hash" TEXT NOT NULL,\n    "description" TEXT,\n    "arguments" TEXT CHECK(json_valid(arguments) OR arguments IS NULL),\n    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "created_by" TEXT DEFAULT ''UNKNOWN'',\n    "updated_at" TIMESTAMP,\n    "updated_by" TEXT,\n    "deleted_at" TIMESTAMP,\n    "deleted_by" TEXT,\n    "activity_log" TEXT,\n    FOREIGN KEY("notebook_kernel_id") REFERENCES "code_notebook_kernel"("code_notebook_kernel_id"),\n    UNIQUE("notebook_name", "cell_name", "interpretable_code_hash")\n);\nCREATE TABLE IF NOT EXISTS "code_notebook_state" (\n    "code_notebook_state_id" VARCHAR PRIMARY KEY NOT NULL,\n    "code_notebook_cell_id" VARCHAR NOT NULL,\n    "from_state" TEXT NOT NULL,\n    "to_state" TEXT NOT NULL,\n    "transition_result" TEXT CHECK(json_valid(transition_result) OR transition_result IS NULL),\n    "transition_reason" TEXT,\n    "transitioned_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "elaboration" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "created_by" TEXT DEFAULT ''UNKNOWN'',\n    "updated_at" TIMESTAMP,\n    "updated_by" TEXT,\n    "deleted_at" TIMESTAMP,\n    "deleted_by" TEXT,\n    "activity_log" TEXT,\n    FOREIGN KEY("code_notebook_cell_id") REFERENCES "code_notebook_cell"("code_notebook_cell_id"),\n    UNIQUE("code_notebook_cell_id", "from_state", "to_state")\n);\n\n\n','\n',char(10)),'d5467b378e45b513fe81238521bb7d8d9b1bdf0e',NULL,NULL,NULL,NULL,'2023-12-04 04:00:25',NULL,NULL,NULL,'[{"code_notebook_cell_id":"01HGSFFG0TNG4JHEWWTRTQVJ97","notebook_kernel_id":"SQL","notebook_name":"BootstrapSqlNotebook","cell_name":"bootstrapDDL","cell_governance":null,"interpretable_code":"CREATE TABLE IF NOT EXISTS \"assurance_schema\" (\n    \"assurance_schema_id\" VARCHAR PRIMARY KEY NOT NULL,\n    \"assurance_type\" TEXT NOT NULL,\n    \"code\" TEXT NOT NULL,\n    \"code_json\" TEXT CHECK(json_valid(code_json) OR code_json IS NULL),\n    \"governance\" TEXT CHECK(json_valid(governance) OR governance IS NULL),\n    \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"created_by\" TEXT DEFAULT ''UNKNOWN'',\n    \"updated_at\" TIMESTAMP,\n    \"updated_by\" TEXT,\n    \"deleted_at\" TIMESTAMP,\n    \"deleted_by\" TEXT,\n    \"activity_log\" TEXT\n);\nCREATE TABLE IF NOT EXISTS \"code_notebook_kernel\" (\n    \"code_notebook_kernel_id\" VARCHAR PRIMARY KEY NOT NULL,\n    \"kernel_name\" TEXT NOT NULL,\n    \"description\" TEXT,\n    \"mime_type\" TEXT,\n    \"file_extn\" TEXT,\n    \"elaboration\" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    \"governance\" TEXT CHECK(json_valid(governance) OR governance IS NULL),\n    \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"created_by\" TEXT DEFAULT ''UNKNOWN'',\n    \"updated_at\" TIMESTAMP,\n    \"updated_by\" TEXT,\n    \"deleted_at\" TIMESTAMP,\n    \"deleted_by\" TEXT,\n    \"activity_log\" TEXT,\n    UNIQUE(\"kernel_name\")\n);\nCREATE TABLE IF NOT EXISTS \"code_notebook_cell\" (\n    \"code_notebook_cell_id\" VARCHAR PRIMARY KEY NOT NULL,\n    \"notebook_kernel_id\" VARCHAR NOT NULL,\n    \"notebook_name\" TEXT NOT NULL,\n    \"cell_name\" TEXT NOT NULL,\n    \"cell_governance\" TEXT CHECK(json_valid(cell_governance) OR cell_governance IS NULL),\n    \"interpretable_code\" TEXT NOT NULL,\n    \"interpretable_code_hash\" TEXT NOT NULL,\n    \"description\" TEXT,\n    \"arguments\" TEXT CHECK(json_valid(arguments) OR arguments IS NULL),\n    \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"created_by\" TEXT DEFAULT ''UNKNOWN'',\n    \"updated_at\" TIMESTAMP,\n    \"updated_by\" TEXT,\n    \"deleted_at\" TIMESTAMP,\n    \"deleted_by\" TEXT,\n    \"activity_log\" TEXT,\n    FOREIGN KEY(\"notebook_kernel_id\") REFERENCES \"code_notebook_kernel\"(\"code_notebook_kernel_id\"),\n    UNIQUE(\"notebook_name\", \"cell_name\", \"interpretable_code_hash\")\n);\nCREATE TABLE IF NOT EXISTS \"code_notebook_state\" (\n    \"code_notebook_state_id\" VARCHAR PRIMARY KEY NOT NULL,\n    \"code_notebook_cell_id\" VARCHAR NOT NULL,\n    \"from_state\" TEXT NOT NULL,\n    \"to_state\" TEXT NOT NULL,\n    \"transition_result\" TEXT CHECK(json_valid(transition_result) OR transition_result IS NULL),\n    \"transition_reason\" TEXT,\n    \"transitioned_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"elaboration\" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"created_by\" TEXT DEFAULT ''UNKNOWN'',\n    \"updated_at\" TIMESTAMP,\n    \"updated_by\" TEXT,\n    \"deleted_at\" TIMESTAMP,\n    \"deleted_by\" TEXT,\n    \"activity_log\" TEXT,\n    FOREIGN KEY(\"code_notebook_cell_id\") REFERENCES \"code_notebook_cell\"(\"code_notebook_cell_id\"),\n    UNIQUE(\"code_notebook_cell_id\", \"from_state\", \"to_state\")\n);\n\n\n","interpretable_code_hash":"d5467b378e45b513fe81238521bb7d8d9b1bdf0e","description":null,"arguments":null,"created_at":null,"created_by":null,"updated_at":null,"updated_by":null,"deleted_at":null,"deleted_by":null,"activity_log":null}]');
INSERT INTO code_notebook_cell VALUES('01HGSFFG0TE6Q1Z38JTQEQQ5DJ','SQL','BootstrapSqlNotebook','bootstrapSeedDML',NULL,'storeNotebookCellsDML "bootstrapSeedDML" did not return SQL (found: object)','d5bcdf4a75be14925b1008a47362707c00cb8990',NULL,NULL,NULL,NULL,'2023-12-04 04:00:25',NULL,NULL,NULL,'[{"code_notebook_cell_id":"01HGSFFG0TE6Q1Z38JTQEQQ5DJ","notebook_kernel_id":"SQL","notebook_name":"BootstrapSqlNotebook","cell_name":"bootstrapSeedDML","cell_governance":null,"interpretable_code":"storeNotebookCellsDML \"bootstrapSeedDML\" did not return SQL (found: object)","interpretable_code_hash":"d5bcdf4a75be14925b1008a47362707c00cb8990","description":null,"arguments":null,"created_at":null,"created_by":null,"updated_at":null,"updated_by":null,"deleted_at":null,"deleted_by":null,"activity_log":null}]');
INSERT INTO code_notebook_cell VALUES('01HGSFFG0T9P5REYWRBM5M31PE','SQL','ConstructionSqlNotebook','v001_once_initialDDL',NULL,replace('CREATE TABLE IF NOT EXISTS "device" (\n    "device_id" VARCHAR PRIMARY KEY NOT NULL,\n    "name" TEXT NOT NULL,\n    "state" TEXT CHECK(json_valid(state)) NOT NULL,\n    "boundary" TEXT NOT NULL,\n    "segmentation" TEXT CHECK(json_valid(segmentation) OR segmentation IS NULL),\n    "state_sysinfo" TEXT CHECK(json_valid(state_sysinfo) OR state_sysinfo IS NULL),\n    "elaboration" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "created_by" TEXT DEFAULT ''UNKNOWN'',\n    "updated_at" TIMESTAMP,\n    "updated_by" TEXT,\n    "deleted_at" TIMESTAMP,\n    "deleted_by" TEXT,\n    "activity_log" TEXT,\n    UNIQUE("name", "state", "boundary")\n);\nCREATE TABLE IF NOT EXISTS "behavior" (\n    "behavior_id" VARCHAR PRIMARY KEY NOT NULL,\n    "device_id" VARCHAR NOT NULL,\n    "behavior_name" TEXT NOT NULL,\n    "behavior_conf_json" TEXT CHECK(json_valid(behavior_conf_json)) NOT NULL,\n    "assurance_schema_id" VARCHAR,\n    "governance" TEXT CHECK(json_valid(governance) OR governance IS NULL),\n    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "created_by" TEXT DEFAULT ''UNKNOWN'',\n    "updated_at" TIMESTAMP,\n    "updated_by" TEXT,\n    "deleted_at" TIMESTAMP,\n    "deleted_by" TEXT,\n    "activity_log" TEXT,\n    FOREIGN KEY("device_id") REFERENCES "device"("device_id"),\n    FOREIGN KEY("assurance_schema_id") REFERENCES "assurance_schema"("assurance_schema_id"),\n    UNIQUE("device_id", "behavior_name")\n);\nCREATE TABLE IF NOT EXISTS "ur_ingest_resource_path_match_rule" (\n    "ur_ingest_resource_path_match_rule_id" VARCHAR PRIMARY KEY NOT NULL,\n    "namespace" TEXT NOT NULL,\n    "regex" TEXT NOT NULL,\n    "flags" TEXT NOT NULL,\n    "nature_regex_capture" TEXT,\n    "description" TEXT,\n    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "created_by" TEXT DEFAULT ''UNKNOWN'',\n    "updated_at" TIMESTAMP,\n    "updated_by" TEXT,\n    "deleted_at" TIMESTAMP,\n    "deleted_by" TEXT,\n    "activity_log" TEXT,\n    UNIQUE("namespace", "regex")\n);\nCREATE TABLE IF NOT EXISTS "ur_ingest_resource_path_rewrite_rule" (\n    "ur_ingest_resource_path_rewrite_rule_id" VARCHAR PRIMARY KEY NOT NULL,\n    "namespace" TEXT NOT NULL,\n    "regex" TEXT NOT NULL,\n    "replace" TEXT NOT NULL,\n    "description" TEXT,\n    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "created_by" TEXT DEFAULT ''UNKNOWN'',\n    "updated_at" TIMESTAMP,\n    "updated_by" TEXT,\n    "deleted_at" TIMESTAMP,\n    "deleted_by" TEXT,\n    "activity_log" TEXT,\n    UNIQUE("namespace", "regex", "replace")\n);\nCREATE TABLE IF NOT EXISTS "ur_ingest_session" (\n    "ur_ingest_session_id" VARCHAR PRIMARY KEY NOT NULL,\n    "device_id" VARCHAR NOT NULL,\n    "behavior_id" VARCHAR,\n    "behavior_json" TEXT CHECK(json_valid(behavior_json) OR behavior_json IS NULL),\n    "ingest_started_at" TIMESTAMP NOT NULL,\n    "ingest_finished_at" TIMESTAMP,\n    "elaboration" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "created_by" TEXT DEFAULT ''UNKNOWN'',\n    "updated_at" TIMESTAMP,\n    "updated_by" TEXT,\n    "deleted_at" TIMESTAMP,\n    "deleted_by" TEXT,\n    "activity_log" TEXT,\n    FOREIGN KEY("device_id") REFERENCES "device"("device_id"),\n    FOREIGN KEY("behavior_id") REFERENCES "behavior"("behavior_id"),\n    UNIQUE("device_id", "created_at")\n);\nCREATE TABLE IF NOT EXISTS "ur_ingest_session_fs_path" (\n    "ur_ingest_session_fs_path_id" VARCHAR PRIMARY KEY NOT NULL,\n    "ingest_session_id" VARCHAR NOT NULL,\n    "root_path" TEXT NOT NULL,\n    "elaboration" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "created_by" TEXT DEFAULT ''UNKNOWN'',\n    "updated_at" TIMESTAMP,\n    "updated_by" TEXT,\n    "deleted_at" TIMESTAMP,\n    "deleted_by" TEXT,\n    "activity_log" TEXT,\n    FOREIGN KEY("ingest_session_id") REFERENCES "ur_ingest_session"("ur_ingest_session_id"),\n    UNIQUE("ingest_session_id", "root_path", "created_at")\n);\nCREATE TABLE IF NOT EXISTS "uniform_resource" (\n    "uniform_resource_id" VARCHAR PRIMARY KEY NOT NULL,\n    "device_id" VARCHAR NOT NULL,\n    "ingest_session_id" VARCHAR NOT NULL,\n    "ingest_fs_path_id" VARCHAR,\n    "uri" TEXT NOT NULL,\n    "content_digest" TEXT NOT NULL,\n    "content" BLOB,\n    "nature" TEXT,\n    "size_bytes" INTEGER,\n    "last_modified_at" TIMESTAMP,\n    "content_fm_body_attrs" TEXT CHECK(json_valid(content_fm_body_attrs) OR content_fm_body_attrs IS NULL),\n    "frontmatter" TEXT CHECK(json_valid(frontmatter) OR frontmatter IS NULL),\n    "elaboration" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "created_by" TEXT DEFAULT ''UNKNOWN'',\n    "updated_at" TIMESTAMP,\n    "updated_by" TEXT,\n    "deleted_at" TIMESTAMP,\n    "deleted_by" TEXT,\n    "activity_log" TEXT,\n    FOREIGN KEY("device_id") REFERENCES "device"("device_id"),\n    FOREIGN KEY("ingest_session_id") REFERENCES "ur_ingest_session"("ur_ingest_session_id"),\n    FOREIGN KEY("ingest_fs_path_id") REFERENCES "ur_ingest_session_fs_path"("ur_ingest_session_fs_path_id"),\n    UNIQUE("device_id", "content_digest", "uri", "size_bytes", "last_modified_at")\n);\nCREATE TABLE IF NOT EXISTS "uniform_resource_transform" (\n    "uniform_resource_transform_id" VARCHAR PRIMARY KEY NOT NULL,\n    "uniform_resource_id" VARCHAR NOT NULL,\n    "uri" TEXT NOT NULL,\n    "content_digest" TEXT NOT NULL,\n    "content" BLOB,\n    "nature" TEXT,\n    "size_bytes" INTEGER,\n    "elaboration" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "created_by" TEXT DEFAULT ''UNKNOWN'',\n    "updated_at" TIMESTAMP,\n    "updated_by" TEXT,\n    "deleted_at" TIMESTAMP,\n    "deleted_by" TEXT,\n    "activity_log" TEXT,\n    FOREIGN KEY("uniform_resource_id") REFERENCES "uniform_resource"("uniform_resource_id"),\n    UNIQUE("uniform_resource_id", "content_digest", "nature", "size_bytes")\n);\nCREATE TABLE IF NOT EXISTS "ur_ingest_session_fs_path_entry" (\n    "ur_ingest_session_fs_path_entry_id" VARCHAR PRIMARY KEY NOT NULL,\n    "ingest_session_id" VARCHAR NOT NULL,\n    "ingest_fs_path_id" VARCHAR NOT NULL,\n    "uniform_resource_id" VARCHAR,\n    "file_path_abs" TEXT NOT NULL,\n    "file_path_rel_parent" TEXT NOT NULL,\n    "file_path_rel" TEXT NOT NULL,\n    "file_basename" TEXT NOT NULL,\n    "file_extn" TEXT,\n    "captured_executable" TEXT CHECK(json_valid(captured_executable) OR captured_executable IS NULL),\n    "ur_status" TEXT,\n    "ur_diagnostics" TEXT CHECK(json_valid(ur_diagnostics) OR ur_diagnostics IS NULL),\n    "ur_transformations" TEXT CHECK(json_valid(ur_transformations) OR ur_transformations IS NULL),\n    "elaboration" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "created_by" TEXT DEFAULT ''UNKNOWN'',\n    "updated_at" TIMESTAMP,\n    "updated_by" TEXT,\n    "deleted_at" TIMESTAMP,\n    "deleted_by" TEXT,\n    "activity_log" TEXT,\n    FOREIGN KEY("ingest_session_id") REFERENCES "ur_ingest_session"("ur_ingest_session_id"),\n    FOREIGN KEY("ingest_fs_path_id") REFERENCES "ur_ingest_session_fs_path"("ur_ingest_session_fs_path_id"),\n    FOREIGN KEY("uniform_resource_id") REFERENCES "uniform_resource"("uniform_resource_id")\n);\nCREATE TABLE IF NOT EXISTS "ur_ingest_session_task" (\n    "ur_ingest_session_task_id" VARCHAR PRIMARY KEY NOT NULL,\n    "ingest_session_id" VARCHAR NOT NULL,\n    "uniform_resource_id" VARCHAR,\n    "captured_executable" TEXT CHECK(json_valid(captured_executable)) NOT NULL,\n    "ur_status" TEXT,\n    "ur_diagnostics" TEXT CHECK(json_valid(ur_diagnostics) OR ur_diagnostics IS NULL),\n    "ur_transformations" TEXT CHECK(json_valid(ur_transformations) OR ur_transformations IS NULL),\n    "elaboration" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "created_by" TEXT DEFAULT ''UNKNOWN'',\n    "updated_at" TIMESTAMP,\n    "updated_by" TEXT,\n    "deleted_at" TIMESTAMP,\n    "deleted_by" TEXT,\n    "activity_log" TEXT,\n    FOREIGN KEY("ingest_session_id") REFERENCES "ur_ingest_session"("ur_ingest_session_id"),\n    FOREIGN KEY("uniform_resource_id") REFERENCES "uniform_resource"("uniform_resource_id")\n);\n\nCREATE INDEX IF NOT EXISTS "idx_device__name__state" ON "device"("name", "state");\nCREATE INDEX IF NOT EXISTS "idx_ur_ingest_session_fs_path__ingest_session_id__root_path" ON "ur_ingest_session_fs_path"("ingest_session_id", "root_path");\nCREATE INDEX IF NOT EXISTS "idx_uniform_resource__device_id__uri" ON "uniform_resource"("device_id", "uri");\nCREATE INDEX IF NOT EXISTS "idx_uniform_resource_transform__uniform_resource_id__content_digest" ON "uniform_resource_transform"("uniform_resource_id", "content_digest");\nCREATE INDEX IF NOT EXISTS "idx_ur_ingest_session_fs_path_entry__ingest_session_id__file_path_abs" ON "ur_ingest_session_fs_path_entry"("ingest_session_id", "file_path_abs");\nCREATE INDEX IF NOT EXISTS "idx_ur_ingest_session_task__ingest_session_id" ON "ur_ingest_session_task"("ingest_session_id");\n','\n',char(10)),'97f42f7fe1404859b562903cfa71a3b486dca898',NULL,NULL,NULL,NULL,'2023-12-04 04:00:25',NULL,NULL,NULL,'[{"code_notebook_cell_id":"01HGSFFG0T9P5REYWRBM5M31PE","notebook_kernel_id":"SQL","notebook_name":"ConstructionSqlNotebook","cell_name":"v001_once_initialDDL","cell_governance":null,"interpretable_code":"CREATE TABLE IF NOT EXISTS \"device\" (\n    \"device_id\" VARCHAR PRIMARY KEY NOT NULL,\n    \"name\" TEXT NOT NULL,\n    \"state\" TEXT CHECK(json_valid(state)) NOT NULL,\n    \"boundary\" TEXT NOT NULL,\n    \"segmentation\" TEXT CHECK(json_valid(segmentation) OR segmentation IS NULL),\n    \"state_sysinfo\" TEXT CHECK(json_valid(state_sysinfo) OR state_sysinfo IS NULL),\n    \"elaboration\" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"created_by\" TEXT DEFAULT ''UNKNOWN'',\n    \"updated_at\" TIMESTAMP,\n    \"updated_by\" TEXT,\n    \"deleted_at\" TIMESTAMP,\n    \"deleted_by\" TEXT,\n    \"activity_log\" TEXT,\n    UNIQUE(\"name\", \"state\", \"boundary\")\n);\nCREATE TABLE IF NOT EXISTS \"behavior\" (\n    \"behavior_id\" VARCHAR PRIMARY KEY NOT NULL,\n    \"device_id\" VARCHAR NOT NULL,\n    \"behavior_name\" TEXT NOT NULL,\n    \"behavior_conf_json\" TEXT CHECK(json_valid(behavior_conf_json)) NOT NULL,\n    \"assurance_schema_id\" VARCHAR,\n    \"governance\" TEXT CHECK(json_valid(governance) OR governance IS NULL),\n    \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"created_by\" TEXT DEFAULT ''UNKNOWN'',\n    \"updated_at\" TIMESTAMP,\n    \"updated_by\" TEXT,\n    \"deleted_at\" TIMESTAMP,\n    \"deleted_by\" TEXT,\n    \"activity_log\" TEXT,\n    FOREIGN KEY(\"device_id\") REFERENCES \"device\"(\"device_id\"),\n    FOREIGN KEY(\"assurance_schema_id\") REFERENCES \"assurance_schema\"(\"assurance_schema_id\"),\n    UNIQUE(\"device_id\", \"behavior_name\")\n);\nCREATE TABLE IF NOT EXISTS \"ur_ingest_resource_path_match_rule\" (\n    \"ur_ingest_resource_path_match_rule_id\" VARCHAR PRIMARY KEY NOT NULL,\n    \"namespace\" TEXT NOT NULL,\n    \"regex\" TEXT NOT NULL,\n    \"flags\" TEXT NOT NULL,\n    \"nature_regex_capture\" TEXT,\n    \"description\" TEXT,\n    \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"created_by\" TEXT DEFAULT ''UNKNOWN'',\n    \"updated_at\" TIMESTAMP,\n    \"updated_by\" TEXT,\n    \"deleted_at\" TIMESTAMP,\n    \"deleted_by\" TEXT,\n    \"activity_log\" TEXT,\n    UNIQUE(\"namespace\", \"regex\")\n);\nCREATE TABLE IF NOT EXISTS \"ur_ingest_resource_path_rewrite_rule\" (\n    \"ur_ingest_resource_path_rewrite_rule_id\" VARCHAR PRIMARY KEY NOT NULL,\n    \"namespace\" TEXT NOT NULL,\n    \"regex\" TEXT NOT NULL,\n    \"replace\" TEXT NOT NULL,\n    \"description\" TEXT,\n    \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"created_by\" TEXT DEFAULT ''UNKNOWN'',\n    \"updated_at\" TIMESTAMP,\n    \"updated_by\" TEXT,\n    \"deleted_at\" TIMESTAMP,\n    \"deleted_by\" TEXT,\n    \"activity_log\" TEXT,\n    UNIQUE(\"namespace\", \"regex\", \"replace\")\n);\nCREATE TABLE IF NOT EXISTS \"ur_ingest_session\" (\n    \"ur_ingest_session_id\" VARCHAR PRIMARY KEY NOT NULL,\n    \"device_id\" VARCHAR NOT NULL,\n    \"behavior_id\" VARCHAR,\n    \"behavior_json\" TEXT CHECK(json_valid(behavior_json) OR behavior_json IS NULL),\n    \"ingest_started_at\" TIMESTAMP NOT NULL,\n    \"ingest_finished_at\" TIMESTAMP,\n    \"elaboration\" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"created_by\" TEXT DEFAULT ''UNKNOWN'',\n    \"updated_at\" TIMESTAMP,\n    \"updated_by\" TEXT,\n    \"deleted_at\" TIMESTAMP,\n    \"deleted_by\" TEXT,\n    \"activity_log\" TEXT,\n    FOREIGN KEY(\"device_id\") REFERENCES \"device\"(\"device_id\"),\n    FOREIGN KEY(\"behavior_id\") REFERENCES \"behavior\"(\"behavior_id\"),\n    UNIQUE(\"device_id\", \"created_at\")\n);\nCREATE TABLE IF NOT EXISTS \"ur_ingest_session_fs_path\" (\n    \"ur_ingest_session_fs_path_id\" VARCHAR PRIMARY KEY NOT NULL,\n    \"ingest_session_id\" VARCHAR NOT NULL,\n    \"root_path\" TEXT NOT NULL,\n    \"elaboration\" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"created_by\" TEXT DEFAULT ''UNKNOWN'',\n    \"updated_at\" TIMESTAMP,\n    \"updated_by\" TEXT,\n    \"deleted_at\" TIMESTAMP,\n    \"deleted_by\" TEXT,\n    \"activity_log\" TEXT,\n    FOREIGN KEY(\"ingest_session_id\") REFERENCES \"ur_ingest_session\"(\"ur_ingest_session_id\"),\n    UNIQUE(\"ingest_session_id\", \"root_path\", \"created_at\")\n);\nCREATE TABLE IF NOT EXISTS \"uniform_resource\" (\n    \"uniform_resource_id\" VARCHAR PRIMARY KEY NOT NULL,\n    \"device_id\" VARCHAR NOT NULL,\n    \"ingest_session_id\" VARCHAR NOT NULL,\n    \"ingest_fs_path_id\" VARCHAR,\n    \"uri\" TEXT NOT NULL,\n    \"content_digest\" TEXT NOT NULL,\n    \"content\" BLOB,\n    \"nature\" TEXT,\n    \"size_bytes\" INTEGER,\n    \"last_modified_at\" TIMESTAMP,\n    \"content_fm_body_attrs\" TEXT CHECK(json_valid(content_fm_body_attrs) OR content_fm_body_attrs IS NULL),\n    \"frontmatter\" TEXT CHECK(json_valid(frontmatter) OR frontmatter IS NULL),\n    \"elaboration\" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"created_by\" TEXT DEFAULT ''UNKNOWN'',\n    \"updated_at\" TIMESTAMP,\n    \"updated_by\" TEXT,\n    \"deleted_at\" TIMESTAMP,\n    \"deleted_by\" TEXT,\n    \"activity_log\" TEXT,\n    FOREIGN KEY(\"device_id\") REFERENCES \"device\"(\"device_id\"),\n    FOREIGN KEY(\"ingest_session_id\") REFERENCES \"ur_ingest_session\"(\"ur_ingest_session_id\"),\n    FOREIGN KEY(\"ingest_fs_path_id\") REFERENCES \"ur_ingest_session_fs_path\"(\"ur_ingest_session_fs_path_id\"),\n    UNIQUE(\"device_id\", \"content_digest\", \"uri\", \"size_bytes\", \"last_modified_at\")\n);\nCREATE TABLE IF NOT EXISTS \"uniform_resource_transform\" (\n    \"uniform_resource_transform_id\" VARCHAR PRIMARY KEY NOT NULL,\n    \"uniform_resource_id\" VARCHAR NOT NULL,\n    \"uri\" TEXT NOT NULL,\n    \"content_digest\" TEXT NOT NULL,\n    \"content\" BLOB,\n    \"nature\" TEXT,\n    \"size_bytes\" INTEGER,\n    \"elaboration\" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"created_by\" TEXT DEFAULT ''UNKNOWN'',\n    \"updated_at\" TIMESTAMP,\n    \"updated_by\" TEXT,\n    \"deleted_at\" TIMESTAMP,\n    \"deleted_by\" TEXT,\n    \"activity_log\" TEXT,\n    FOREIGN KEY(\"uniform_resource_id\") REFERENCES \"uniform_resource\"(\"uniform_resource_id\"),\n    UNIQUE(\"uniform_resource_id\", \"content_digest\", \"nature\", \"size_bytes\")\n);\nCREATE TABLE IF NOT EXISTS \"ur_ingest_session_fs_path_entry\" (\n    \"ur_ingest_session_fs_path_entry_id\" VARCHAR PRIMARY KEY NOT NULL,\n    \"ingest_session_id\" VARCHAR NOT NULL,\n    \"ingest_fs_path_id\" VARCHAR NOT NULL,\n    \"uniform_resource_id\" VARCHAR,\n    \"file_path_abs\" TEXT NOT NULL,\n    \"file_path_rel_parent\" TEXT NOT NULL,\n    \"file_path_rel\" TEXT NOT NULL,\n    \"file_basename\" TEXT NOT NULL,\n    \"file_extn\" TEXT,\n    \"captured_executable\" TEXT CHECK(json_valid(captured_executable) OR captured_executable IS NULL),\n    \"ur_status\" TEXT,\n    \"ur_diagnostics\" TEXT CHECK(json_valid(ur_diagnostics) OR ur_diagnostics IS NULL),\n    \"ur_transformations\" TEXT CHECK(json_valid(ur_transformations) OR ur_transformations IS NULL),\n    \"elaboration\" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"created_by\" TEXT DEFAULT ''UNKNOWN'',\n    \"updated_at\" TIMESTAMP,\n    \"updated_by\" TEXT,\n    \"deleted_at\" TIMESTAMP,\n    \"deleted_by\" TEXT,\n    \"activity_log\" TEXT,\n    FOREIGN KEY(\"ingest_session_id\") REFERENCES \"ur_ingest_session\"(\"ur_ingest_session_id\"),\n    FOREIGN KEY(\"ingest_fs_path_id\") REFERENCES \"ur_ingest_session_fs_path\"(\"ur_ingest_session_fs_path_id\"),\n    FOREIGN KEY(\"uniform_resource_id\") REFERENCES \"uniform_resource\"(\"uniform_resource_id\")\n);\nCREATE TABLE IF NOT EXISTS \"ur_ingest_session_task\" (\n    \"ur_ingest_session_task_id\" VARCHAR PRIMARY KEY NOT NULL,\n    \"ingest_session_id\" VARCHAR NOT NULL,\n    \"uniform_resource_id\" VARCHAR,\n    \"captured_executable\" TEXT CHECK(json_valid(captured_executable)) NOT NULL,\n    \"ur_status\" TEXT,\n    \"ur_diagnostics\" TEXT CHECK(json_valid(ur_diagnostics) OR ur_diagnostics IS NULL),\n    \"ur_transformations\" TEXT CHECK(json_valid(ur_transformations) OR ur_transformations IS NULL),\n    \"elaboration\" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"created_by\" TEXT DEFAULT ''UNKNOWN'',\n    \"updated_at\" TIMESTAMP,\n    \"updated_by\" TEXT,\n    \"deleted_at\" TIMESTAMP,\n    \"deleted_by\" TEXT,\n    \"activity_log\" TEXT,\n    FOREIGN KEY(\"ingest_session_id\") REFERENCES \"ur_ingest_session\"(\"ur_ingest_session_id\"),\n    FOREIGN KEY(\"uniform_resource_id\") REFERENCES \"uniform_resource\"(\"uniform_resource_id\")\n);\n\nCREATE INDEX IF NOT EXISTS \"idx_device__name__state\" ON \"device\"(\"name\", \"state\");\nCREATE INDEX IF NOT EXISTS \"idx_ur_ingest_session_fs_path__ingest_session_id__root_path\" ON \"ur_ingest_session_fs_path\"(\"ingest_session_id\", \"root_path\");\nCREATE INDEX IF NOT EXISTS \"idx_uniform_resource__device_id__uri\" ON \"uniform_resource\"(\"device_id\", \"uri\");\nCREATE INDEX IF NOT EXISTS \"idx_uniform_resource_transform__uniform_resource_id__content_digest\" ON \"uniform_resource_transform\"(\"uniform_resource_id\", \"content_digest\");\nCREATE INDEX IF NOT EXISTS \"idx_ur_ingest_session_fs_path_entry__ingest_session_id__file_path_abs\" ON \"ur_ingest_session_fs_path_entry\"(\"ingest_session_id\", \"file_path_abs\");\nCREATE INDEX IF NOT EXISTS \"idx_ur_ingest_session_task__ingest_session_id\" ON \"ur_ingest_session_task\"(\"ingest_session_id\");\n","interpretable_code_hash":"97f42f7fe1404859b562903cfa71a3b486dca898","description":null,"arguments":null,"created_at":null,"created_by":null,"updated_at":null,"updated_by":null,"deleted_at":null,"deleted_by":null,"activity_log":null}]');
INSERT INTO code_notebook_cell VALUES('01HGSFFG0T3MZDA5RGHVRKNS4Q','SQL','ConstructionSqlNotebook','v002_fsContentIngestSessionFilesStatsViewDDL',NULL,replace('DROP VIEW IF EXISTS "ur_ingest_session_files_stats";\nCREATE VIEW IF NOT EXISTS "ur_ingest_session_files_stats" AS\n    WITH Summary AS (\n        SELECT\n            device.device_id AS device_id,\n            ur_ingest_session.ur_ingest_session_id AS ingest_session_id,\n            ur_ingest_session.ingest_started_at AS ingest_session_started_at,\n            ur_ingest_session.ingest_finished_at AS ingest_session_finished_at,\n            COALESCE(ur_ingest_session_fs_path_entry.file_extn, '''') AS file_extension,\n            ur_ingest_session_fs_path.ur_ingest_session_fs_path_id as ingest_session_fs_path_id,\n            ur_ingest_session_fs_path.root_path AS ingest_session_root_fs_path,\n            COUNT(ur_ingest_session_fs_path_entry.uniform_resource_id) AS total_file_count,\n            SUM(CASE WHEN uniform_resource.content IS NOT NULL THEN 1 ELSE 0 END) AS file_count_with_content,\n            SUM(CASE WHEN uniform_resource.frontmatter IS NOT NULL THEN 1 ELSE 0 END) AS file_count_with_frontmatter,\n            MIN(uniform_resource.size_bytes) AS min_file_size_bytes,\n            AVG(uniform_resource.size_bytes) AS average_file_size_bytes,\n            MAX(uniform_resource.size_bytes) AS max_file_size_bytes,\n            MIN(uniform_resource.last_modified_at) AS oldest_file_last_modified_datetime,\n            MAX(uniform_resource.last_modified_at) AS youngest_file_last_modified_datetime\n        FROM\n            ur_ingest_session\n        JOIN\n            device ON ur_ingest_session.device_id = device.device_id\n        LEFT JOIN\n            ur_ingest_session_fs_path ON ur_ingest_session.ur_ingest_session_id = ur_ingest_session_fs_path.ingest_session_id\n        LEFT JOIN\n            ur_ingest_session_fs_path_entry ON ur_ingest_session_fs_path.ur_ingest_session_fs_path_id = ur_ingest_session_fs_path_entry.ingest_fs_path_id\n        LEFT JOIN\n            uniform_resource ON ur_ingest_session_fs_path_entry.uniform_resource_id = uniform_resource.uniform_resource_id\n        GROUP BY\n            device.device_id,\n            ur_ingest_session.ur_ingest_session_id,\n            ur_ingest_session.ingest_started_at,\n            ur_ingest_session.ingest_finished_at,\n            ur_ingest_session_fs_path_entry.file_extn,\n            ur_ingest_session_fs_path.root_path\n    )\n    SELECT\n        device_id,\n        ingest_session_id,\n        ingest_session_started_at,\n        ingest_session_finished_at,\n        file_extension,\n        ingest_session_fs_path_id,\n        ingest_session_root_fs_path,\n        total_file_count,\n        file_count_with_content,\n        file_count_with_frontmatter,\n        min_file_size_bytes,\n        CAST(ROUND(average_file_size_bytes) AS INTEGER) AS average_file_size_bytes,\n        max_file_size_bytes,\n        oldest_file_last_modified_datetime,\n        youngest_file_last_modified_datetime\n    FROM\n        Summary\n    ORDER BY\n        device_id,\n        ingest_session_finished_at,\n        file_extension;','\n',char(10)),'9870d0c179334958ddda85827e4966b406c86e0c',NULL,NULL,NULL,NULL,'2023-12-04 04:00:25',NULL,NULL,NULL,'[{"code_notebook_cell_id":"01HGSFFG0T3MZDA5RGHVRKNS4Q","notebook_kernel_id":"SQL","notebook_name":"ConstructionSqlNotebook","cell_name":"v002_fsContentIngestSessionFilesStatsViewDDL","cell_governance":null,"interpretable_code":"DROP VIEW IF EXISTS \"ur_ingest_session_files_stats\";\nCREATE VIEW IF NOT EXISTS \"ur_ingest_session_files_stats\" AS\n    WITH Summary AS (\n        SELECT\n            device.device_id AS device_id,\n            ur_ingest_session.ur_ingest_session_id AS ingest_session_id,\n            ur_ingest_session.ingest_started_at AS ingest_session_started_at,\n            ur_ingest_session.ingest_finished_at AS ingest_session_finished_at,\n            COALESCE(ur_ingest_session_fs_path_entry.file_extn, '''') AS file_extension,\n            ur_ingest_session_fs_path.ur_ingest_session_fs_path_id as ingest_session_fs_path_id,\n            ur_ingest_session_fs_path.root_path AS ingest_session_root_fs_path,\n            COUNT(ur_ingest_session_fs_path_entry.uniform_resource_id) AS total_file_count,\n            SUM(CASE WHEN uniform_resource.content IS NOT NULL THEN 1 ELSE 0 END) AS file_count_with_content,\n            SUM(CASE WHEN uniform_resource.frontmatter IS NOT NULL THEN 1 ELSE 0 END) AS file_count_with_frontmatter,\n            MIN(uniform_resource.size_bytes) AS min_file_size_bytes,\n            AVG(uniform_resource.size_bytes) AS average_file_size_bytes,\n            MAX(uniform_resource.size_bytes) AS max_file_size_bytes,\n            MIN(uniform_resource.last_modified_at) AS oldest_file_last_modified_datetime,\n            MAX(uniform_resource.last_modified_at) AS youngest_file_last_modified_datetime\n        FROM\n            ur_ingest_session\n        JOIN\n            device ON ur_ingest_session.device_id = device.device_id\n        LEFT JOIN\n            ur_ingest_session_fs_path ON ur_ingest_session.ur_ingest_session_id = ur_ingest_session_fs_path.ingest_session_id\n        LEFT JOIN\n            ur_ingest_session_fs_path_entry ON ur_ingest_session_fs_path.ur_ingest_session_fs_path_id = ur_ingest_session_fs_path_entry.ingest_fs_path_id\n        LEFT JOIN\n            uniform_resource ON ur_ingest_session_fs_path_entry.uniform_resource_id = uniform_resource.uniform_resource_id\n        GROUP BY\n            device.device_id,\n            ur_ingest_session.ur_ingest_session_id,\n            ur_ingest_session.ingest_started_at,\n            ur_ingest_session.ingest_finished_at,\n            ur_ingest_session_fs_path_entry.file_extn,\n            ur_ingest_session_fs_path.root_path\n    )\n    SELECT\n        device_id,\n        ingest_session_id,\n        ingest_session_started_at,\n        ingest_session_finished_at,\n        file_extension,\n        ingest_session_fs_path_id,\n        ingest_session_root_fs_path,\n        total_file_count,\n        file_count_with_content,\n        file_count_with_frontmatter,\n        min_file_size_bytes,\n        CAST(ROUND(average_file_size_bytes) AS INTEGER) AS average_file_size_bytes,\n        max_file_size_bytes,\n        oldest_file_last_modified_datetime,\n        youngest_file_last_modified_datetime\n    FROM\n        Summary\n    ORDER BY\n        device_id,\n        ingest_session_finished_at,\n        file_extension;","interpretable_code_hash":"9870d0c179334958ddda85827e4966b406c86e0c","description":null,"arguments":null,"created_at":null,"created_by":null,"updated_at":null,"updated_by":null,"deleted_at":null,"deleted_by":null,"activity_log":null}]');
INSERT INTO code_notebook_cell VALUES('01HGSFFG0TQR859CA9600444CY','SQL','ConstructionSqlNotebook','v002_fsContentIngestSessionFilesStatsLatestViewDDL',NULL,replace('DROP VIEW IF EXISTS "ur_ingest_session_files_stats_latest";\nCREATE VIEW IF NOT EXISTS "ur_ingest_session_files_stats_latest" AS\n    SELECT iss.*\n      FROM ur_ingest_session_files_stats AS iss\n      JOIN (  SELECT ur_ingest_session.ur_ingest_session_id AS latest_session_id\n                FROM ur_ingest_session\n            ORDER BY ur_ingest_session.ingest_finished_at DESC\n               LIMIT 1) AS latest\n        ON iss.ingest_session_id = latest.latest_session_id;','\n',char(10)),'f7a286b3b64881e069f05950d992a3b04af5c8f3',NULL,NULL,NULL,NULL,'2023-12-04 04:00:25',NULL,NULL,NULL,'[{"code_notebook_cell_id":"01HGSFFG0TQR859CA9600444CY","notebook_kernel_id":"SQL","notebook_name":"ConstructionSqlNotebook","cell_name":"v002_fsContentIngestSessionFilesStatsLatestViewDDL","cell_governance":null,"interpretable_code":"DROP VIEW IF EXISTS \"ur_ingest_session_files_stats_latest\";\nCREATE VIEW IF NOT EXISTS \"ur_ingest_session_files_stats_latest\" AS\n    SELECT iss.*\n      FROM ur_ingest_session_files_stats AS iss\n      JOIN (  SELECT ur_ingest_session.ur_ingest_session_id AS latest_session_id\n                FROM ur_ingest_session\n            ORDER BY ur_ingest_session.ingest_finished_at DESC\n               LIMIT 1) AS latest\n        ON iss.ingest_session_id = latest.latest_session_id;","interpretable_code_hash":"f7a286b3b64881e069f05950d992a3b04af5c8f3","description":null,"arguments":null,"created_at":null,"created_by":null,"updated_at":null,"updated_by":null,"deleted_at":null,"deleted_by":null,"activity_log":null}]');
INSERT INTO code_notebook_cell VALUES('01HGSFFG0TZWHHNYR0CZ0TN69B','SQL','ConstructionSqlNotebook','v002_urIngestSessionTasksStatsViewDDL',NULL,replace('DROP VIEW IF EXISTS "ur_ingest_session_tasks_stats";\nCREATE VIEW IF NOT EXISTS "ur_ingest_session_tasks_stats" AS\n      WITH Summary AS (\n          SELECT\n            device.device_id AS device_id,\n            ur_ingest_session.ur_ingest_session_id AS ingest_session_id,\n            ur_ingest_session.ingest_started_at AS ingest_session_started_at,\n            ur_ingest_session.ingest_finished_at AS ingest_session_finished_at,\n            COALESCE(ur_ingest_session_task.ur_status, ''Ok'') AS ur_status,\n            COALESCE(uniform_resource.nature, ''UNKNOWN'') AS nature,\n            COUNT(ur_ingest_session_task.uniform_resource_id) AS total_file_count,\n            SUM(CASE WHEN uniform_resource.content IS NOT NULL THEN 1 ELSE 0 END) AS file_count_with_content,\n            SUM(CASE WHEN uniform_resource.frontmatter IS NOT NULL THEN 1 ELSE 0 END) AS file_count_with_frontmatter,\n            MIN(uniform_resource.size_bytes) AS min_file_size_bytes,\n            AVG(uniform_resource.size_bytes) AS average_file_size_bytes,\n            MAX(uniform_resource.size_bytes) AS max_file_size_bytes,\n            MIN(uniform_resource.last_modified_at) AS oldest_file_last_modified_datetime,\n            MAX(uniform_resource.last_modified_at) AS youngest_file_last_modified_datetime\n        FROM\n            ur_ingest_session\n        JOIN\n            device ON ur_ingest_session.device_id = device.device_id\n        LEFT JOIN\n            ur_ingest_session_task ON ur_ingest_session.ur_ingest_session_id = ur_ingest_session_task.ingest_session_id\n        LEFT JOIN\n            uniform_resource ON ur_ingest_session_task.uniform_resource_id = uniform_resource.uniform_resource_id\n        GROUP BY\n            device.device_id,\n            ur_ingest_session.ur_ingest_session_id,\n            ur_ingest_session.ingest_started_at,\n            ur_ingest_session.ingest_finished_at,\n            ur_ingest_session_task.captured_executable\n    )\n    SELECT\n        device_id,\n        ingest_session_id,\n        ingest_session_started_at,\n        ingest_session_finished_at,\n        ur_status,\n        nature,\n        total_file_count,\n        file_count_with_content,\n        file_count_with_frontmatter,\n        min_file_size_bytes,\n        CAST(ROUND(average_file_size_bytes) AS INTEGER) AS average_file_size_bytes,\n        max_file_size_bytes,\n        oldest_file_last_modified_datetime,\n        youngest_file_last_modified_datetime\n    FROM\n        Summary\n    ORDER BY\n        device_id,\n        ingest_session_finished_at,\n        ur_status;','\n',char(10)),'1f7a7f2e454cf81922df584750d84a4d39a2381e',NULL,NULL,NULL,NULL,'2023-12-04 04:00:25',NULL,NULL,NULL,'[{"code_notebook_cell_id":"01HGSFFG0TZWHHNYR0CZ0TN69B","notebook_kernel_id":"SQL","notebook_name":"ConstructionSqlNotebook","cell_name":"v002_urIngestSessionTasksStatsViewDDL","cell_governance":null,"interpretable_code":"DROP VIEW IF EXISTS \"ur_ingest_session_tasks_stats\";\nCREATE VIEW IF NOT EXISTS \"ur_ingest_session_tasks_stats\" AS\n      WITH Summary AS (\n          SELECT\n            device.device_id AS device_id,\n            ur_ingest_session.ur_ingest_session_id AS ingest_session_id,\n            ur_ingest_session.ingest_started_at AS ingest_session_started_at,\n            ur_ingest_session.ingest_finished_at AS ingest_session_finished_at,\n            COALESCE(ur_ingest_session_task.ur_status, ''Ok'') AS ur_status,\n            COALESCE(uniform_resource.nature, ''UNKNOWN'') AS nature,\n            COUNT(ur_ingest_session_task.uniform_resource_id) AS total_file_count,\n            SUM(CASE WHEN uniform_resource.content IS NOT NULL THEN 1 ELSE 0 END) AS file_count_with_content,\n            SUM(CASE WHEN uniform_resource.frontmatter IS NOT NULL THEN 1 ELSE 0 END) AS file_count_with_frontmatter,\n            MIN(uniform_resource.size_bytes) AS min_file_size_bytes,\n            AVG(uniform_resource.size_bytes) AS average_file_size_bytes,\n            MAX(uniform_resource.size_bytes) AS max_file_size_bytes,\n            MIN(uniform_resource.last_modified_at) AS oldest_file_last_modified_datetime,\n            MAX(uniform_resource.last_modified_at) AS youngest_file_last_modified_datetime\n        FROM\n            ur_ingest_session\n        JOIN\n            device ON ur_ingest_session.device_id = device.device_id\n        LEFT JOIN\n            ur_ingest_session_task ON ur_ingest_session.ur_ingest_session_id = ur_ingest_session_task.ingest_session_id\n        LEFT JOIN\n            uniform_resource ON ur_ingest_session_task.uniform_resource_id = uniform_resource.uniform_resource_id\n        GROUP BY\n            device.device_id,\n            ur_ingest_session.ur_ingest_session_id,\n            ur_ingest_session.ingest_started_at,\n            ur_ingest_session.ingest_finished_at,\n            ur_ingest_session_task.captured_executable\n    )\n    SELECT\n        device_id,\n        ingest_session_id,\n        ingest_session_started_at,\n        ingest_session_finished_at,\n        ur_status,\n        nature,\n        total_file_count,\n        file_count_with_content,\n        file_count_with_frontmatter,\n        min_file_size_bytes,\n        CAST(ROUND(average_file_size_bytes) AS INTEGER) AS average_file_size_bytes,\n        max_file_size_bytes,\n        oldest_file_last_modified_datetime,\n        youngest_file_last_modified_datetime\n    FROM\n        Summary\n    ORDER BY\n        device_id,\n        ingest_session_finished_at,\n        ur_status;","interpretable_code_hash":"1f7a7f2e454cf81922df584750d84a4d39a2381e","description":null,"arguments":null,"created_at":null,"created_by":null,"updated_at":null,"updated_by":null,"deleted_at":null,"deleted_by":null,"activity_log":null}]');
INSERT INTO code_notebook_cell VALUES('01HGSFFG0TCTPVAJ73HYKJ29YM','SQL','ConstructionSqlNotebook','v002_urIngestSessionTasksStatsLatestViewDDL',NULL,replace('DROP VIEW IF EXISTS "ur_ingest_session_tasks_stats_latest";\nCREATE VIEW IF NOT EXISTS "ur_ingest_session_tasks_stats_latest" AS\n    SELECT iss.*\n      FROM ur_ingest_session_tasks_stats AS iss\n      JOIN (  SELECT ur_ingest_session.ur_ingest_session_id AS latest_session_id\n                FROM ur_ingest_session\n            ORDER BY ur_ingest_session.ingest_finished_at DESC\n               LIMIT 1) AS latest\n        ON iss.ingest_session_id = latest.latest_session_id;','\n',char(10)),'633501882d79e8bf255919bff540f9d0143489e3',NULL,NULL,NULL,NULL,'2023-12-04 04:00:25',NULL,NULL,NULL,'[{"code_notebook_cell_id":"01HGSFFG0TCTPVAJ73HYKJ29YM","notebook_kernel_id":"SQL","notebook_name":"ConstructionSqlNotebook","cell_name":"v002_urIngestSessionTasksStatsLatestViewDDL","cell_governance":null,"interpretable_code":"DROP VIEW IF EXISTS \"ur_ingest_session_tasks_stats_latest\";\nCREATE VIEW IF NOT EXISTS \"ur_ingest_session_tasks_stats_latest\" AS\n    SELECT iss.*\n      FROM ur_ingest_session_tasks_stats AS iss\n      JOIN (  SELECT ur_ingest_session.ur_ingest_session_id AS latest_session_id\n                FROM ur_ingest_session\n            ORDER BY ur_ingest_session.ingest_finished_at DESC\n               LIMIT 1) AS latest\n        ON iss.ingest_session_id = latest.latest_session_id;","interpretable_code_hash":"633501882d79e8bf255919bff540f9d0143489e3","description":null,"arguments":null,"created_at":null,"created_by":null,"updated_at":null,"updated_by":null,"deleted_at":null,"deleted_by":null,"activity_log":null}]');
INSERT INTO code_notebook_cell VALUES('01HGSFFG0TV17GRN3X47N9369C','SQL','ConstructionSqlNotebook','v002_urIngestSessionFileIssueViewDDL',NULL,replace('DROP VIEW IF EXISTS "ur_ingest_session_file_issue";\nCREATE VIEW IF NOT EXISTS "ur_ingest_session_file_issue" AS\n      SELECT us.device_id,\n             us.ur_ingest_session_id,\n             usp.ur_ingest_session_fs_path_id,\n             usp.root_path,\n             ufs.ur_ingest_session_fs_path_entry_id,\n             ufs.file_path_abs,\n             ufs.ur_status,\n             ufs.ur_diagnostics\n        FROM ur_ingest_session_fs_path_entry ufs\n        JOIN ur_ingest_session_fs_path usp ON ufs.ingest_fs_path_id = usp.ur_ingest_session_fs_path_id\n        JOIN ur_ingest_session us ON usp.ingest_session_id = us.ur_ingest_session_id\n       WHERE ufs.ur_status IS NOT NULL\n    GROUP BY us.device_id,\n             us.ur_ingest_session_id,\n             usp.ur_ingest_session_fs_path_id,\n             usp.root_path,\n             ufs.ur_ingest_session_fs_path_entry_id,\n             ufs.file_path_abs,\n             ufs.ur_status,\n             ufs.ur_diagnostics;','\n',char(10)),'99136e34dcf27424fa7b873b319ac5400786691e',NULL,NULL,NULL,NULL,'2023-12-04 04:00:25',NULL,NULL,NULL,'[{"code_notebook_cell_id":"01HGSFFG0TV17GRN3X47N9369C","notebook_kernel_id":"SQL","notebook_name":"ConstructionSqlNotebook","cell_name":"v002_urIngestSessionFileIssueViewDDL","cell_governance":null,"interpretable_code":"DROP VIEW IF EXISTS \"ur_ingest_session_file_issue\";\nCREATE VIEW IF NOT EXISTS \"ur_ingest_session_file_issue\" AS\n      SELECT us.device_id,\n             us.ur_ingest_session_id,\n             usp.ur_ingest_session_fs_path_id,\n             usp.root_path,\n             ufs.ur_ingest_session_fs_path_entry_id,\n             ufs.file_path_abs,\n             ufs.ur_status,\n             ufs.ur_diagnostics\n        FROM ur_ingest_session_fs_path_entry ufs\n        JOIN ur_ingest_session_fs_path usp ON ufs.ingest_fs_path_id = usp.ur_ingest_session_fs_path_id\n        JOIN ur_ingest_session us ON usp.ingest_session_id = us.ur_ingest_session_id\n       WHERE ufs.ur_status IS NOT NULL\n    GROUP BY us.device_id,\n             us.ur_ingest_session_id,\n             usp.ur_ingest_session_fs_path_id,\n             usp.root_path,\n             ufs.ur_ingest_session_fs_path_entry_id,\n             ufs.file_path_abs,\n             ufs.ur_status,\n             ufs.ur_diagnostics;","interpretable_code_hash":"99136e34dcf27424fa7b873b319ac5400786691e","description":null,"arguments":null,"created_at":null,"created_by":null,"updated_at":null,"updated_by":null,"deleted_at":null,"deleted_by":null,"activity_log":null}]');
INSERT INTO code_notebook_cell VALUES('01HGSFFG0TY0A1CNKN3DNVRGJN','SQL','QuerySqlNotebook','infoSchema',NULL,replace('SELECT tbl_name AS table_name,\n       c.cid AS column_id,\n       c.name AS column_name,\n       c."type" AS "type",\n       c."notnull" AS "notnull",\n       c.dflt_value as "default_value",\n       c.pk AS primary_key\n  FROM sqlite_master m,\n       pragma_table_info(m.tbl_name) c\n WHERE m.type = ''table'';','\n',char(10)),'b51a0cbc609deb9b4046bb02b670e7686ac678fe',NULL,NULL,NULL,NULL,'2023-12-04 04:00:25',NULL,NULL,NULL,'[{"code_notebook_cell_id":"01HGSFFG0TY0A1CNKN3DNVRGJN","notebook_kernel_id":"SQL","notebook_name":"QuerySqlNotebook","cell_name":"infoSchema","cell_governance":null,"interpretable_code":"SELECT tbl_name AS table_name,\n       c.cid AS column_id,\n       c.name AS column_name,\n       c.\"type\" AS \"type\",\n       c.\"notnull\" AS \"notnull\",\n       c.dflt_value as \"default_value\",\n       c.pk AS primary_key\n  FROM sqlite_master m,\n       pragma_table_info(m.tbl_name) c\n WHERE m.type = ''table'';","interpretable_code_hash":"b51a0cbc609deb9b4046bb02b670e7686ac678fe","description":null,"arguments":null,"created_at":null,"created_by":null,"updated_at":null,"updated_by":null,"deleted_at":null,"deleted_by":null,"activity_log":null}]');
INSERT INTO code_notebook_cell VALUES('01HGSFFG0V1HSQQCQ4WKM44JFA','SQL','QuerySqlNotebook','infoSchemaOsQueryATCs',NULL,replace('WITH table_columns AS (\n    SELECT m.tbl_name AS table_name,\n           group_concat(c.name) AS column_names_for_select,\n           json_group_array(c.name) AS column_names_for_atc_json\n      FROM sqlite_master m,\n           pragma_table_info(m.tbl_name) c\n     WHERE m.type = ''table''\n  GROUP BY m.tbl_name\n),\ntarget AS (\n  -- set SQLite parameter :osquery_atc_path to assign a different path\n  SELECT COALESCE(:osquery_atc_path, ''SQLITEDB_PATH'') AS path\n),\ntable_query AS (\n    SELECT table_name,\n           ''SELECT '' || column_names_for_select || '' FROM '' || table_name AS query,\n           column_names_for_atc_json\n      FROM table_columns\n)\nSELECT json_object(''auto_table_construction'',\n          json_group_object(\n              table_name,\n              json_object(\n                  ''query'', query,\n                  ''columns'', json(column_names_for_atc_json),\n                  ''path'', path\n              )\n          )\n       ) AS osquery_auto_table_construction\n  FROM table_query, target;','\n',char(10)),'375b0b4fe291ebac350dc4ed9304f17b57ba8e44',NULL,NULL,NULL,NULL,'2023-12-04 04:00:25',NULL,NULL,NULL,'[{"code_notebook_cell_id":"01HGSFFG0V1HSQQCQ4WKM44JFA","notebook_kernel_id":"SQL","notebook_name":"QuerySqlNotebook","cell_name":"infoSchemaOsQueryATCs","cell_governance":null,"interpretable_code":"WITH table_columns AS (\n    SELECT m.tbl_name AS table_name,\n           group_concat(c.name) AS column_names_for_select,\n           json_group_array(c.name) AS column_names_for_atc_json\n      FROM sqlite_master m,\n           pragma_table_info(m.tbl_name) c\n     WHERE m.type = ''table''\n  GROUP BY m.tbl_name\n),\ntarget AS (\n  -- set SQLite parameter :osquery_atc_path to assign a different path\n  SELECT COALESCE(:osquery_atc_path, ''SQLITEDB_PATH'') AS path\n),\ntable_query AS (\n    SELECT table_name,\n           ''SELECT '' || column_names_for_select || '' FROM '' || table_name AS query,\n           column_names_for_atc_json\n      FROM table_columns\n)\nSELECT json_object(''auto_table_construction'',\n          json_group_object(\n              table_name,\n              json_object(\n                  ''query'', query,\n                  ''columns'', json(column_names_for_atc_json),\n                  ''path'', path\n              )\n          )\n       ) AS osquery_auto_table_construction\n  FROM table_query, target;","interpretable_code_hash":"375b0b4fe291ebac350dc4ed9304f17b57ba8e44","description":null,"arguments":null,"created_at":null,"created_by":null,"updated_at":null,"updated_by":null,"deleted_at":null,"deleted_by":null,"activity_log":null}]');
INSERT INTO code_notebook_cell VALUES('01HGSFFG0VFA67FV6Y4VKJQ0JA','SQL','QuerySqlNotebook','infoSchemaMarkdown',NULL,replace('-- TODO: https://github.com/lovasoa/SQLpage/discussions/109#discussioncomment-7359513\n--       see the above for how to fix for SQLPage but figure out to use the same SQL\n--       in and out of SQLPage (maybe do what Ophir said in discussion and create\n--       custom output for SQLPage using componetns?)\nWITH TableInfo AS (\n  SELECT\n    m.tbl_name AS table_name,\n    CASE WHEN c.pk THEN ''*'' ELSE '''' END AS is_primary_key,\n    c.name AS column_name,\n    c."type" AS column_type,\n    CASE WHEN c."notnull" THEN ''*'' ELSE '''' END AS not_null,\n    COALESCE(c.dflt_value, '''') AS default_value,\n    COALESCE((SELECT pfkl."table" || ''.'' || pfkl."to" FROM pragma_foreign_key_list(m.tbl_name) AS pfkl WHERE pfkl."from" = c.name), '''') as fk_refs,\n    ROW_NUMBER() OVER (PARTITION BY m.tbl_name ORDER BY c.cid) AS row_num\n  FROM sqlite_master m JOIN pragma_table_info(m.tbl_name) c ON 1=1\n  WHERE m.type = ''table''\n  ORDER BY table_name, row_num\n),\nViews AS (\n  SELECT ''## Views '' AS markdown_output\n  UNION ALL\n  SELECT ''| View | Column | Type |'' AS markdown_output\n  UNION ALL\n  SELECT ''| ---- | ------ |----- |'' AS markdown_output\n  UNION ALL\n  SELECT ''| '' || tbl_name || '' | '' || c.name || '' | '' || c."type" || '' | ''\n  FROM\n    sqlite_master m,\n    pragma_table_info(m.tbl_name) c\n  WHERE\n    m.type = ''view''\n),\nIndexes AS (\n  SELECT ''## Indexes'' AS markdown_output\n  UNION ALL\n  SELECT ''| Table | Index | Columns |'' AS markdown_output\n  UNION ALL\n  SELECT ''| ----- | ----- | ------- |'' AS markdown_output\n  UNION ALL\n  SELECT ''| '' ||  m.name || '' | '' || il.name || '' | '' || group_concat(ii.name, '', '') || '' |'' AS markdown_output\n  FROM sqlite_master as m,\n    pragma_index_list(m.name) AS il,\n    pragma_index_info(il.name) AS ii\n  WHERE\n    m.type = ''table''\n  GROUP BY\n    m.name,\n    il.name\n)\nSELECT\n    markdown_output AS info_schema_markdown\nFROM\n  (\n    SELECT ''## Tables'' AS markdown_output\n    UNION ALL\n    SELECT\n      CASE WHEN ti.row_num = 1 THEN ''\n### `'' || ti.table_name || ''` Table\n| PK | Column | Type | Req? | Default | References |\n| -- | ------ | ---- | ---- | ------- | ---------- |\n'' ||\n        ''| '' || is_primary_key || '' | '' || ti.column_name || '' | '' || ti.column_type || '' | '' || ti.not_null || '' | '' || ti.default_value || '' | '' || ti.fk_refs || '' |''\n      ELSE\n        ''| '' || is_primary_key || '' | '' || ti.column_name || '' | '' || ti.column_type || '' | '' || ti.not_null || '' | '' || ti.default_value || '' | '' || ti.fk_refs || '' |''\n      END\n    FROM TableInfo ti\n    UNION ALL SELECT ''''\n    UNION ALL SELECT * FROM	Views\n    UNION ALL SELECT ''''\n    UNION ALL SELECT * FROM Indexes\n);','\n',char(10)),'cbe800ad94b1b90f0045a78a03e9da246e46ff75',NULL,NULL,NULL,NULL,'2023-12-04 04:00:25',NULL,NULL,NULL,'[{"code_notebook_cell_id":"01HGSFFG0VFA67FV6Y4VKJQ0JA","notebook_kernel_id":"SQL","notebook_name":"QuerySqlNotebook","cell_name":"infoSchemaMarkdown","cell_governance":null,"interpretable_code":"-- TODO: https://github.com/lovasoa/SQLpage/discussions/109#discussioncomment-7359513\n--       see the above for how to fix for SQLPage but figure out to use the same SQL\n--       in and out of SQLPage (maybe do what Ophir said in discussion and create\n--       custom output for SQLPage using componetns?)\nWITH TableInfo AS (\n  SELECT\n    m.tbl_name AS table_name,\n    CASE WHEN c.pk THEN ''*'' ELSE '''' END AS is_primary_key,\n    c.name AS column_name,\n    c.\"type\" AS column_type,\n    CASE WHEN c.\"notnull\" THEN ''*'' ELSE '''' END AS not_null,\n    COALESCE(c.dflt_value, '''') AS default_value,\n    COALESCE((SELECT pfkl.\"table\" || ''.'' || pfkl.\"to\" FROM pragma_foreign_key_list(m.tbl_name) AS pfkl WHERE pfkl.\"from\" = c.name), '''') as fk_refs,\n    ROW_NUMBER() OVER (PARTITION BY m.tbl_name ORDER BY c.cid) AS row_num\n  FROM sqlite_master m JOIN pragma_table_info(m.tbl_name) c ON 1=1\n  WHERE m.type = ''table''\n  ORDER BY table_name, row_num\n),\nViews AS (\n  SELECT ''## Views '' AS markdown_output\n  UNION ALL\n  SELECT ''| View | Column | Type |'' AS markdown_output\n  UNION ALL\n  SELECT ''| ---- | ------ |----- |'' AS markdown_output\n  UNION ALL\n  SELECT ''| '' || tbl_name || '' | '' || c.name || '' | '' || c.\"type\" || '' | ''\n  FROM\n    sqlite_master m,\n    pragma_table_info(m.tbl_name) c\n  WHERE\n    m.type = ''view''\n),\nIndexes AS (\n  SELECT ''## Indexes'' AS markdown_output\n  UNION ALL\n  SELECT ''| Table | Index | Columns |'' AS markdown_output\n  UNION ALL\n  SELECT ''| ----- | ----- | ------- |'' AS markdown_output\n  UNION ALL\n  SELECT ''| '' ||  m.name || '' | '' || il.name || '' | '' || group_concat(ii.name, '', '') || '' |'' AS markdown_output\n  FROM sqlite_master as m,\n    pragma_index_list(m.name) AS il,\n    pragma_index_info(il.name) AS ii\n  WHERE\n    m.type = ''table''\n  GROUP BY\n    m.name,\n    il.name\n)\nSELECT\n    markdown_output AS info_schema_markdown\nFROM\n  (\n    SELECT ''## Tables'' AS markdown_output\n    UNION ALL\n    SELECT\n      CASE WHEN ti.row_num = 1 THEN ''\n### `'' || ti.table_name || ''` Table\n| PK | Column | Type | Req? | Default | References |\n| -- | ------ | ---- | ---- | ------- | ---------- |\n'' ||\n        ''| '' || is_primary_key || '' | '' || ti.column_name || '' | '' || ti.column_type || '' | '' || ti.not_null || '' | '' || ti.default_value || '' | '' || ti.fk_refs || '' |''\n      ELSE\n        ''| '' || is_primary_key || '' | '' || ti.column_name || '' | '' || ti.column_type || '' | '' || ti.not_null || '' | '' || ti.default_value || '' | '' || ti.fk_refs || '' |''\n      END\n    FROM TableInfo ti\n    UNION ALL SELECT ''''\n    UNION ALL SELECT * FROM\tViews\n    UNION ALL SELECT ''''\n    UNION ALL SELECT * FROM Indexes\n);","interpretable_code_hash":"cbe800ad94b1b90f0045a78a03e9da246e46ff75","description":null,"arguments":null,"created_at":null,"created_by":null,"updated_at":null,"updated_by":null,"deleted_at":null,"deleted_by":null,"activity_log":null}]');
INSERT INTO code_notebook_cell VALUES('01HGSFFG0V9Q7JYZS0PBG6TRD6','SQL','QuerySqlNotebook','htmlAnchors',NULL,replace('-- loadExtnSQL not provided to load ''asg017/html/html0''\n\n-- find all HTML files in the uniform_resource table and return\n-- each file and the anchors'' labels and hrefs in that file\n-- TODO: create a table called fs_content_html_anchor to store this data after inserting it into uniform_resource\n--       so that simple HTML lookups do not require the html0 extension to be loaded\nWITH html_content AS (\n  SELECT uniform_resource_id, content, content_digest, file_path, file_extn FROM uniform_resource WHERE nature = ''html''\n),\nhtml AS (\n  SELECT file_path,\n         text as label,\n         html_attribute_get(html, ''a'', ''href'') as href\n    FROM html_content, html_each(html_content.content, ''a'')\n)\nSELECT * FROM html;\n      ','\n',char(10)),'7d9cdf2286d82fae97cb3652e6b17744ebf7c817',NULL,NULL,NULL,NULL,'2023-12-04 04:00:25',NULL,NULL,NULL,'[{"code_notebook_cell_id":"01HGSFFG0V9Q7JYZS0PBG6TRD6","notebook_kernel_id":"SQL","notebook_name":"QuerySqlNotebook","cell_name":"htmlAnchors","cell_governance":null,"interpretable_code":"-- loadExtnSQL not provided to load ''asg017/html/html0''\n\n-- find all HTML files in the uniform_resource table and return\n-- each file and the anchors'' labels and hrefs in that file\n-- TODO: create a table called fs_content_html_anchor to store this data after inserting it into uniform_resource\n--       so that simple HTML lookups do not require the html0 extension to be loaded\nWITH html_content AS (\n  SELECT uniform_resource_id, content, content_digest, file_path, file_extn FROM uniform_resource WHERE nature = ''html''\n),\nhtml AS (\n  SELECT file_path,\n         text as label,\n         html_attribute_get(html, ''a'', ''href'') as href\n    FROM html_content, html_each(html_content.content, ''a'')\n)\nSELECT * FROM html;\n      ","interpretable_code_hash":"7d9cdf2286d82fae97cb3652e6b17744ebf7c817","description":null,"arguments":null,"created_at":null,"created_by":null,"updated_at":null,"updated_by":null,"deleted_at":null,"deleted_by":null,"activity_log":null}]');
INSERT INTO code_notebook_cell VALUES('01HGSFFG0VXDGXYMRQAERQ9PM7','SQL','QuerySqlNotebook','htmlHeadMeta',NULL,replace('-- loadExtnSQL not provided to load ''asg017/html/html0''\n\n-- find all HTML files in the uniform_resource table and return\n-- each file and the <head><meta name="key" content="value"> pair\n-- TODO: create a table called resource_html_head_meta to store this data after inserting it into uniform_resource\n--       so that simple HTML lookups do not require the html0 extension to be loaded\nWITH html_content AS (\n  SELECT uniform_resource_id, content, content_digest, file_path, file_extn FROM uniform_resource WHERE nature = ''html''\n),\nhtml AS (\n  SELECT file_path,\n         html_attribute_get(html, ''meta'', ''name'') as key,\n         html_attribute_get(html, ''meta'', ''content'') as value,\n         html\n    FROM html_content, html_each(html_content.content, ''head meta'')\n   WHERE key IS NOT NULL\n)\nSELECT * FROM html;\n      ','\n',char(10)),'70d990a17e2ce8d0ee2cf6dd368390c8b1db7645',NULL,NULL,NULL,NULL,'2023-12-04 04:00:25',NULL,NULL,NULL,'[{"code_notebook_cell_id":"01HGSFFG0VXDGXYMRQAERQ9PM7","notebook_kernel_id":"SQL","notebook_name":"QuerySqlNotebook","cell_name":"htmlHeadMeta","cell_governance":null,"interpretable_code":"-- loadExtnSQL not provided to load ''asg017/html/html0''\n\n-- find all HTML files in the uniform_resource table and return\n-- each file and the <head><meta name=\"key\" content=\"value\"> pair\n-- TODO: create a table called resource_html_head_meta to store this data after inserting it into uniform_resource\n--       so that simple HTML lookups do not require the html0 extension to be loaded\nWITH html_content AS (\n  SELECT uniform_resource_id, content, content_digest, file_path, file_extn FROM uniform_resource WHERE nature = ''html''\n),\nhtml AS (\n  SELECT file_path,\n         html_attribute_get(html, ''meta'', ''name'') as key,\n         html_attribute_get(html, ''meta'', ''content'') as value,\n         html\n    FROM html_content, html_each(html_content.content, ''head meta'')\n   WHERE key IS NOT NULL\n)\nSELECT * FROM html;\n      ","interpretable_code_hash":"70d990a17e2ce8d0ee2cf6dd368390c8b1db7645","description":null,"arguments":null,"created_at":null,"created_by":null,"updated_at":null,"updated_by":null,"deleted_at":null,"deleted_by":null,"activity_log":null}]');
INSERT INTO code_notebook_cell VALUES('01HGSFFG0VPBCG2PR6EFDNTP7T','SQL','AssuranceSqlNotebook','test1',NULL,replace('WITH test_plan AS (\n    SELECT ''1..1'' AS tap_output\n),\ntest1 AS (  -- Check if the ''fileio'' extension is loaded by calling the ''readfile'' function\n    SELECT\n        CASE\n            WHEN readfile(''README.md'') IS NOT NULL THEN ''ok 1 - fileio extension is loaded.''\n            ELSE ''not ok 1 - fileio extension is not loaded.''\n        END AS tap_output\n    FROM (SELECT 1) -- This is a dummy table of one row to ensure the SELECT runs.\n)\nSELECT tap_output FROM test_plan\nUNION ALL\nSELECT tap_output FROM test1;','\n',char(10)),'083111d6c0f2b4b0670eee784f113ddd8619187d',NULL,NULL,NULL,NULL,'2023-12-04 04:00:25',NULL,NULL,NULL,'[{"code_notebook_cell_id":"01HGSFFG0VPBCG2PR6EFDNTP7T","notebook_kernel_id":"SQL","notebook_name":"AssuranceSqlNotebook","cell_name":"test1","cell_governance":null,"interpretable_code":"WITH test_plan AS (\n    SELECT ''1..1'' AS tap_output\n),\ntest1 AS (  -- Check if the ''fileio'' extension is loaded by calling the ''readfile'' function\n    SELECT\n        CASE\n            WHEN readfile(''README.md'') IS NOT NULL THEN ''ok 1 - fileio extension is loaded.''\n            ELSE ''not ok 1 - fileio extension is not loaded.''\n        END AS tap_output\n    FROM (SELECT 1) -- This is a dummy table of one row to ensure the SELECT runs.\n)\nSELECT tap_output FROM test_plan\nUNION ALL\nSELECT tap_output FROM test1;","interpretable_code_hash":"083111d6c0f2b4b0670eee784f113ddd8619187d","description":null,"arguments":null,"created_at":null,"created_by":null,"updated_at":null,"updated_by":null,"deleted_at":null,"deleted_by":null,"activity_log":null}]');
INSERT INTO code_notebook_cell VALUES('01HGSFFG0VNRV3WNPH5A0SJV4X','LLM Prompt','LargeLanguageModelsPromptsNotebook','understand notebooks schema',NULL,replace('Understand the following structure of an SQLite database designed to store code notebooks and execution kernels. The database comprises three main tables: ''code_notebook_kernel'', ''code_notebook_cell'', and ''code_notebook_state''.\n\n1. ''code_notebook_kernel'': This table stores information about various kernels or execution engines. Each record includes a unique kernel ID, kernel name, a description, MIME type, file extension, and other metadata such as creation and update timestamps.\n\n2. ''code_notebook_cell'': This table contains individual notebook cells. Each cell is linked to a kernel in the ''code_notebook_kernel'' table via ''notebook_kernel_id''. It includes details like the cell''s unique ID, notebook name, cell name, interpretable code, and relevant metadata.\n\n3. ''code_notebook_state'': This table tracks the state transitions of notebook cells. Each record links to a cell in the ''code_notebook_cell'' table and includes information about the state transition, such as the previous and new states, transition reason, and timestamps.\n\nThe relationships are as follows: Each cell in ''code_notebook_cell'' is associated with a kernel in ''code_notebook_kernel''. The ''code_notebook_state'' table tracks changes in the state of each cell, linking back to the ''code_notebook_cell'' table.\n\nUse the following SQLite Schema to generate SQL queries that interact with these tables and once you understand them let me know so I can ask you for help:\n\nCREATE TABLE IF NOT EXISTS "assurance_schema" (\n    "assurance_schema_id" VARCHAR PRIMARY KEY NOT NULL,\n    "assurance_type" TEXT NOT NULL,\n    "code" TEXT NOT NULL,\n    "code_json" TEXT CHECK(json_valid(code_json) OR code_json IS NULL),\n    "governance" TEXT CHECK(json_valid(governance) OR governance IS NULL),\n    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "created_by" TEXT DEFAULT ''UNKNOWN'',\n    "updated_at" TIMESTAMP,\n    "updated_by" TEXT,\n    "deleted_at" TIMESTAMP,\n    "deleted_by" TEXT,\n    "activity_log" TEXT\n);\nCREATE TABLE IF NOT EXISTS "code_notebook_kernel" (\n    "code_notebook_kernel_id" VARCHAR PRIMARY KEY NOT NULL,\n    "kernel_name" TEXT NOT NULL,\n    "description" TEXT,\n    "mime_type" TEXT,\n    "file_extn" TEXT,\n    "elaboration" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    "governance" TEXT CHECK(json_valid(governance) OR governance IS NULL),\n    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "created_by" TEXT DEFAULT ''UNKNOWN'',\n    "updated_at" TIMESTAMP,\n    "updated_by" TEXT,\n    "deleted_at" TIMESTAMP,\n    "deleted_by" TEXT,\n    "activity_log" TEXT,\n    UNIQUE("kernel_name")\n);\nCREATE TABLE IF NOT EXISTS "code_notebook_cell" (\n    "code_notebook_cell_id" VARCHAR PRIMARY KEY NOT NULL,\n    "notebook_kernel_id" VARCHAR NOT NULL,\n    "notebook_name" TEXT NOT NULL,\n    "cell_name" TEXT NOT NULL,\n    "cell_governance" TEXT CHECK(json_valid(cell_governance) OR cell_governance IS NULL),\n    "interpretable_code" TEXT NOT NULL,\n    "interpretable_code_hash" TEXT NOT NULL,\n    "description" TEXT,\n    "arguments" TEXT CHECK(json_valid(arguments) OR arguments IS NULL),\n    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "created_by" TEXT DEFAULT ''UNKNOWN'',\n    "updated_at" TIMESTAMP,\n    "updated_by" TEXT,\n    "deleted_at" TIMESTAMP,\n    "deleted_by" TEXT,\n    "activity_log" TEXT,\n    FOREIGN KEY("notebook_kernel_id") REFERENCES "code_notebook_kernel"("code_notebook_kernel_id"),\n    UNIQUE("notebook_name", "cell_name", "interpretable_code_hash")\n);\nCREATE TABLE IF NOT EXISTS "code_notebook_state" (\n    "code_notebook_state_id" VARCHAR PRIMARY KEY NOT NULL,\n    "code_notebook_cell_id" VARCHAR NOT NULL,\n    "from_state" TEXT NOT NULL,\n    "to_state" TEXT NOT NULL,\n    "transition_result" TEXT CHECK(json_valid(transition_result) OR transition_result IS NULL),\n    "transition_reason" TEXT,\n    "transitioned_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "elaboration" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "created_by" TEXT DEFAULT ''UNKNOWN'',\n    "updated_at" TIMESTAMP,\n    "updated_by" TEXT,\n    "deleted_at" TIMESTAMP,\n    "deleted_by" TEXT,\n    "activity_log" TEXT,\n    FOREIGN KEY("code_notebook_cell_id") REFERENCES "code_notebook_cell"("code_notebook_cell_id"),\n    UNIQUE("code_notebook_cell_id", "from_state", "to_state")\n);\n\n\n\n      ','\n',char(10)),'43f5aa0f274dacd9df5d0fd9f9643c3e2a1dc624',NULL,NULL,NULL,NULL,'2023-12-04 04:00:25',NULL,NULL,NULL,'[{"code_notebook_cell_id":"01HGSFFG0VNRV3WNPH5A0SJV4X","notebook_kernel_id":"LLM Prompt","notebook_name":"LargeLanguageModelsPromptsNotebook","cell_name":"understand notebooks schema","cell_governance":null,"interpretable_code":"Understand the following structure of an SQLite database designed to store code notebooks and execution kernels. The database comprises three main tables: ''code_notebook_kernel'', ''code_notebook_cell'', and ''code_notebook_state''.\n\n1. ''code_notebook_kernel'': This table stores information about various kernels or execution engines. Each record includes a unique kernel ID, kernel name, a description, MIME type, file extension, and other metadata such as creation and update timestamps.\n\n2. ''code_notebook_cell'': This table contains individual notebook cells. Each cell is linked to a kernel in the ''code_notebook_kernel'' table via ''notebook_kernel_id''. It includes details like the cell''s unique ID, notebook name, cell name, interpretable code, and relevant metadata.\n\n3. ''code_notebook_state'': This table tracks the state transitions of notebook cells. Each record links to a cell in the ''code_notebook_cell'' table and includes information about the state transition, such as the previous and new states, transition reason, and timestamps.\n\nThe relationships are as follows: Each cell in ''code_notebook_cell'' is associated with a kernel in ''code_notebook_kernel''. The ''code_notebook_state'' table tracks changes in the state of each cell, linking back to the ''code_notebook_cell'' table.\n\nUse the following SQLite Schema to generate SQL queries that interact with these tables and once you understand them let me know so I can ask you for help:\n\nCREATE TABLE IF NOT EXISTS \"assurance_schema\" (\n    \"assurance_schema_id\" VARCHAR PRIMARY KEY NOT NULL,\n    \"assurance_type\" TEXT NOT NULL,\n    \"code\" TEXT NOT NULL,\n    \"code_json\" TEXT CHECK(json_valid(code_json) OR code_json IS NULL),\n    \"governance\" TEXT CHECK(json_valid(governance) OR governance IS NULL),\n    \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"created_by\" TEXT DEFAULT ''UNKNOWN'',\n    \"updated_at\" TIMESTAMP,\n    \"updated_by\" TEXT,\n    \"deleted_at\" TIMESTAMP,\n    \"deleted_by\" TEXT,\n    \"activity_log\" TEXT\n);\nCREATE TABLE IF NOT EXISTS \"code_notebook_kernel\" (\n    \"code_notebook_kernel_id\" VARCHAR PRIMARY KEY NOT NULL,\n    \"kernel_name\" TEXT NOT NULL,\n    \"description\" TEXT,\n    \"mime_type\" TEXT,\n    \"file_extn\" TEXT,\n    \"elaboration\" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    \"governance\" TEXT CHECK(json_valid(governance) OR governance IS NULL),\n    \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"created_by\" TEXT DEFAULT ''UNKNOWN'',\n    \"updated_at\" TIMESTAMP,\n    \"updated_by\" TEXT,\n    \"deleted_at\" TIMESTAMP,\n    \"deleted_by\" TEXT,\n    \"activity_log\" TEXT,\n    UNIQUE(\"kernel_name\")\n);\nCREATE TABLE IF NOT EXISTS \"code_notebook_cell\" (\n    \"code_notebook_cell_id\" VARCHAR PRIMARY KEY NOT NULL,\n    \"notebook_kernel_id\" VARCHAR NOT NULL,\n    \"notebook_name\" TEXT NOT NULL,\n    \"cell_name\" TEXT NOT NULL,\n    \"cell_governance\" TEXT CHECK(json_valid(cell_governance) OR cell_governance IS NULL),\n    \"interpretable_code\" TEXT NOT NULL,\n    \"interpretable_code_hash\" TEXT NOT NULL,\n    \"description\" TEXT,\n    \"arguments\" TEXT CHECK(json_valid(arguments) OR arguments IS NULL),\n    \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"created_by\" TEXT DEFAULT ''UNKNOWN'',\n    \"updated_at\" TIMESTAMP,\n    \"updated_by\" TEXT,\n    \"deleted_at\" TIMESTAMP,\n    \"deleted_by\" TEXT,\n    \"activity_log\" TEXT,\n    FOREIGN KEY(\"notebook_kernel_id\") REFERENCES \"code_notebook_kernel\"(\"code_notebook_kernel_id\"),\n    UNIQUE(\"notebook_name\", \"cell_name\", \"interpretable_code_hash\")\n);\nCREATE TABLE IF NOT EXISTS \"code_notebook_state\" (\n    \"code_notebook_state_id\" VARCHAR PRIMARY KEY NOT NULL,\n    \"code_notebook_cell_id\" VARCHAR NOT NULL,\n    \"from_state\" TEXT NOT NULL,\n    \"to_state\" TEXT NOT NULL,\n    \"transition_result\" TEXT CHECK(json_valid(transition_result) OR transition_result IS NULL),\n    \"transition_reason\" TEXT,\n    \"transitioned_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"elaboration\" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"created_by\" TEXT DEFAULT ''UNKNOWN'',\n    \"updated_at\" TIMESTAMP,\n    \"updated_by\" TEXT,\n    \"deleted_at\" TIMESTAMP,\n    \"deleted_by\" TEXT,\n    \"activity_log\" TEXT,\n    FOREIGN KEY(\"code_notebook_cell_id\") REFERENCES \"code_notebook_cell\"(\"code_notebook_cell_id\"),\n    UNIQUE(\"code_notebook_cell_id\", \"from_state\", \"to_state\")\n);\n\n\n\n      ","interpretable_code_hash":"43f5aa0f274dacd9df5d0fd9f9643c3e2a1dc624","description":null,"arguments":null,"created_at":null,"created_by":null,"updated_at":null,"updated_by":null,"deleted_at":null,"deleted_by":null,"activity_log":null}]');
INSERT INTO code_notebook_cell VALUES('01HGSFFG0V2ZJ92R8T9D7Z1FDA','LLM Prompt','LargeLanguageModelsPromptsNotebook','understand service schema',NULL,replace('Understand the following structure of an SQLite database designed to store cybersecurity and compliance data for files in a file system.\nThe database is designed to store devices in the ''device'' table and entities called ''resources'' stored in the immutable append-only\n''uniform_resource'' table. Each time files are "walked" they are stored in ingestion session and link back to ''uniform_resource''. Because all\ntables are generally append only and immutable it means that the ingest_session_fs_path_entry table can be used for revision control\nand historical tracking of file changes.\n\nUse the following SQLite Schema to generate SQL queries that interact with these tables and once you understand them let me know so I can ask you for help:\n\nCREATE TABLE IF NOT EXISTS "device" (\n    "device_id" VARCHAR PRIMARY KEY NOT NULL,\n    "name" TEXT NOT NULL,\n    "state" TEXT CHECK(json_valid(state)) NOT NULL,\n    "boundary" TEXT NOT NULL,\n    "segmentation" TEXT CHECK(json_valid(segmentation) OR segmentation IS NULL),\n    "state_sysinfo" TEXT CHECK(json_valid(state_sysinfo) OR state_sysinfo IS NULL),\n    "elaboration" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "created_by" TEXT DEFAULT ''UNKNOWN'',\n    "updated_at" TIMESTAMP,\n    "updated_by" TEXT,\n    "deleted_at" TIMESTAMP,\n    "deleted_by" TEXT,\n    "activity_log" TEXT,\n    UNIQUE("name", "state", "boundary")\n);\nCREATE TABLE IF NOT EXISTS "behavior" (\n    "behavior_id" VARCHAR PRIMARY KEY NOT NULL,\n    "device_id" VARCHAR NOT NULL,\n    "behavior_name" TEXT NOT NULL,\n    "behavior_conf_json" TEXT CHECK(json_valid(behavior_conf_json)) NOT NULL,\n    "assurance_schema_id" VARCHAR,\n    "governance" TEXT CHECK(json_valid(governance) OR governance IS NULL),\n    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "created_by" TEXT DEFAULT ''UNKNOWN'',\n    "updated_at" TIMESTAMP,\n    "updated_by" TEXT,\n    "deleted_at" TIMESTAMP,\n    "deleted_by" TEXT,\n    "activity_log" TEXT,\n    FOREIGN KEY("device_id") REFERENCES "device"("device_id"),\n    FOREIGN KEY("assurance_schema_id") REFERENCES "assurance_schema"("assurance_schema_id"),\n    UNIQUE("device_id", "behavior_name")\n);\nCREATE TABLE IF NOT EXISTS "ur_ingest_resource_path_match_rule" (\n    "ur_ingest_resource_path_match_rule_id" VARCHAR PRIMARY KEY NOT NULL,\n    "namespace" TEXT NOT NULL,\n    "regex" TEXT NOT NULL,\n    "flags" TEXT NOT NULL,\n    "nature_regex_capture" TEXT,\n    "description" TEXT,\n    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "created_by" TEXT DEFAULT ''UNKNOWN'',\n    "updated_at" TIMESTAMP,\n    "updated_by" TEXT,\n    "deleted_at" TIMESTAMP,\n    "deleted_by" TEXT,\n    "activity_log" TEXT,\n    UNIQUE("namespace", "regex")\n);\nCREATE TABLE IF NOT EXISTS "ur_ingest_resource_path_rewrite_rule" (\n    "ur_ingest_resource_path_rewrite_rule_id" VARCHAR PRIMARY KEY NOT NULL,\n    "namespace" TEXT NOT NULL,\n    "regex" TEXT NOT NULL,\n    "replace" TEXT NOT NULL,\n    "description" TEXT,\n    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "created_by" TEXT DEFAULT ''UNKNOWN'',\n    "updated_at" TIMESTAMP,\n    "updated_by" TEXT,\n    "deleted_at" TIMESTAMP,\n    "deleted_by" TEXT,\n    "activity_log" TEXT,\n    UNIQUE("namespace", "regex", "replace")\n);\nCREATE TABLE IF NOT EXISTS "ur_ingest_session" (\n    "ur_ingest_session_id" VARCHAR PRIMARY KEY NOT NULL,\n    "device_id" VARCHAR NOT NULL,\n    "behavior_id" VARCHAR,\n    "behavior_json" TEXT CHECK(json_valid(behavior_json) OR behavior_json IS NULL),\n    "ingest_started_at" TIMESTAMP NOT NULL,\n    "ingest_finished_at" TIMESTAMP,\n    "elaboration" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "created_by" TEXT DEFAULT ''UNKNOWN'',\n    "updated_at" TIMESTAMP,\n    "updated_by" TEXT,\n    "deleted_at" TIMESTAMP,\n    "deleted_by" TEXT,\n    "activity_log" TEXT,\n    FOREIGN KEY("device_id") REFERENCES "device"("device_id"),\n    FOREIGN KEY("behavior_id") REFERENCES "behavior"("behavior_id"),\n    UNIQUE("device_id", "created_at")\n);\nCREATE TABLE IF NOT EXISTS "ur_ingest_session_fs_path" (\n    "ur_ingest_session_fs_path_id" VARCHAR PRIMARY KEY NOT NULL,\n    "ingest_session_id" VARCHAR NOT NULL,\n    "root_path" TEXT NOT NULL,\n    "elaboration" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "created_by" TEXT DEFAULT ''UNKNOWN'',\n    "updated_at" TIMESTAMP,\n    "updated_by" TEXT,\n    "deleted_at" TIMESTAMP,\n    "deleted_by" TEXT,\n    "activity_log" TEXT,\n    FOREIGN KEY("ingest_session_id") REFERENCES "ur_ingest_session"("ur_ingest_session_id"),\n    UNIQUE("ingest_session_id", "root_path", "created_at")\n);\nCREATE TABLE IF NOT EXISTS "uniform_resource" (\n    "uniform_resource_id" VARCHAR PRIMARY KEY NOT NULL,\n    "device_id" VARCHAR NOT NULL,\n    "ingest_session_id" VARCHAR NOT NULL,\n    "ingest_fs_path_id" VARCHAR,\n    "uri" TEXT NOT NULL,\n    "content_digest" TEXT NOT NULL,\n    "content" BLOB,\n    "nature" TEXT,\n    "size_bytes" INTEGER,\n    "last_modified_at" TIMESTAMP,\n    "content_fm_body_attrs" TEXT CHECK(json_valid(content_fm_body_attrs) OR content_fm_body_attrs IS NULL),\n    "frontmatter" TEXT CHECK(json_valid(frontmatter) OR frontmatter IS NULL),\n    "elaboration" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "created_by" TEXT DEFAULT ''UNKNOWN'',\n    "updated_at" TIMESTAMP,\n    "updated_by" TEXT,\n    "deleted_at" TIMESTAMP,\n    "deleted_by" TEXT,\n    "activity_log" TEXT,\n    FOREIGN KEY("device_id") REFERENCES "device"("device_id"),\n    FOREIGN KEY("ingest_session_id") REFERENCES "ur_ingest_session"("ur_ingest_session_id"),\n    FOREIGN KEY("ingest_fs_path_id") REFERENCES "ur_ingest_session_fs_path"("ur_ingest_session_fs_path_id"),\n    UNIQUE("device_id", "content_digest", "uri", "size_bytes", "last_modified_at")\n);\nCREATE TABLE IF NOT EXISTS "uniform_resource_transform" (\n    "uniform_resource_transform_id" VARCHAR PRIMARY KEY NOT NULL,\n    "uniform_resource_id" VARCHAR NOT NULL,\n    "uri" TEXT NOT NULL,\n    "content_digest" TEXT NOT NULL,\n    "content" BLOB,\n    "nature" TEXT,\n    "size_bytes" INTEGER,\n    "elaboration" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "created_by" TEXT DEFAULT ''UNKNOWN'',\n    "updated_at" TIMESTAMP,\n    "updated_by" TEXT,\n    "deleted_at" TIMESTAMP,\n    "deleted_by" TEXT,\n    "activity_log" TEXT,\n    FOREIGN KEY("uniform_resource_id") REFERENCES "uniform_resource"("uniform_resource_id"),\n    UNIQUE("uniform_resource_id", "content_digest", "nature", "size_bytes")\n);\nCREATE TABLE IF NOT EXISTS "ur_ingest_session_fs_path_entry" (\n    "ur_ingest_session_fs_path_entry_id" VARCHAR PRIMARY KEY NOT NULL,\n    "ingest_session_id" VARCHAR NOT NULL,\n    "ingest_fs_path_id" VARCHAR NOT NULL,\n    "uniform_resource_id" VARCHAR,\n    "file_path_abs" TEXT NOT NULL,\n    "file_path_rel_parent" TEXT NOT NULL,\n    "file_path_rel" TEXT NOT NULL,\n    "file_basename" TEXT NOT NULL,\n    "file_extn" TEXT,\n    "captured_executable" TEXT CHECK(json_valid(captured_executable) OR captured_executable IS NULL),\n    "ur_status" TEXT,\n    "ur_diagnostics" TEXT CHECK(json_valid(ur_diagnostics) OR ur_diagnostics IS NULL),\n    "ur_transformations" TEXT CHECK(json_valid(ur_transformations) OR ur_transformations IS NULL),\n    "elaboration" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "created_by" TEXT DEFAULT ''UNKNOWN'',\n    "updated_at" TIMESTAMP,\n    "updated_by" TEXT,\n    "deleted_at" TIMESTAMP,\n    "deleted_by" TEXT,\n    "activity_log" TEXT,\n    FOREIGN KEY("ingest_session_id") REFERENCES "ur_ingest_session"("ur_ingest_session_id"),\n    FOREIGN KEY("ingest_fs_path_id") REFERENCES "ur_ingest_session_fs_path"("ur_ingest_session_fs_path_id"),\n    FOREIGN KEY("uniform_resource_id") REFERENCES "uniform_resource"("uniform_resource_id")\n);\nCREATE TABLE IF NOT EXISTS "ur_ingest_session_task" (\n    "ur_ingest_session_task_id" VARCHAR PRIMARY KEY NOT NULL,\n    "ingest_session_id" VARCHAR NOT NULL,\n    "uniform_resource_id" VARCHAR,\n    "captured_executable" TEXT CHECK(json_valid(captured_executable)) NOT NULL,\n    "ur_status" TEXT,\n    "ur_diagnostics" TEXT CHECK(json_valid(ur_diagnostics) OR ur_diagnostics IS NULL),\n    "ur_transformations" TEXT CHECK(json_valid(ur_transformations) OR ur_transformations IS NULL),\n    "elaboration" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "created_by" TEXT DEFAULT ''UNKNOWN'',\n    "updated_at" TIMESTAMP,\n    "updated_by" TEXT,\n    "deleted_at" TIMESTAMP,\n    "deleted_by" TEXT,\n    "activity_log" TEXT,\n    FOREIGN KEY("ingest_session_id") REFERENCES "ur_ingest_session"("ur_ingest_session_id"),\n    FOREIGN KEY("uniform_resource_id") REFERENCES "uniform_resource"("uniform_resource_id")\n);\n\nCREATE INDEX IF NOT EXISTS "idx_device__name__state" ON "device"("name", "state");\nCREATE INDEX IF NOT EXISTS "idx_ur_ingest_session_fs_path__ingest_session_id__root_path" ON "ur_ingest_session_fs_path"("ingest_session_id", "root_path");\nCREATE INDEX IF NOT EXISTS "idx_uniform_resource__device_id__uri" ON "uniform_resource"("device_id", "uri");\nCREATE INDEX IF NOT EXISTS "idx_uniform_resource_transform__uniform_resource_id__content_digest" ON "uniform_resource_transform"("uniform_resource_id", "content_digest");\nCREATE INDEX IF NOT EXISTS "idx_ur_ingest_session_fs_path_entry__ingest_session_id__file_path_abs" ON "ur_ingest_session_fs_path_entry"("ingest_session_id", "file_path_abs");\nCREATE INDEX IF NOT EXISTS "idx_ur_ingest_session_task__ingest_session_id" ON "ur_ingest_session_task"("ingest_session_id");\n\n\nDROP VIEW IF EXISTS "ur_ingest_session_files_stats";\nCREATE VIEW IF NOT EXISTS "ur_ingest_session_files_stats" AS\n    WITH Summary AS (\n        SELECT\n            device.device_id AS device_id,\n            ur_ingest_session.ur_ingest_session_id AS ingest_session_id,\n            ur_ingest_session.ingest_started_at AS ingest_session_started_at,\n            ur_ingest_session.ingest_finished_at AS ingest_session_finished_at,\n            COALESCE(ur_ingest_session_fs_path_entry.file_extn, '''') AS file_extension,\n            ur_ingest_session_fs_path.ur_ingest_session_fs_path_id as ingest_session_fs_path_id,\n            ur_ingest_session_fs_path.root_path AS ingest_session_root_fs_path,\n            COUNT(ur_ingest_session_fs_path_entry.uniform_resource_id) AS total_file_count,\n            SUM(CASE WHEN uniform_resource.content IS NOT NULL THEN 1 ELSE 0 END) AS file_count_with_content,\n            SUM(CASE WHEN uniform_resource.frontmatter IS NOT NULL THEN 1 ELSE 0 END) AS file_count_with_frontmatter,\n            MIN(uniform_resource.size_bytes) AS min_file_size_bytes,\n            AVG(uniform_resource.size_bytes) AS average_file_size_bytes,\n            MAX(uniform_resource.size_bytes) AS max_file_size_bytes,\n            MIN(uniform_resource.last_modified_at) AS oldest_file_last_modified_datetime,\n            MAX(uniform_resource.last_modified_at) AS youngest_file_last_modified_datetime\n        FROM\n            ur_ingest_session\n        JOIN\n            device ON ur_ingest_session.device_id = device.device_id\n        LEFT JOIN\n            ur_ingest_session_fs_path ON ur_ingest_session.ur_ingest_session_id = ur_ingest_session_fs_path.ingest_session_id\n        LEFT JOIN\n            ur_ingest_session_fs_path_entry ON ur_ingest_session_fs_path.ur_ingest_session_fs_path_id = ur_ingest_session_fs_path_entry.ingest_fs_path_id\n        LEFT JOIN\n            uniform_resource ON ur_ingest_session_fs_path_entry.uniform_resource_id = uniform_resource.uniform_resource_id\n        GROUP BY\n            device.device_id,\n            ur_ingest_session.ur_ingest_session_id,\n            ur_ingest_session.ingest_started_at,\n            ur_ingest_session.ingest_finished_at,\n            ur_ingest_session_fs_path_entry.file_extn,\n            ur_ingest_session_fs_path.root_path\n    )\n    SELECT\n        device_id,\n        ingest_session_id,\n        ingest_session_started_at,\n        ingest_session_finished_at,\n        file_extension,\n        ingest_session_fs_path_id,\n        ingest_session_root_fs_path,\n        total_file_count,\n        file_count_with_content,\n        file_count_with_frontmatter,\n        min_file_size_bytes,\n        CAST(ROUND(average_file_size_bytes) AS INTEGER) AS average_file_size_bytes,\n        max_file_size_bytes,\n        oldest_file_last_modified_datetime,\n        youngest_file_last_modified_datetime\n    FROM\n        Summary\n    ORDER BY\n        device_id,\n        ingest_session_finished_at,\n        file_extension;\n      ','\n',char(10)),'d23110bcb8f139a16ca8793111d8016bbda90dab',NULL,NULL,NULL,NULL,'2023-12-04 04:00:25',NULL,NULL,NULL,'[{"code_notebook_cell_id":"01HGSFFG0V2ZJ92R8T9D7Z1FDA","notebook_kernel_id":"LLM Prompt","notebook_name":"LargeLanguageModelsPromptsNotebook","cell_name":"understand service schema","cell_governance":null,"interpretable_code":"Understand the following structure of an SQLite database designed to store cybersecurity and compliance data for files in a file system.\nThe database is designed to store devices in the ''device'' table and entities called ''resources'' stored in the immutable append-only\n''uniform_resource'' table. Each time files are \"walked\" they are stored in ingestion session and link back to ''uniform_resource''. Because all\ntables are generally append only and immutable it means that the ingest_session_fs_path_entry table can be used for revision control\nand historical tracking of file changes.\n\nUse the following SQLite Schema to generate SQL queries that interact with these tables and once you understand them let me know so I can ask you for help:\n\nCREATE TABLE IF NOT EXISTS \"device\" (\n    \"device_id\" VARCHAR PRIMARY KEY NOT NULL,\n    \"name\" TEXT NOT NULL,\n    \"state\" TEXT CHECK(json_valid(state)) NOT NULL,\n    \"boundary\" TEXT NOT NULL,\n    \"segmentation\" TEXT CHECK(json_valid(segmentation) OR segmentation IS NULL),\n    \"state_sysinfo\" TEXT CHECK(json_valid(state_sysinfo) OR state_sysinfo IS NULL),\n    \"elaboration\" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"created_by\" TEXT DEFAULT ''UNKNOWN'',\n    \"updated_at\" TIMESTAMP,\n    \"updated_by\" TEXT,\n    \"deleted_at\" TIMESTAMP,\n    \"deleted_by\" TEXT,\n    \"activity_log\" TEXT,\n    UNIQUE(\"name\", \"state\", \"boundary\")\n);\nCREATE TABLE IF NOT EXISTS \"behavior\" (\n    \"behavior_id\" VARCHAR PRIMARY KEY NOT NULL,\n    \"device_id\" VARCHAR NOT NULL,\n    \"behavior_name\" TEXT NOT NULL,\n    \"behavior_conf_json\" TEXT CHECK(json_valid(behavior_conf_json)) NOT NULL,\n    \"assurance_schema_id\" VARCHAR,\n    \"governance\" TEXT CHECK(json_valid(governance) OR governance IS NULL),\n    \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"created_by\" TEXT DEFAULT ''UNKNOWN'',\n    \"updated_at\" TIMESTAMP,\n    \"updated_by\" TEXT,\n    \"deleted_at\" TIMESTAMP,\n    \"deleted_by\" TEXT,\n    \"activity_log\" TEXT,\n    FOREIGN KEY(\"device_id\") REFERENCES \"device\"(\"device_id\"),\n    FOREIGN KEY(\"assurance_schema_id\") REFERENCES \"assurance_schema\"(\"assurance_schema_id\"),\n    UNIQUE(\"device_id\", \"behavior_name\")\n);\nCREATE TABLE IF NOT EXISTS \"ur_ingest_resource_path_match_rule\" (\n    \"ur_ingest_resource_path_match_rule_id\" VARCHAR PRIMARY KEY NOT NULL,\n    \"namespace\" TEXT NOT NULL,\n    \"regex\" TEXT NOT NULL,\n    \"flags\" TEXT NOT NULL,\n    \"nature_regex_capture\" TEXT,\n    \"description\" TEXT,\n    \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"created_by\" TEXT DEFAULT ''UNKNOWN'',\n    \"updated_at\" TIMESTAMP,\n    \"updated_by\" TEXT,\n    \"deleted_at\" TIMESTAMP,\n    \"deleted_by\" TEXT,\n    \"activity_log\" TEXT,\n    UNIQUE(\"namespace\", \"regex\")\n);\nCREATE TABLE IF NOT EXISTS \"ur_ingest_resource_path_rewrite_rule\" (\n    \"ur_ingest_resource_path_rewrite_rule_id\" VARCHAR PRIMARY KEY NOT NULL,\n    \"namespace\" TEXT NOT NULL,\n    \"regex\" TEXT NOT NULL,\n    \"replace\" TEXT NOT NULL,\n    \"description\" TEXT,\n    \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"created_by\" TEXT DEFAULT ''UNKNOWN'',\n    \"updated_at\" TIMESTAMP,\n    \"updated_by\" TEXT,\n    \"deleted_at\" TIMESTAMP,\n    \"deleted_by\" TEXT,\n    \"activity_log\" TEXT,\n    UNIQUE(\"namespace\", \"regex\", \"replace\")\n);\nCREATE TABLE IF NOT EXISTS \"ur_ingest_session\" (\n    \"ur_ingest_session_id\" VARCHAR PRIMARY KEY NOT NULL,\n    \"device_id\" VARCHAR NOT NULL,\n    \"behavior_id\" VARCHAR,\n    \"behavior_json\" TEXT CHECK(json_valid(behavior_json) OR behavior_json IS NULL),\n    \"ingest_started_at\" TIMESTAMP NOT NULL,\n    \"ingest_finished_at\" TIMESTAMP,\n    \"elaboration\" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"created_by\" TEXT DEFAULT ''UNKNOWN'',\n    \"updated_at\" TIMESTAMP,\n    \"updated_by\" TEXT,\n    \"deleted_at\" TIMESTAMP,\n    \"deleted_by\" TEXT,\n    \"activity_log\" TEXT,\n    FOREIGN KEY(\"device_id\") REFERENCES \"device\"(\"device_id\"),\n    FOREIGN KEY(\"behavior_id\") REFERENCES \"behavior\"(\"behavior_id\"),\n    UNIQUE(\"device_id\", \"created_at\")\n);\nCREATE TABLE IF NOT EXISTS \"ur_ingest_session_fs_path\" (\n    \"ur_ingest_session_fs_path_id\" VARCHAR PRIMARY KEY NOT NULL,\n    \"ingest_session_id\" VARCHAR NOT NULL,\n    \"root_path\" TEXT NOT NULL,\n    \"elaboration\" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"created_by\" TEXT DEFAULT ''UNKNOWN'',\n    \"updated_at\" TIMESTAMP,\n    \"updated_by\" TEXT,\n    \"deleted_at\" TIMESTAMP,\n    \"deleted_by\" TEXT,\n    \"activity_log\" TEXT,\n    FOREIGN KEY(\"ingest_session_id\") REFERENCES \"ur_ingest_session\"(\"ur_ingest_session_id\"),\n    UNIQUE(\"ingest_session_id\", \"root_path\", \"created_at\")\n);\nCREATE TABLE IF NOT EXISTS \"uniform_resource\" (\n    \"uniform_resource_id\" VARCHAR PRIMARY KEY NOT NULL,\n    \"device_id\" VARCHAR NOT NULL,\n    \"ingest_session_id\" VARCHAR NOT NULL,\n    \"ingest_fs_path_id\" VARCHAR,\n    \"uri\" TEXT NOT NULL,\n    \"content_digest\" TEXT NOT NULL,\n    \"content\" BLOB,\n    \"nature\" TEXT,\n    \"size_bytes\" INTEGER,\n    \"last_modified_at\" TIMESTAMP,\n    \"content_fm_body_attrs\" TEXT CHECK(json_valid(content_fm_body_attrs) OR content_fm_body_attrs IS NULL),\n    \"frontmatter\" TEXT CHECK(json_valid(frontmatter) OR frontmatter IS NULL),\n    \"elaboration\" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"created_by\" TEXT DEFAULT ''UNKNOWN'',\n    \"updated_at\" TIMESTAMP,\n    \"updated_by\" TEXT,\n    \"deleted_at\" TIMESTAMP,\n    \"deleted_by\" TEXT,\n    \"activity_log\" TEXT,\n    FOREIGN KEY(\"device_id\") REFERENCES \"device\"(\"device_id\"),\n    FOREIGN KEY(\"ingest_session_id\") REFERENCES \"ur_ingest_session\"(\"ur_ingest_session_id\"),\n    FOREIGN KEY(\"ingest_fs_path_id\") REFERENCES \"ur_ingest_session_fs_path\"(\"ur_ingest_session_fs_path_id\"),\n    UNIQUE(\"device_id\", \"content_digest\", \"uri\", \"size_bytes\", \"last_modified_at\")\n);\nCREATE TABLE IF NOT EXISTS \"uniform_resource_transform\" (\n    \"uniform_resource_transform_id\" VARCHAR PRIMARY KEY NOT NULL,\n    \"uniform_resource_id\" VARCHAR NOT NULL,\n    \"uri\" TEXT NOT NULL,\n    \"content_digest\" TEXT NOT NULL,\n    \"content\" BLOB,\n    \"nature\" TEXT,\n    \"size_bytes\" INTEGER,\n    \"elaboration\" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"created_by\" TEXT DEFAULT ''UNKNOWN'',\n    \"updated_at\" TIMESTAMP,\n    \"updated_by\" TEXT,\n    \"deleted_at\" TIMESTAMP,\n    \"deleted_by\" TEXT,\n    \"activity_log\" TEXT,\n    FOREIGN KEY(\"uniform_resource_id\") REFERENCES \"uniform_resource\"(\"uniform_resource_id\"),\n    UNIQUE(\"uniform_resource_id\", \"content_digest\", \"nature\", \"size_bytes\")\n);\nCREATE TABLE IF NOT EXISTS \"ur_ingest_session_fs_path_entry\" (\n    \"ur_ingest_session_fs_path_entry_id\" VARCHAR PRIMARY KEY NOT NULL,\n    \"ingest_session_id\" VARCHAR NOT NULL,\n    \"ingest_fs_path_id\" VARCHAR NOT NULL,\n    \"uniform_resource_id\" VARCHAR,\n    \"file_path_abs\" TEXT NOT NULL,\n    \"file_path_rel_parent\" TEXT NOT NULL,\n    \"file_path_rel\" TEXT NOT NULL,\n    \"file_basename\" TEXT NOT NULL,\n    \"file_extn\" TEXT,\n    \"captured_executable\" TEXT CHECK(json_valid(captured_executable) OR captured_executable IS NULL),\n    \"ur_status\" TEXT,\n    \"ur_diagnostics\" TEXT CHECK(json_valid(ur_diagnostics) OR ur_diagnostics IS NULL),\n    \"ur_transformations\" TEXT CHECK(json_valid(ur_transformations) OR ur_transformations IS NULL),\n    \"elaboration\" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"created_by\" TEXT DEFAULT ''UNKNOWN'',\n    \"updated_at\" TIMESTAMP,\n    \"updated_by\" TEXT,\n    \"deleted_at\" TIMESTAMP,\n    \"deleted_by\" TEXT,\n    \"activity_log\" TEXT,\n    FOREIGN KEY(\"ingest_session_id\") REFERENCES \"ur_ingest_session\"(\"ur_ingest_session_id\"),\n    FOREIGN KEY(\"ingest_fs_path_id\") REFERENCES \"ur_ingest_session_fs_path\"(\"ur_ingest_session_fs_path_id\"),\n    FOREIGN KEY(\"uniform_resource_id\") REFERENCES \"uniform_resource\"(\"uniform_resource_id\")\n);\nCREATE TABLE IF NOT EXISTS \"ur_ingest_session_task\" (\n    \"ur_ingest_session_task_id\" VARCHAR PRIMARY KEY NOT NULL,\n    \"ingest_session_id\" VARCHAR NOT NULL,\n    \"uniform_resource_id\" VARCHAR,\n    \"captured_executable\" TEXT CHECK(json_valid(captured_executable)) NOT NULL,\n    \"ur_status\" TEXT,\n    \"ur_diagnostics\" TEXT CHECK(json_valid(ur_diagnostics) OR ur_diagnostics IS NULL),\n    \"ur_transformations\" TEXT CHECK(json_valid(ur_transformations) OR ur_transformations IS NULL),\n    \"elaboration\" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"created_by\" TEXT DEFAULT ''UNKNOWN'',\n    \"updated_at\" TIMESTAMP,\n    \"updated_by\" TEXT,\n    \"deleted_at\" TIMESTAMP,\n    \"deleted_by\" TEXT,\n    \"activity_log\" TEXT,\n    FOREIGN KEY(\"ingest_session_id\") REFERENCES \"ur_ingest_session\"(\"ur_ingest_session_id\"),\n    FOREIGN KEY(\"uniform_resource_id\") REFERENCES \"uniform_resource\"(\"uniform_resource_id\")\n);\n\nCREATE INDEX IF NOT EXISTS \"idx_device__name__state\" ON \"device\"(\"name\", \"state\");\nCREATE INDEX IF NOT EXISTS \"idx_ur_ingest_session_fs_path__ingest_session_id__root_path\" ON \"ur_ingest_session_fs_path\"(\"ingest_session_id\", \"root_path\");\nCREATE INDEX IF NOT EXISTS \"idx_uniform_resource__device_id__uri\" ON \"uniform_resource\"(\"device_id\", \"uri\");\nCREATE INDEX IF NOT EXISTS \"idx_uniform_resource_transform__uniform_resource_id__content_digest\" ON \"uniform_resource_transform\"(\"uniform_resource_id\", \"content_digest\");\nCREATE INDEX IF NOT EXISTS \"idx_ur_ingest_session_fs_path_entry__ingest_session_id__file_path_abs\" ON \"ur_ingest_session_fs_path_entry\"(\"ingest_session_id\", \"file_path_abs\");\nCREATE INDEX IF NOT EXISTS \"idx_ur_ingest_session_task__ingest_session_id\" ON \"ur_ingest_session_task\"(\"ingest_session_id\");\n\n\nDROP VIEW IF EXISTS \"ur_ingest_session_files_stats\";\nCREATE VIEW IF NOT EXISTS \"ur_ingest_session_files_stats\" AS\n    WITH Summary AS (\n        SELECT\n            device.device_id AS device_id,\n            ur_ingest_session.ur_ingest_session_id AS ingest_session_id,\n            ur_ingest_session.ingest_started_at AS ingest_session_started_at,\n            ur_ingest_session.ingest_finished_at AS ingest_session_finished_at,\n            COALESCE(ur_ingest_session_fs_path_entry.file_extn, '''') AS file_extension,\n            ur_ingest_session_fs_path.ur_ingest_session_fs_path_id as ingest_session_fs_path_id,\n            ur_ingest_session_fs_path.root_path AS ingest_session_root_fs_path,\n            COUNT(ur_ingest_session_fs_path_entry.uniform_resource_id) AS total_file_count,\n            SUM(CASE WHEN uniform_resource.content IS NOT NULL THEN 1 ELSE 0 END) AS file_count_with_content,\n            SUM(CASE WHEN uniform_resource.frontmatter IS NOT NULL THEN 1 ELSE 0 END) AS file_count_with_frontmatter,\n            MIN(uniform_resource.size_bytes) AS min_file_size_bytes,\n            AVG(uniform_resource.size_bytes) AS average_file_size_bytes,\n            MAX(uniform_resource.size_bytes) AS max_file_size_bytes,\n            MIN(uniform_resource.last_modified_at) AS oldest_file_last_modified_datetime,\n            MAX(uniform_resource.last_modified_at) AS youngest_file_last_modified_datetime\n        FROM\n            ur_ingest_session\n        JOIN\n            device ON ur_ingest_session.device_id = device.device_id\n        LEFT JOIN\n            ur_ingest_session_fs_path ON ur_ingest_session.ur_ingest_session_id = ur_ingest_session_fs_path.ingest_session_id\n        LEFT JOIN\n            ur_ingest_session_fs_path_entry ON ur_ingest_session_fs_path.ur_ingest_session_fs_path_id = ur_ingest_session_fs_path_entry.ingest_fs_path_id\n        LEFT JOIN\n            uniform_resource ON ur_ingest_session_fs_path_entry.uniform_resource_id = uniform_resource.uniform_resource_id\n        GROUP BY\n            device.device_id,\n            ur_ingest_session.ur_ingest_session_id,\n            ur_ingest_session.ingest_started_at,\n            ur_ingest_session.ingest_finished_at,\n            ur_ingest_session_fs_path_entry.file_extn,\n            ur_ingest_session_fs_path.root_path\n    )\n    SELECT\n        device_id,\n        ingest_session_id,\n        ingest_session_started_at,\n        ingest_session_finished_at,\n        file_extension,\n        ingest_session_fs_path_id,\n        ingest_session_root_fs_path,\n        total_file_count,\n        file_count_with_content,\n        file_count_with_frontmatter,\n        min_file_size_bytes,\n        CAST(ROUND(average_file_size_bytes) AS INTEGER) AS average_file_size_bytes,\n        max_file_size_bytes,\n        oldest_file_last_modified_datetime,\n        youngest_file_last_modified_datetime\n    FROM\n        Summary\n    ORDER BY\n        device_id,\n        ingest_session_finished_at,\n        file_extension;\n      ","interpretable_code_hash":"d23110bcb8f139a16ca8793111d8016bbda90dab","description":null,"arguments":null,"created_at":null,"created_by":null,"updated_at":null,"updated_by":null,"deleted_at":null,"deleted_by":null,"activity_log":null}]');
INSERT INTO code_notebook_cell VALUES('01HGSFFG0V8KBWYY3DAFMKGK4A','PlantUML','SqlNotebooksOrchestrator','surveilrInfoSchemaDiagram',NULL,replace('@startuml IE\n  hide circle\n  skinparam linetype ortho\n  skinparam roundcorner 20\n  skinparam class {\n    BackgroundColor White\n    ArrowColor Silver\n    BorderColor Silver\n    FontColor Black\n    FontSize 12\n  }\n\n  entity "device" as device {\n    * **device_id**: VARCHAR\n    --\n    * name: TEXT\n    * state: TEXT\n    * boundary: TEXT\n      segmentation: TEXT\n      state_sysinfo: TEXT\n      elaboration: TEXT\n  }\n\n  entity "behavior" as behavior {\n    * **behavior_id**: VARCHAR\n    --\n    * device_id: VARCHAR\n    * behavior_name: TEXT\n    * behavior_conf_json: TEXT\n      assurance_schema_id: VARCHAR\n      governance: TEXT\n  }\n\n  entity "ur_ingest_resource_path_match_rule" as ur_ingest_resource_path_match_rule {\n    * **ur_ingest_resource_path_match_rule_id**: VARCHAR\n    --\n    * namespace: TEXT\n    * regex: TEXT\n    * flags: TEXT\n      nature_regex_capture: TEXT\n      description: TEXT\n  }\n\n  entity "ur_ingest_resource_path_rewrite_rule" as ur_ingest_resource_path_rewrite_rule {\n    * **ur_ingest_resource_path_rewrite_rule_id**: VARCHAR\n    --\n    * namespace: TEXT\n    * regex: TEXT\n    * replace: TEXT\n      description: TEXT\n  }\n\n  entity "ur_ingest_session" as ur_ingest_session {\n    * **ur_ingest_session_id**: VARCHAR\n    --\n    * device_id: VARCHAR\n      behavior_id: VARCHAR\n      behavior_json: TEXT\n    * ingest_started_at: TIMESTAMP\n      ingest_finished_at: TIMESTAMP\n      elaboration: TEXT\n  }\n\n  entity "ur_ingest_session_fs_path" as ur_ingest_session_fs_path {\n    * **ur_ingest_session_fs_path_id**: VARCHAR\n    --\n    * ingest_session_id: VARCHAR\n    * root_path: TEXT\n      elaboration: TEXT\n  }\n\n  entity "uniform_resource" as uniform_resource {\n    * **uniform_resource_id**: VARCHAR\n    --\n    * device_id: VARCHAR\n    * ingest_session_id: VARCHAR\n      ingest_fs_path_id: VARCHAR\n    * uri: TEXT\n    * content_digest: TEXT\n      content: BLOB\n      nature: TEXT\n      size_bytes: INTEGER\n      last_modified_at: TIMESTAMP\n      content_fm_body_attrs: TEXT\n      frontmatter: TEXT\n      elaboration: TEXT\n  }\n\n  entity "uniform_resource_transform" as uniform_resource_transform {\n    * **uniform_resource_transform_id**: VARCHAR\n    --\n    * uniform_resource_id: VARCHAR\n    * uri: TEXT\n    * content_digest: TEXT\n      content: BLOB\n      nature: TEXT\n      size_bytes: INTEGER\n      elaboration: TEXT\n  }\n\n  entity "ur_ingest_session_fs_path_entry" as ur_ingest_session_fs_path_entry {\n    * **ur_ingest_session_fs_path_entry_id**: VARCHAR\n    --\n    * ingest_session_id: VARCHAR\n    * ingest_fs_path_id: VARCHAR\n      uniform_resource_id: VARCHAR\n    * file_path_abs: TEXT\n    * file_path_rel_parent: TEXT\n    * file_path_rel: TEXT\n    * file_basename: TEXT\n      file_extn: TEXT\n      captured_executable: TEXT\n      ur_status: TEXT\n      ur_diagnostics: TEXT\n      ur_transformations: TEXT\n      elaboration: TEXT\n  }\n\n  entity "ur_ingest_session_task" as ur_ingest_session_task {\n    * **ur_ingest_session_task_id**: VARCHAR\n    --\n    * ingest_session_id: VARCHAR\n      uniform_resource_id: VARCHAR\n    * captured_executable: TEXT\n      ur_status: TEXT\n      ur_diagnostics: TEXT\n      ur_transformations: TEXT\n      elaboration: TEXT\n  }\n\n  device |o..o{ behavior\n  device |o..o{ ur_ingest_session\n  behavior |o..o{ ur_ingest_session\n  ur_ingest_session |o..o{ ur_ingest_session_fs_path\n  device |o..o{ uniform_resource\n  ur_ingest_session |o..o{ uniform_resource\n  ur_ingest_session_fs_path |o..o{ uniform_resource\n  uniform_resource |o..o{ uniform_resource_transform\n  ur_ingest_session |o..o{ ur_ingest_session_fs_path_entry\n  ur_ingest_session_fs_path |o..o{ ur_ingest_session_fs_path_entry\n  uniform_resource |o..o{ ur_ingest_session_fs_path_entry\n  ur_ingest_session |o..o{ ur_ingest_session_task\n  uniform_resource |o..o{ ur_ingest_session_task\n@enduml','\n',char(10)),'b3b94cecd3132a120741f0b8018f71e123d20210',NULL,NULL,NULL,NULL,'2023-12-04 04:00:25',NULL,NULL,NULL,'[{"code_notebook_cell_id":"01HGSFFG0V8KBWYY3DAFMKGK4A","notebook_kernel_id":"PlantUML","notebook_name":"SqlNotebooksOrchestrator","cell_name":"surveilrInfoSchemaDiagram","cell_governance":null,"interpretable_code":"@startuml IE\n  hide circle\n  skinparam linetype ortho\n  skinparam roundcorner 20\n  skinparam class {\n    BackgroundColor White\n    ArrowColor Silver\n    BorderColor Silver\n    FontColor Black\n    FontSize 12\n  }\n\n  entity \"device\" as device {\n    * **device_id**: VARCHAR\n    --\n    * name: TEXT\n    * state: TEXT\n    * boundary: TEXT\n      segmentation: TEXT\n      state_sysinfo: TEXT\n      elaboration: TEXT\n  }\n\n  entity \"behavior\" as behavior {\n    * **behavior_id**: VARCHAR\n    --\n    * device_id: VARCHAR\n    * behavior_name: TEXT\n    * behavior_conf_json: TEXT\n      assurance_schema_id: VARCHAR\n      governance: TEXT\n  }\n\n  entity \"ur_ingest_resource_path_match_rule\" as ur_ingest_resource_path_match_rule {\n    * **ur_ingest_resource_path_match_rule_id**: VARCHAR\n    --\n    * namespace: TEXT\n    * regex: TEXT\n    * flags: TEXT\n      nature_regex_capture: TEXT\n      description: TEXT\n  }\n\n  entity \"ur_ingest_resource_path_rewrite_rule\" as ur_ingest_resource_path_rewrite_rule {\n    * **ur_ingest_resource_path_rewrite_rule_id**: VARCHAR\n    --\n    * namespace: TEXT\n    * regex: TEXT\n    * replace: TEXT\n      description: TEXT\n  }\n\n  entity \"ur_ingest_session\" as ur_ingest_session {\n    * **ur_ingest_session_id**: VARCHAR\n    --\n    * device_id: VARCHAR\n      behavior_id: VARCHAR\n      behavior_json: TEXT\n    * ingest_started_at: TIMESTAMP\n      ingest_finished_at: TIMESTAMP\n      elaboration: TEXT\n  }\n\n  entity \"ur_ingest_session_fs_path\" as ur_ingest_session_fs_path {\n    * **ur_ingest_session_fs_path_id**: VARCHAR\n    --\n    * ingest_session_id: VARCHAR\n    * root_path: TEXT\n      elaboration: TEXT\n  }\n\n  entity \"uniform_resource\" as uniform_resource {\n    * **uniform_resource_id**: VARCHAR\n    --\n    * device_id: VARCHAR\n    * ingest_session_id: VARCHAR\n      ingest_fs_path_id: VARCHAR\n    * uri: TEXT\n    * content_digest: TEXT\n      content: BLOB\n      nature: TEXT\n      size_bytes: INTEGER\n      last_modified_at: TIMESTAMP\n      content_fm_body_attrs: TEXT\n      frontmatter: TEXT\n      elaboration: TEXT\n  }\n\n  entity \"uniform_resource_transform\" as uniform_resource_transform {\n    * **uniform_resource_transform_id**: VARCHAR\n    --\n    * uniform_resource_id: VARCHAR\n    * uri: TEXT\n    * content_digest: TEXT\n      content: BLOB\n      nature: TEXT\n      size_bytes: INTEGER\n      elaboration: TEXT\n  }\n\n  entity \"ur_ingest_session_fs_path_entry\" as ur_ingest_session_fs_path_entry {\n    * **ur_ingest_session_fs_path_entry_id**: VARCHAR\n    --\n    * ingest_session_id: VARCHAR\n    * ingest_fs_path_id: VARCHAR\n      uniform_resource_id: VARCHAR\n    * file_path_abs: TEXT\n    * file_path_rel_parent: TEXT\n    * file_path_rel: TEXT\n    * file_basename: TEXT\n      file_extn: TEXT\n      captured_executable: TEXT\n      ur_status: TEXT\n      ur_diagnostics: TEXT\n      ur_transformations: TEXT\n      elaboration: TEXT\n  }\n\n  entity \"ur_ingest_session_task\" as ur_ingest_session_task {\n    * **ur_ingest_session_task_id**: VARCHAR\n    --\n    * ingest_session_id: VARCHAR\n      uniform_resource_id: VARCHAR\n    * captured_executable: TEXT\n      ur_status: TEXT\n      ur_diagnostics: TEXT\n      ur_transformations: TEXT\n      elaboration: TEXT\n  }\n\n  device |o..o{ behavior\n  device |o..o{ ur_ingest_session\n  behavior |o..o{ ur_ingest_session\n  ur_ingest_session |o..o{ ur_ingest_session_fs_path\n  device |o..o{ uniform_resource\n  ur_ingest_session |o..o{ uniform_resource\n  ur_ingest_session_fs_path |o..o{ uniform_resource\n  uniform_resource |o..o{ uniform_resource_transform\n  ur_ingest_session |o..o{ ur_ingest_session_fs_path_entry\n  ur_ingest_session_fs_path |o..o{ ur_ingest_session_fs_path_entry\n  uniform_resource |o..o{ ur_ingest_session_fs_path_entry\n  ur_ingest_session |o..o{ ur_ingest_session_task\n  uniform_resource |o..o{ ur_ingest_session_task\n@enduml","interpretable_code_hash":"b3b94cecd3132a120741f0b8018f71e123d20210","description":null,"arguments":null,"created_at":null,"created_by":null,"updated_at":null,"updated_by":null,"deleted_at":null,"deleted_by":null,"activity_log":null}]');
INSERT INTO code_notebook_cell VALUES('01HGSFFG0VFD4XSB9W90HET8SE','PlantUML','SqlNotebooksOrchestrator','notebooksInfoSchemaDiagram',NULL,replace('@startuml IE\n  hide circle\n  skinparam linetype ortho\n  skinparam roundcorner 20\n  skinparam class {\n    BackgroundColor White\n    ArrowColor Silver\n    BorderColor Silver\n    FontColor Black\n    FontSize 12\n  }\n\n  entity "assurance_schema" as assurance_schema {\n    * **assurance_schema_id**: VARCHAR\n    --\n    * assurance_type: TEXT\n    * code: TEXT\n      code_json: TEXT\n      governance: TEXT\n      created_at: TIMESTAMP\n      created_by: TEXT\n      updated_at: TIMESTAMP\n      updated_by: TEXT\n      deleted_at: TIMESTAMP\n      deleted_by: TEXT\n      activity_log: TEXT\n  }\n\n  entity "code_notebook_kernel" as code_notebook_kernel {\n    * **code_notebook_kernel_id**: VARCHAR\n    --\n    * kernel_name: TEXT\n      description: TEXT\n      mime_type: TEXT\n      file_extn: TEXT\n      elaboration: TEXT\n      governance: TEXT\n      created_at: TIMESTAMP\n      created_by: TEXT\n      updated_at: TIMESTAMP\n      updated_by: TEXT\n      deleted_at: TIMESTAMP\n      deleted_by: TEXT\n      activity_log: TEXT\n  }\n\n  entity "code_notebook_cell" as code_notebook_cell {\n    * **code_notebook_cell_id**: VARCHAR\n    --\n    * notebook_kernel_id: VARCHAR\n    * notebook_name: TEXT\n    * cell_name: TEXT\n      cell_governance: TEXT\n    * interpretable_code: TEXT\n    * interpretable_code_hash: TEXT\n      description: TEXT\n      arguments: TEXT\n      created_at: TIMESTAMP\n      created_by: TEXT\n      updated_at: TIMESTAMP\n      updated_by: TEXT\n      deleted_at: TIMESTAMP\n      deleted_by: TEXT\n      activity_log: TEXT\n  }\n\n  entity "code_notebook_state" as code_notebook_state {\n    * **code_notebook_state_id**: VARCHAR\n    --\n    * code_notebook_cell_id: VARCHAR\n    * from_state: TEXT\n    * to_state: TEXT\n      transition_result: TEXT\n      transition_reason: TEXT\n      transitioned_at: TIMESTAMP\n      elaboration: TEXT\n      created_at: TIMESTAMP\n      created_by: TEXT\n      updated_at: TIMESTAMP\n      updated_by: TEXT\n      deleted_at: TIMESTAMP\n      deleted_by: TEXT\n      activity_log: TEXT\n  }\n\n  code_notebook_kernel |o..o{ code_notebook_cell\n  code_notebook_cell |o..o{ code_notebook_state\n@enduml','\n',char(10)),'01c0bd47bb8a280723738c121ba158fab85ce68e',NULL,NULL,NULL,NULL,'2023-12-04 04:00:25',NULL,NULL,NULL,'[{"code_notebook_cell_id":"01HGSFFG0VFD4XSB9W90HET8SE","notebook_kernel_id":"PlantUML","notebook_name":"SqlNotebooksOrchestrator","cell_name":"notebooksInfoSchemaDiagram","cell_governance":null,"interpretable_code":"@startuml IE\n  hide circle\n  skinparam linetype ortho\n  skinparam roundcorner 20\n  skinparam class {\n    BackgroundColor White\n    ArrowColor Silver\n    BorderColor Silver\n    FontColor Black\n    FontSize 12\n  }\n\n  entity \"assurance_schema\" as assurance_schema {\n    * **assurance_schema_id**: VARCHAR\n    --\n    * assurance_type: TEXT\n    * code: TEXT\n      code_json: TEXT\n      governance: TEXT\n      created_at: TIMESTAMP\n      created_by: TEXT\n      updated_at: TIMESTAMP\n      updated_by: TEXT\n      deleted_at: TIMESTAMP\n      deleted_by: TEXT\n      activity_log: TEXT\n  }\n\n  entity \"code_notebook_kernel\" as code_notebook_kernel {\n    * **code_notebook_kernel_id**: VARCHAR\n    --\n    * kernel_name: TEXT\n      description: TEXT\n      mime_type: TEXT\n      file_extn: TEXT\n      elaboration: TEXT\n      governance: TEXT\n      created_at: TIMESTAMP\n      created_by: TEXT\n      updated_at: TIMESTAMP\n      updated_by: TEXT\n      deleted_at: TIMESTAMP\n      deleted_by: TEXT\n      activity_log: TEXT\n  }\n\n  entity \"code_notebook_cell\" as code_notebook_cell {\n    * **code_notebook_cell_id**: VARCHAR\n    --\n    * notebook_kernel_id: VARCHAR\n    * notebook_name: TEXT\n    * cell_name: TEXT\n      cell_governance: TEXT\n    * interpretable_code: TEXT\n    * interpretable_code_hash: TEXT\n      description: TEXT\n      arguments: TEXT\n      created_at: TIMESTAMP\n      created_by: TEXT\n      updated_at: TIMESTAMP\n      updated_by: TEXT\n      deleted_at: TIMESTAMP\n      deleted_by: TEXT\n      activity_log: TEXT\n  }\n\n  entity \"code_notebook_state\" as code_notebook_state {\n    * **code_notebook_state_id**: VARCHAR\n    --\n    * code_notebook_cell_id: VARCHAR\n    * from_state: TEXT\n    * to_state: TEXT\n      transition_result: TEXT\n      transition_reason: TEXT\n      transitioned_at: TIMESTAMP\n      elaboration: TEXT\n      created_at: TIMESTAMP\n      created_by: TEXT\n      updated_at: TIMESTAMP\n      updated_by: TEXT\n      deleted_at: TIMESTAMP\n      deleted_by: TEXT\n      activity_log: TEXT\n  }\n\n  code_notebook_kernel |o..o{ code_notebook_cell\n  code_notebook_cell |o..o{ code_notebook_state\n@enduml","interpretable_code_hash":"01c0bd47bb8a280723738c121ba158fab85ce68e","description":null,"arguments":null,"created_at":null,"created_by":null,"updated_at":null,"updated_by":null,"deleted_at":null,"deleted_by":null,"activity_log":null}]');
CREATE TABLE IF NOT EXISTS "code_notebook_state" (
    "code_notebook_state_id" VARCHAR PRIMARY KEY NOT NULL,
    "code_notebook_cell_id" VARCHAR NOT NULL,
    "from_state" TEXT NOT NULL,
    "to_state" TEXT NOT NULL,
    "transition_result" TEXT CHECK(json_valid(transition_result) OR transition_result IS NULL),
    "transition_reason" TEXT,
    "transitioned_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    "elaboration" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),
    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    "created_by" TEXT DEFAULT 'UNKNOWN',
    "updated_at" TIMESTAMP,
    "updated_by" TEXT,
    "deleted_at" TIMESTAMP,
    "deleted_by" TEXT,
    "activity_log" TEXT,
    FOREIGN KEY("code_notebook_cell_id") REFERENCES "code_notebook_cell"("code_notebook_cell_id"),
    UNIQUE("code_notebook_cell_id", "from_state", "to_state")
);
INSERT INTO code_notebook_state VALUES('01HGSFFG0XWC1824GDHR8ADE6T','01HGSFFG0T9P5REYWRBM5M31PE','NONE','EXECUTED',NULL,'execute_migrations','2023-12-04 03:55:46',NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
CREATE TABLE IF NOT EXISTS "sqlpage_files" (
    "path" VARCHAR PRIMARY KEY NOT NULL,
    "contents" TEXT NOT NULL,
    "last_modified" TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
INSERT INTO sqlpage_files VALUES('index.sql',replace('SELECT\n  ''list'' as component,\n  ''Get started: where to go from here ?'' as title,\n  ''Here are some useful links to get you started with SQLPage.'' as description;\nSELECT ''Content Ingestion Session Statistics'' as title,\n  ''ingest-session-stats.sql'' as link,\n  ''TODO'' as description,\n  ''green'' as color,\n  ''download'' as icon;\nSELECT ''MIME Types'' as title,\n  ''mime-types.sql'' as link,\n  ''TODO'' as description,\n  ''blue'' as color,\n  ''download'' as icon;\nSELECT ''Stored SQL Notebooks'' as title,\n  ''notebooks.sql'' as link,\n  ''TODO'' as description,\n  ''blue'' as color,\n  ''download'' as icon;\nSELECT ''Information Schema'' as title,\n  ''info-schema.sql'' as link,\n  ''TODO'' as description,\n  ''blue'' as color,\n  ''download'' as icon;','\n',char(10)),'2023-12-04 04:00:25');
INSERT INTO sqlpage_files VALUES('ingest-session-stats.sql',replace('SELECT ''table'' as component, 1 as search, 1 as sort;\nSELECT ingest_session_started_at, file_extn, total_count, with_content, with_frontmatter, average_size from ur_ingest_session_files_stats;','\n',char(10)),'2023-12-04 04:00:25');
INSERT INTO sqlpage_files VALUES('mime-types.sql',replace('SELECT ''table'' as component, 1 as search, 1 as sort;\nSELECT name, file_extn, description from mime_type;','\n',char(10)),'2023-12-04 04:00:25');
INSERT INTO sqlpage_files VALUES('notebooks.sql',replace('SELECT ''table'' as component, ''Cell'' as markdown, 1 as search, 1 as sort;\nSELECT "notebook_name",\n       ''['' || "cell_name" || ''](notebook-cell.sql?notebook='' ||  "notebook_name" || ''&cell='' || "cell_name" || '')'' as Cell\n  FROM code_notebook_cell;','\n',char(10)),'2023-12-04 04:00:25');
INSERT INTO sqlpage_files VALUES('notebook-cell.sql',replace('SELECT ''text'' as component,\n       $notebook || ''.'' || $cell as title,\n       ''```sql\n'' || "interpretable_code" || ''\n```'' as contents_md\n FROM code_notebook_cell\nWHERE "notebook_name" = $notebook\n  AND "cell_name" = $cell;','\n',char(10)),'2023-12-04 04:00:25');
INSERT INTO sqlpage_files VALUES('info-schema.sql',replace('-- TODO: https://github.com/lovasoa/SQLpage/discussions/109#discussioncomment-7359513\n--       see the above for how to fix for SQLPage but figure out to use the same SQL\n--       in and out of SQLPage (maybe do what Ophir said in discussion and create\n--       custom output for SQLPage using componetns?)\nWITH TableInfo AS (\n  SELECT\n    m.tbl_name AS table_name,\n    CASE WHEN c.pk THEN ''*'' ELSE '''' END AS is_primary_key,\n    c.name AS column_name,\n    c."type" AS column_type,\n    CASE WHEN c."notnull" THEN ''*'' ELSE '''' END AS not_null,\n    COALESCE(c.dflt_value, '''') AS default_value,\n    COALESCE((SELECT pfkl."table" || ''.'' || pfkl."to" FROM pragma_foreign_key_list(m.tbl_name) AS pfkl WHERE pfkl."from" = c.name), '''') as fk_refs,\n    ROW_NUMBER() OVER (PARTITION BY m.tbl_name ORDER BY c.cid) AS row_num\n  FROM sqlite_master m JOIN pragma_table_info(m.tbl_name) c ON 1=1\n  WHERE m.type = ''table''\n  ORDER BY table_name, row_num\n),\nViews AS (\n  SELECT ''## Views '' AS markdown_output\n  UNION ALL\n  SELECT ''| View | Column | Type |'' AS markdown_output\n  UNION ALL\n  SELECT ''| ---- | ------ |----- |'' AS markdown_output\n  UNION ALL\n  SELECT ''| '' || tbl_name || '' | '' || c.name || '' | '' || c."type" || '' | ''\n  FROM\n    sqlite_master m,\n    pragma_table_info(m.tbl_name) c\n  WHERE\n    m.type = ''view''\n),\nIndexes AS (\n  SELECT ''## Indexes'' AS markdown_output\n  UNION ALL\n  SELECT ''| Table | Index | Columns |'' AS markdown_output\n  UNION ALL\n  SELECT ''| ----- | ----- | ------- |'' AS markdown_output\n  UNION ALL\n  SELECT ''| '' ||  m.name || '' | '' || il.name || '' | '' || group_concat(ii.name, '', '') || '' |'' AS markdown_output\n  FROM sqlite_master as m,\n    pragma_index_list(m.name) AS il,\n    pragma_index_info(il.name) AS ii\n  WHERE\n    m.type = ''table''\n  GROUP BY\n    m.name,\n    il.name\n)\nSELECT\n    markdown_output AS info_schema_markdown\nFROM\n  (\n    SELECT ''## Tables'' AS markdown_output\n    UNION ALL\n    SELECT\n      CASE WHEN ti.row_num = 1 THEN ''\n### `'' || ti.table_name || ''` Table\n| PK | Column | Type | Req? | Default | References |\n| -- | ------ | ---- | ---- | ------- | ---------- |\n'' ||\n        ''| '' || is_primary_key || '' | '' || ti.column_name || '' | '' || ti.column_type || '' | '' || ti.not_null || '' | '' || ti.default_value || '' | '' || ti.fk_refs || '' |''\n      ELSE\n        ''| '' || is_primary_key || '' | '' || ti.column_name || '' | '' || ti.column_type || '' | '' || ti.not_null || '' | '' || ti.default_value || '' | '' || ti.fk_refs || '' |''\n      END\n    FROM TableInfo ti\n    UNION ALL SELECT ''''\n    UNION ALL SELECT * FROM	Views\n    UNION ALL SELECT ''''\n    UNION ALL SELECT * FROM Indexes\n);\n\n-- :info_schema_markdown should be defined in the above query\nSELECT ''text'' as component,\n       ''Information Schema'' as title,\n       :info_schema_markdown as contents_md','\n',char(10)),'2023-12-04 04:00:25');
INSERT INTO sqlpage_files VALUES('bad-item.sql',replace('select ''alert'' as component,\n                            ''MutationSqlNotebook.SQLPageSeedDML() issue'' as title,\n                            ''SQLPageNotebook cell "bad-item.sql" did not return SQL (found: string)'' as description;','\n',char(10)),'2023-12-04 04:00:25');
CREATE TABLE IF NOT EXISTS "device" (
    "device_id" VARCHAR PRIMARY KEY NOT NULL,
    "name" TEXT NOT NULL,
    "state" TEXT CHECK(json_valid(state)) NOT NULL,
    "boundary" TEXT NOT NULL,
    "segmentation" TEXT CHECK(json_valid(segmentation) OR segmentation IS NULL),
    "state_sysinfo" TEXT CHECK(json_valid(state_sysinfo) OR state_sysinfo IS NULL),
    "elaboration" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),
    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    "created_by" TEXT DEFAULT 'UNKNOWN',
    "updated_at" TIMESTAMP,
    "updated_by" TEXT,
    "deleted_at" TIMESTAMP,
    "deleted_by" TEXT,
    "activity_log" TEXT,
    UNIQUE("name", "state", "boundary")
);
INSERT INTO device VALUES('01HGSFFG3F3T79WAZ4YN0C59ZD','Titan','"SINGLETON"','UNKNOWN',NULL,replace('{\n  "IS_SUPPORTED": true,\n  "SUPPORTED_SIGNALS": [\n    "Hangup",\n    "Interrupt",\n    "Quit",\n    "Illegal",\n    "Trap",\n    "Abort",\n    "IOT",\n    "Bus",\n    "FloatingPointException",\n    "Kill",\n    "User1",\n    "Segv",\n    "User2",\n    "Pipe",\n    "Alarm",\n    "Term",\n    "Child",\n    "Continue",\n    "Stop",\n    "TSTP",\n    "TTIN",\n    "TTOU",\n    "Urgent",\n    "XCPU",\n    "XFSZ",\n    "VirtualAlarm",\n    "Profiling",\n    "Winch",\n    "IO",\n    "Poll",\n    "Power",\n    "Sys"\n  ],\n  "MINIMUM_CPU_UPDATE_INTERVAL": {\n    "secs": 0,\n    "nanos": 200000000\n  },\n  "global_cpu_info": {\n    "cpu_usage": 0.27809435,\n    "name": "cpu",\n    "vendor_id": "GenuineIntel",\n    "brand": "12th Gen Intel(R) Core(TM) i9-12900H",\n    "frequency": 2918\n  },\n  "cpus": [\n    {\n      "cpu_usage": 0.0,\n      "name": "cpu0",\n      "vendor_id": "GenuineIntel",\n      "brand": "12th Gen Intel(R) Core(TM) i9-12900H",\n      "frequency": 2918\n    },\n    {\n      "cpu_usage": 0.0,\n      "name": "cpu1",\n      "vendor_id": "GenuineIntel",\n      "brand": "12th Gen Intel(R) Core(TM) i9-12900H",\n      "frequency": 2918\n    },\n    {\n      "cpu_usage": 0.0,\n      "name": "cpu2",\n      "vendor_id": "GenuineIntel",\n      "brand": "12th Gen Intel(R) Core(TM) i9-12900H",\n      "frequency": 2918\n    },\n    {\n      "cpu_usage": 0.0,\n      "name": "cpu3",\n      "vendor_id": "GenuineIntel",\n      "brand": "12th Gen Intel(R) Core(TM) i9-12900H",\n      "frequency": 2918\n    },\n    {\n      "cpu_usage": 0.0,\n      "name": "cpu4",\n      "vendor_id": "GenuineIntel",\n      "brand": "12th Gen Intel(R) Core(TM) i9-12900H",\n      "frequency": 2918\n    },\n    {\n      "cpu_usage": 0.0,\n      "name": "cpu5",\n      "vendor_id": "GenuineIntel",\n      "brand": "12th Gen Intel(R) Core(TM) i9-12900H",\n      "frequency": 2918\n    },\n    {\n      "cpu_usage": 0.0,\n      "name": "cpu6",\n      "vendor_id": "GenuineIntel",\n      "brand": "12th Gen Intel(R) Core(TM) i9-12900H",\n      "frequency": 2918\n    },\n    {\n      "cpu_usage": 0.0,\n      "name": "cpu7",\n      "vendor_id": "GenuineIntel",\n      "brand": "12th Gen Intel(R) Core(TM) i9-12900H",\n      "frequency": 2918\n    },\n    {\n      "cpu_usage": 0.0,\n      "name": "cpu8",\n      "vendor_id": "GenuineIntel",\n      "brand": "12th Gen Intel(R) Core(TM) i9-12900H",\n      "frequency": 2918\n    },\n    {\n      "cpu_usage": 0.0,\n      "name": "cpu9",\n      "vendor_id": "GenuineIntel",\n      "brand": "12th Gen Intel(R) Core(TM) i9-12900H",\n      "frequency": 2918\n    },\n    {\n      "cpu_usage": 0.0,\n      "name": "cpu10",\n      "vendor_id": "GenuineIntel",\n      "brand": "12th Gen Intel(R) Core(TM) i9-12900H",\n      "frequency": 2918\n    },\n    {\n      "cpu_usage": 0.0,\n      "name": "cpu11",\n      "vendor_id": "GenuineIntel",\n      "brand": "12th Gen Intel(R) Core(TM) i9-12900H",\n      "frequency": 2918\n    },\n    {\n      "cpu_usage": 0.0,\n      "name": "cpu12",\n      "vendor_id": "GenuineIntel",\n      "brand": "12th Gen Intel(R) Core(TM) i9-12900H",\n      "frequency": 2918\n    },\n    {\n      "cpu_usage": 0.0,\n      "name": "cpu13",\n      "vendor_id": "GenuineIntel",\n      "brand": "12th Gen Intel(R) Core(TM) i9-12900H",\n      "frequency": 2918\n    },\n    {\n      "cpu_usage": 0.0,\n      "name": "cpu14",\n      "vendor_id": "GenuineIntel",\n      "brand": "12th Gen Intel(R) Core(TM) i9-12900H",\n      "frequency": 2918\n    },\n    {\n      "cpu_usage": 0.0,\n      "name": "cpu15",\n      "vendor_id": "GenuineIntel",\n      "brand": "12th Gen Intel(R) Core(TM) i9-12900H",\n      "frequency": 2918\n    },\n    {\n      "cpu_usage": 0.0,\n      "name": "cpu16",\n      "vendor_id": "GenuineIntel",\n      "brand": "12th Gen Intel(R) Core(TM) i9-12900H",\n      "frequency": 2918\n    },\n    {\n      "cpu_usage": 0.0,\n      "name": "cpu17",\n      "vendor_id": "GenuineIntel",\n      "brand": "12th Gen Intel(R) Core(TM) i9-12900H",\n      "frequency": 2918\n    },\n    {\n      "cpu_usage": 0.0,\n      "name": "cpu18",\n      "vendor_id": "GenuineIntel",\n      "brand": "12th Gen Intel(R) Core(TM) i9-12900H",\n      "frequency": 2918\n    },\n    {\n      "cpu_usage": 0.0,\n      "name": "cpu19",\n      "vendor_id": "GenuineIntel",\n      "brand": "12th Gen Intel(R) Core(TM) i9-12900H",\n      "frequency": 2918\n    }\n  ],\n  "physical_core_count": 10,\n  "total_memory": 16653860864,\n  "free_memory": 5177532416,\n  "available_memory": 5177532416,\n  "used_memory": 11476328448,\n  "total_swap": 4294967296,\n  "free_swap": 4271337472,\n  "used_swap": 23629824,\n  "components": [],\n  "users": [\n    {\n      "id": "0",\n      "group_id": 0,\n      "name": "root",\n      "groups": [\n        "root"\n      ]\n    },\n    {\n      "id": "1",\n      "group_id": 1,\n      "name": "daemon",\n      "groups": [\n        "daemon"\n      ]\n    },\n    {\n      "id": "2",\n      "group_id": 2,\n      "name": "bin",\n      "groups": [\n        "bin"\n      ]\n    },\n    {\n      "id": "3",\n      "group_id": 3,\n      "name": "sys",\n      "groups": [\n        "sys"\n      ]\n    },\n    {\n      "id": "4",\n      "group_id": 65534,\n      "name": "sync",\n      "groups": [\n        "nogroup"\n      ]\n    },\n    {\n      "id": "5",\n      "group_id": 60,\n      "name": "games",\n      "groups": [\n        "games"\n      ]\n    },\n    {\n      "id": "6",\n      "group_id": 12,\n      "name": "man",\n      "groups": [\n        "man"\n      ]\n    },\n    {\n      "id": "7",\n      "group_id": 7,\n      "name": "lp",\n      "groups": [\n        "lp"\n      ]\n    },\n    {\n      "id": "8",\n      "group_id": 8,\n      "name": "mail",\n      "groups": [\n        "mail"\n      ]\n    },\n    {\n      "id": "9",\n      "group_id": 9,\n      "name": "news",\n      "groups": [\n        "news"\n      ]\n    },\n    {\n      "id": "10",\n      "group_id": 10,\n      "name": "uucp",\n      "groups": [\n        "uucp"\n      ]\n    },\n    {\n      "id": "13",\n      "group_id": 13,\n      "name": "proxy",\n      "groups": [\n        "proxy"\n      ]\n    },\n    {\n      "id": "33",\n      "group_id": 33,\n      "name": "www-data",\n      "groups": [\n        "www-data"\n      ]\n    },\n    {\n      "id": "34",\n      "group_id": 34,\n      "name": "backup",\n      "groups": [\n        "backup"\n      ]\n    },\n    {\n      "id": "38",\n      "group_id": 38,\n      "name": "list",\n      "groups": [\n        "list"\n      ]\n    },\n    {\n      "id": "39",\n      "group_id": 39,\n      "name": "irc",\n      "groups": [\n        "irc"\n      ]\n    },\n    {\n      "id": "41",\n      "group_id": 41,\n      "name": "gnats",\n      "groups": [\n        "gnats"\n      ]\n    },\n    {\n      "id": "65534",\n      "group_id": 65534,\n      "name": "nobody",\n      "groups": [\n        "nogroup"\n      ]\n    },\n    {\n      "id": "100",\n      "group_id": 65534,\n      "name": "_apt",\n      "groups": [\n        "nogroup"\n      ]\n    },\n    {\n      "id": "101",\n      "group_id": 102,\n      "name": "systemd-network",\n      "groups": [\n        "systemd-network"\n      ]\n    },\n    {\n      "id": "102",\n      "group_id": 103,\n      "name": "systemd-resolve",\n      "groups": [\n        "systemd-resolve"\n      ]\n    },\n    {\n      "id": "1000",\n      "group_id": 1000,\n      "name": "snshah",\n      "groups": [\n        "snshah",\n        "adm",\n        "cdrom",\n        "sudo",\n        "dip",\n        "plugdev"\n      ]\n    },\n    {\n      "id": "103",\n      "group_id": 109,\n      "name": "messagebus",\n      "groups": [\n        "messagebus"\n      ]\n    },\n    {\n      "id": "104",\n      "group_id": 65534,\n      "name": "sshd",\n      "groups": [\n        "nogroup"\n      ]\n    }\n  ],\n  "disks": [\n    {\n      "DiskKind": {\n        "Unknown": -1\n      },\n      "name": "none",\n      "file_system": [\n        57,\n        112\n      ],\n      "mount_point": "/usr/lib/wsl/drivers",\n      "total_space": 1022015565824,\n      "available_space": 748458770432,\n      "is_removable": false\n    },\n    {\n      "DiskKind": "HDD",\n      "name": "/dev/sdc",\n      "file_system": [\n        101,\n        120,\n        116,\n        52\n      ],\n      "mount_point": "/",\n      "total_space": 269427478528,\n      "available_space": 193982509056,\n      "is_removable": false\n    },\n    {\n      "DiskKind": "HDD",\n      "name": "/dev/sdc",\n      "file_system": [\n        101,\n        120,\n        116,\n        52\n      ],\n      "mount_point": "/mnt/wslg/distro",\n      "total_space": 269427478528,\n      "available_space": 193982509056,\n      "is_removable": false\n    },\n    {\n      "DiskKind": {\n        "Unknown": -1\n      },\n      "name": "none",\n      "file_system": [\n        111,\n        118,\n        101,\n        114,\n        108,\n        97,\n        121\n      ],\n      "mount_point": "/usr/lib/wsl/lib",\n      "total_space": 8326930432,\n      "available_space": 8326930432,\n      "is_removable": false\n    },\n    {\n      "DiskKind": {\n        "Unknown": -1\n      },\n      "name": "none",\n      "file_system": [\n        111,\n        118,\n        101,\n        114,\n        108,\n        97,\n        121\n      ],\n      "mount_point": "/mnt/wslg/versions.txt",\n      "total_space": 8326930432,\n      "available_space": 8326709248,\n      "is_removable": false\n    },\n    {\n      "DiskKind": {\n        "Unknown": -1\n      },\n      "name": "none",\n      "file_system": [\n        111,\n        118,\n        101,\n        114,\n        108,\n        97,\n        121\n      ],\n      "mount_point": "/mnt/wslg/doc",\n      "total_space": 8326930432,\n      "available_space": 8326709248,\n      "is_removable": false\n    },\n    {\n      "DiskKind": {\n        "Unknown": -1\n      },\n      "name": "drvfs",\n      "file_system": [\n        57,\n        112\n      ],\n      "mount_point": "/mnt/c",\n      "total_space": 1022015565824,\n      "available_space": 748458770432,\n      "is_removable": false\n    }\n  ],\n  "networks": [\n    [\n      "lo",\n      {\n        "received": 0,\n        "total_received": 13711089104,\n        "transmitted": 0,\n        "total_transmitted": 13711089104,\n        "packets_received": 0,\n        "total_packets_received": 9502758,\n        "packets_transmitted": 0,\n        "total_packets_transmitted": 9502758,\n        "errors_on_received": 0,\n        "total_errors_on_received": 0,\n        "errors_on_transmitted": 0,\n        "total_errors_on_transmitted": 0,\n        "mac_address": [\n          0,\n          0,\n          0,\n          0,\n          0,\n          0\n        ]\n      }\n    ],\n    [\n      "bonding_masters",\n      {\n        "received": 0,\n        "total_received": 0,\n        "transmitted": 0,\n        "total_transmitted": 0,\n        "packets_received": 0,\n        "total_packets_received": 0,\n        "packets_transmitted": 0,\n        "total_packets_transmitted": 0,\n        "errors_on_received": 0,\n        "total_errors_on_received": 0,\n        "errors_on_transmitted": 0,\n        "total_errors_on_transmitted": 0,\n        "mac_address": [\n          0,\n          0,\n          0,\n          0,\n          0,\n          0\n        ]\n      }\n    ],\n    [\n      "eth0",\n      {\n        "received": 0,\n        "total_received": 1244727935,\n        "transmitted": 0,\n        "total_transmitted": 46686088,\n        "packets_received": 0,\n        "total_packets_received": 841549,\n        "packets_transmitted": 0,\n        "total_packets_transmitted": 267608,\n        "errors_on_received": 0,\n        "total_errors_on_received": 0,\n        "errors_on_transmitted": 0,\n        "total_errors_on_transmitted": 0,\n        "mac_address": [\n          0,\n          21,\n          93,\n          17,\n          7,\n          185\n        ]\n      }\n    ]\n  ],\n  "uptime": 1176093,\n  "boot_time": 1700486053,\n  "load_average": {\n    "one": 0.41,\n    "five": 0.35,\n    "fifteen": 0.21\n  },\n  "name": "Debian GNU/Linux",\n  "kernel_version": "5.15.133.1-microsoft-standard-WSL2",\n  "os_version": "11",\n  "long_os_version": "Linux 11 Debian GNU/Linux",\n  "distribution_id": "debian",\n  "host_name": "Titan"\n}','\n',char(10)),NULL,'2023-12-04 03:55:46','UNKNOWN','2023-12-04 04:00:25',NULL,NULL,NULL,NULL);
CREATE TABLE IF NOT EXISTS "behavior" (
    "behavior_id" VARCHAR PRIMARY KEY NOT NULL,
    "device_id" VARCHAR NOT NULL,
    "behavior_name" TEXT NOT NULL,
    "behavior_conf_json" TEXT CHECK(json_valid(behavior_conf_json)) NOT NULL,
    "assurance_schema_id" VARCHAR,
    "governance" TEXT CHECK(json_valid(governance) OR governance IS NULL),
    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    "created_by" TEXT DEFAULT 'UNKNOWN',
    "updated_at" TIMESTAMP,
    "updated_by" TEXT,
    "deleted_at" TIMESTAMP,
    "deleted_by" TEXT,
    "activity_log" TEXT,
    FOREIGN KEY("device_id") REFERENCES "device"("device_id"),
    FOREIGN KEY("assurance_schema_id") REFERENCES "assurance_schema"("assurance_schema_id"),
    UNIQUE("device_id", "behavior_name")
);
CREATE TABLE IF NOT EXISTS "ur_ingest_resource_path_match_rule" (
    "ur_ingest_resource_path_match_rule_id" VARCHAR PRIMARY KEY NOT NULL,
    "namespace" TEXT NOT NULL,
    "regex" TEXT NOT NULL,
    "flags" TEXT NOT NULL,
    "nature_regex_capture" TEXT,
    "description" TEXT,
    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    "created_by" TEXT DEFAULT 'UNKNOWN',
    "updated_at" TIMESTAMP,
    "updated_by" TEXT,
    "deleted_at" TIMESTAMP,
    "deleted_by" TEXT,
    "activity_log" TEXT,
    UNIQUE("namespace", "regex")
);
INSERT INTO ur_ingest_resource_path_match_rule VALUES('01HGSFQZZR83RV758MHSQE5V1Q','default','/(\.git|node_modules)/','IGNORE_RESOURCE',NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_resource_path_match_rule VALUES('01HGSFQZZRVJZ14RE3JWGYQDEC','default','\.(?P<nature>md|mdx|html|json|jsonc|puml|txt|toml|yml)$','CONTENT_ACQUIRABLE','nature',NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_resource_path_match_rule VALUES('01HGSFQZZRS133KFMD54N7DEYS','default','surveilr\[(?P<nature>[^\]]*)\]','CAPTURABLE_EXECUTABLE','nature',NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_resource_path_match_rule VALUES('01HGSFQZZRG8FKVMJCE6869B16','default','surveilr-SQL','CAPTURABLE_EXECUTABLE | CAPTURABLE_SQL',NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
CREATE TABLE IF NOT EXISTS "ur_ingest_resource_path_rewrite_rule" (
    "ur_ingest_resource_path_rewrite_rule_id" VARCHAR PRIMARY KEY NOT NULL,
    "namespace" TEXT NOT NULL,
    "regex" TEXT NOT NULL,
    "replace" TEXT NOT NULL,
    "description" TEXT,
    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    "created_by" TEXT DEFAULT 'UNKNOWN',
    "updated_at" TIMESTAMP,
    "updated_by" TEXT,
    "deleted_at" TIMESTAMP,
    "deleted_by" TEXT,
    "activity_log" TEXT,
    UNIQUE("namespace", "regex", "replace")
);
INSERT INTO ur_ingest_resource_path_rewrite_rule VALUES('01HGSFQZZRJE4B7MMSBRWZ39WG','default','(?P<nature>\.plantuml)$','.puml',NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_resource_path_rewrite_rule VALUES('01HGSFQZZRB3ET7X67PHEKH92T','default','(?P<nature>\.text)$','.txt',NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_resource_path_rewrite_rule VALUES('01HGSFQZZR8NCYF9B05766RGEB','default','(?P<nature>\.yaml)$','.yml',NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
CREATE TABLE IF NOT EXISTS "ur_ingest_session" (
    "ur_ingest_session_id" VARCHAR PRIMARY KEY NOT NULL,
    "device_id" VARCHAR NOT NULL,
    "behavior_id" VARCHAR,
    "behavior_json" TEXT CHECK(json_valid(behavior_json) OR behavior_json IS NULL),
    "ingest_started_at" TIMESTAMP NOT NULL,
    "ingest_finished_at" TIMESTAMP,
    "elaboration" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),
    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    "created_by" TEXT DEFAULT 'UNKNOWN',
    "updated_at" TIMESTAMP,
    "updated_by" TEXT,
    "deleted_at" TIMESTAMP,
    "deleted_by" TEXT,
    "activity_log" TEXT,
    FOREIGN KEY("device_id") REFERENCES "device"("device_id"),
    FOREIGN KEY("behavior_id") REFERENCES "behavior"("behavior_id"),
    UNIQUE("device_id", "created_at")
);
INSERT INTO ur_ingest_session VALUES('01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3F3T79WAZ4YN0C59ZD',NULL,replace('{\n  "classifier": {\n    "flaggables": [\n      {\n        "regex": "/(\\.git|node_modules)/",\n        "flags": "IGNORE_RESOURCE",\n        "nature_regex_capture": null\n      },\n      {\n        "regex": "\\.(?P<nature>md|mdx|html|json|jsonc|puml|txt|toml|yml)$",\n        "flags": "CONTENT_ACQUIRABLE",\n        "nature_regex_capture": "nature"\n      },\n      {\n        "regex": "surveilr\\[(?P<nature>[^\\]]*)\\]",\n        "flags": "CAPTURABLE_EXECUTABLE",\n        "nature_regex_capture": "nature"\n      },\n      {\n        "regex": "surveilr-SQL",\n        "flags": "CAPTURABLE_EXECUTABLE | CAPTURABLE_SQL",\n        "nature_regex_capture": null\n      },\n      {\n        "regex": "^/home/snshah/workspaces/github\\.com/opsfolio/resource\\-surveillance/resource\\-surveillance\\.sqlite\\.db$",\n        "flags": "IGNORE_RESOURCE",\n        "nature_regex_capture": null\n      },\n      {\n        "regex": "^/home/snshah/workspaces/github\\.com/opsfolio/resource\\-surveillance/resource\\-surveillance\\.sqlite\\.wal$",\n        "flags": "IGNORE_RESOURCE",\n        "nature_regex_capture": null\n      },\n      {\n        "regex": "^/home/snshah/workspaces/github\\.com/opsfolio/resource\\-surveillance/resource\\-surveillance\\.sqlite\\.db\\-journal$",\n        "flags": "IGNORE_RESOURCE",\n        "nature_regex_capture": null\n      }\n    ],\n    "rewrite_nature_regexs": [\n      {\n        "regex": "(?P<nature>\\.plantuml)$",\n        "replace": ".puml"\n      },\n      {\n        "regex": "(?P<nature>\\.text)$",\n        "replace": ".txt"\n      },\n      {\n        "regex": "(?P<nature>\\.yaml)$",\n        "replace": ".yml"\n      }\n    ],\n    "smart_ignore_conf_files": [\n      ".surveilr_ignore"\n    ]\n  },\n  "root_fs_paths": [\n    "."\n  ]\n}','\n',char(10)),'2023-12-04 03:55:46','2023-12-04 03:55:46',NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session VALUES('01HGSFR00WZXEBGM9YWA2R02XM','01HGSFFG3F3T79WAZ4YN0C59ZD',NULL,replace('{\n  "classifier": {\n    "flaggables": [\n      {\n        "regex": "/(\\.git|node_modules)/",\n        "flags": "IGNORE_RESOURCE",\n        "nature_regex_capture": null\n      },\n      {\n        "regex": "\\.(?P<nature>md|mdx|html|json|jsonc|puml|txt|toml|yml)$",\n        "flags": "CONTENT_ACQUIRABLE",\n        "nature_regex_capture": "nature"\n      },\n      {\n        "regex": "surveilr\\[(?P<nature>[^\\]]*)\\]",\n        "flags": "CAPTURABLE_EXECUTABLE",\n        "nature_regex_capture": "nature"\n      },\n      {\n        "regex": "surveilr-SQL",\n        "flags": "CAPTURABLE_EXECUTABLE | CAPTURABLE_SQL",\n        "nature_regex_capture": null\n      },\n      {\n        "regex": "^/home/snshah/workspaces/github\\.com/opsfolio/resource\\-surveillance/resource\\-surveillance\\.sqlite\\.db$",\n        "flags": "IGNORE_RESOURCE",\n        "nature_regex_capture": null\n      },\n      {\n        "regex": "^/home/snshah/workspaces/github\\.com/opsfolio/resource\\-surveillance/resource\\-surveillance\\.sqlite\\.wal$",\n        "flags": "IGNORE_RESOURCE",\n        "nature_regex_capture": null\n      },\n      {\n        "regex": "^/home/snshah/workspaces/github\\.com/opsfolio/resource\\-surveillance/resource\\-surveillance\\.sqlite\\.db\\-journal$",\n        "flags": "IGNORE_RESOURCE",\n        "nature_regex_capture": null\n      }\n    ],\n    "rewrite_path_regexs": [\n      {\n        "regex": "(?P<nature>\\.plantuml)$",\n        "replace": ".puml"\n      },\n      {\n        "regex": "(?P<nature>\\.text)$",\n        "replace": ".txt"\n      },\n      {\n        "regex": "(?P<nature>\\.yaml)$",\n        "replace": ".yml"\n      }\n    ],\n    "smart_ignore_conf_files": [\n      ".surveilr_ignore"\n    ]\n  },\n  "root_fs_paths": [\n    "."\n  ]\n}','\n',char(10)),'2023-12-04 04:00:25','2023-12-04 04:00:25',NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
CREATE TABLE IF NOT EXISTS "ur_ingest_session_fs_path" (
    "ur_ingest_session_fs_path_id" VARCHAR PRIMARY KEY NOT NULL,
    "ingest_session_id" VARCHAR NOT NULL,
    "root_path" TEXT NOT NULL,
    "elaboration" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),
    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    "created_by" TEXT DEFAULT 'UNKNOWN',
    "updated_at" TIMESTAMP,
    "updated_by" TEXT,
    "deleted_at" TIMESTAMP,
    "deleted_by" TEXT,
    "activity_log" TEXT,
    FOREIGN KEY("ingest_session_id") REFERENCES "ur_ingest_session"("ur_ingest_session_id"),
    UNIQUE("ingest_session_id", "root_path", "created_at")
);
INSERT INTO ur_ingest_session_fs_path VALUES('01HGSFFG3KKSY9VM7TN4AT7A30','01HGSFFG3KT5WQX7HKZDPPXHE2','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance',NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path VALUES('01HGSFR00WGR9GM0MNCNT5EKGH','01HGSFR00WZXEBGM9YWA2R02XM','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance',NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
CREATE TABLE IF NOT EXISTS "uniform_resource" (
    "uniform_resource_id" VARCHAR PRIMARY KEY NOT NULL,
    "device_id" VARCHAR NOT NULL,
    "ingest_session_id" VARCHAR NOT NULL,
    "ingest_fs_path_id" VARCHAR,
    "uri" TEXT NOT NULL,
    "content_digest" TEXT NOT NULL,
    "content" BLOB,
    "nature" TEXT,
    "size_bytes" INTEGER,
    "last_modified_at" TIMESTAMP,
    "content_fm_body_attrs" TEXT CHECK(json_valid(content_fm_body_attrs) OR content_fm_body_attrs IS NULL),
    "frontmatter" TEXT CHECK(json_valid(frontmatter) OR frontmatter IS NULL),
    "elaboration" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),
    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    "created_by" TEXT DEFAULT 'UNKNOWN',
    "updated_at" TIMESTAMP,
    "updated_by" TEXT,
    "deleted_at" TIMESTAMP,
    "deleted_by" TEXT,
    "activity_log" TEXT,
    FOREIGN KEY("device_id") REFERENCES "device"("device_id"),
    FOREIGN KEY("ingest_session_id") REFERENCES "ur_ingest_session"("ur_ingest_session_id"),
    FOREIGN KEY("ingest_fs_path_id") REFERENCES "ur_ingest_session_fs_path"("ur_ingest_session_fs_path_id"),
    UNIQUE("device_id", "content_digest", "uri", "size_bytes", "last_modified_at")
);
INSERT INTO uniform_resource VALUES('01HGSFFG46NVMM33PJK7YB76ZX','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src/bootstrap.sql','-',NULL,'sql',85399,'2023-12-04 02:56:03.889340016 UTC',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFFG46GW12V10R4YR9NF6Q','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src/resources.states.puml','e382423d83e20b2265d3972a43344756fa401f0c',replace('@startuml Resources State Machine\n\nstate WalkDir {\n}\n\nstate SmartIgnore {\n}\n\nstate VFS {\n}\n\nstate TaskLines {\n}\n\nstate EncounterableResource {\n}\n\nstate Ignored {\n}\n\nstate EncounteredResource {\n}\n\nstate NotFile {\n}\n\nstate NotFound {\n}\n\nstate ERROR {\n}\n\nstate DenoTaskShellLine {\n}\n\nstate Resource {\n}\n\nstate CapturableExec {\n}\n\nstate ContentResource {\n\n}\n\nstate UniformResource {\n}\n\nstate HTML {\n}\n\nstate Markdown {\n}\n\nstate Image {\n}\n\nstate JSON {\n}\n\nstate JsonableTextResource {\n}\n\nstate TAP {\n}\n\nstate TOML {\n}\n\nstate YAML {\n}\n\nstate Text {\n}\n\nstate XML {\n}\n\nstate SVG {\n}\n\nstate SourceCode {\n}\n\nWalkDir --> EncounterableResource\nSmartIgnore --> EncounterableResource\nVFS --> EncounterableResource\nTaskLines --> EncounterableResource\n\nEncounterableResource --> Ignored\nEncounterableResource --> ERROR\nEncounterableResource --> EncounteredResource\nEncounteredResource --> Ignored\nEncounteredResource --> ERROR\nEncounteredResource --> NotFile\nEncounteredResource --> NotFound\nEncounteredResource --> Resource\nEncounteredResource --> CapturableExec\n\nEncounteredResource --> DenoTaskShellLine\nDenoTaskShellLine --> CapturableExec\n\nResource --> ContentResource\nCapturableExec --> ContentResource\n\nContentResource --> UniformResource\n\nUniformResource --> HTML\nUniformResource --> Image\nUniformResource --> Markdown\nUniformResource --> Text\nUniformResource --> SourceCode\n\nUniformResource --> JSON\nUniformResource --> JsonableTextResource\nJsonableTextResource --> TAP\nJsonableTextResource --> TOML\nJsonableTextResource --> YAML\n\nUniformResource --> XML\nXML -> SVG\n\n@enduml\n','\n',char(10)),'puml',1568,'2023-12-03 17:24:05.761788004 UTC',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFFG483CTQ2F3YBPG9EQA6','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/README.md','d383eaa1b09cf79b81fa3ec7845b884d95ca32fd',replace('<p align="center">\012  <img src="support/surveilr-logo-with-text-264x66px.png" width="264" height="66"/>\012</p>\012\012`surveilr` is an extendable file system inspector for performing surveillance of\012machine resources. It is used to walk resources like file systems and generate\012an SQLite database which can then be consumed by any computing environment that\012supports SQLite.\012\012The SQLite file which `surveilr` prepares is called the _Resource Surveillance\012State Database_ (`RSSD`) and once it''s been generated it''s no longer tied to\012`surveilr` and can be used by any other tool, service, application, or ETL''d\012into a data warehouse.\012\012![Architecture](support/docs/architecture.drawio.svg)\012\012## Installation\012\012You can install the latest `surveilr` using either of the following one-liners:\012\012```bash\012$ curl -sL https://raw.githubusercontent.com/opsfolio/resource-surveillance/main/install.sh | sh\012\012# if you want a different install path\012$ SURVEILR_HOME="$HOME/bin" curl -sL https://raw.githubusercontent.com/opsfolio/resource-surveillance/main/install.sh | sh\012```\012\012If you use `eget`:\012\012```bash\012$ eget opsfolio/resource-surveillance --asset tar.gz\012```\012\012Here''s how you get help for the various commands that `surveilr` provides:\012\012```bash\012$ surveilr --version                      # version information\012$ surveilr --help                         # get CLI help (pay special attention to ENV var names)\012$ surveilr --completions fish | source    # setup shell completions to reduce typing\012```\012\012See [CLI Help](support/docs/CLI-help.md) for summary of what `surveilr --help`\012provides. Though [CLI Help](support/docs/CLI-help.md) is a good reference, it''s\012best to depend on `surveilr --help` and `surveilr <command> --help` because it\012will more accurate for the latest version.\012\012## Checking what can be "walked" in the file system\012\012Before you do any ingestion into SQLite `RSSD`s, you can get some statistics on\012what will be ingested when you use the `ingest` command in the next section. Use\012`--dry-run` to see a summary of what files will be ingested.\012\012```bash\012$ surveilr ingest files --dry-run                        # show stats for CWD\012$ surveilr ingest files --dry-run -r /other -r /other2   # test some other director(ies)\012```\012\012## Creating `RSSD`s by "walking" the file system\012\012Unless you set the `SURVEILR_STATEDB_FS_PATH` env var, the default _Resource\012Surveillance State Database_ ("RSSD") will be `resource-surveillance.sqlite.db`.\012\012If you have many surveillance state SQLite databases and you want to query them\012as one database instead of individual `RSSD`s, you should use a pattern like\012like this so they can be easily merged using `surveilr admin merge-sql`. Add any\012kind of _identifying_ or _differenting_ field(s) like `$(hostname)` into the\012`RSSD` filename.\012\012```bash\012$ export SURVEILR_STATEDB_FS_PATH="resource-surveillance-$(hostname).sqlite.db"\012```\012\012Here''s how you use the most common `ingest` patterns:\012\012```bash\012$ surveilr ingest files --help                 # explain the `ingest` subcommand\012$ surveilr ingest files                        # walk the current working directory (CWD)\012$ surveilr ingest files -r /other -r /other2   # walk some other director(ies)\012$ surveilr ingest files --stats                # walk the current working directory (CWD) show stats afterwards\012```\012\012## Creating `RSSD`s by executing shell tasks\012\012The `surveilr ingest tasks` commands accepts one or more lines of Deno Task\012Shell commands / tasks through STDIN, executes them one by one, and inserts each\012output as JSON into `uniform_resource`.\012\012Each line in STDIN can be one of the following:\012\012- **Simple text**. A line of text that is not in `JSONL` format will be treated\012  as an "anonymous" (unidentified) command string, executed with the assumption\012  that the command output is in JSON, and stored in `uniform_resource`.\012- **JSONL**. A line of text that is in `JSONL` format will be treated as an JSON\012  object of the type `{ key: string, nature?: string }`, parsed, the value of\012  `key` is executed, and stored in `uniform_resource` using `key` is the\012  identifier with an optional `nature`. If `nature` is not supplied, the output\012  of the command is assumed to be JSON.\012\012Examples:\012\012```bash\012# single command without identifier or nature, surveilr expects JSON\012$ echo "osqueryi \"select * from users\" --json" | surveilr ingest tasks\012\012# single command with identifier and nature\012$ echo "{ \"my-osquery-test\": \"osqueryi ''select * from users''\", \"nature\": \"txt\" }" | surveilr ingest tasks\012\012# multiple commands whether each line can be a JSONL formatted object;\012# the following runs Deno to grab a locak package.json file, extract all scripts\012# starting with `surveilr-` and sends them to surveilr to execute and store.\012$ deno eval "Deno.readTextFile(''package.json'').then(text => { \\012      const data = JSON.parse(text);                          \\012      console.log(                                            \\012        Object.entries(data.scripts ?? {})                    \\012          .filter(([k]) => k.startsWith(''surveilr-''))         \\012          .map(([k, v]) => ({ [k]: v }))                      \\012          .map((line) => JSON.stringify(line)).join(''\n''),    \\012      )                                                       \\012    }).catch((err) => console.error(err));"                   \\012  | surveilr ingest tasks\012\012# multiple commands whether each line can be a JSONL formatted object;\012# the following runs Deno to grab a remote deno.jsonc file, extract all tasks\012# starting with `surveilr-` and sends them to surveilr to execute and store.\012$ deno eval "fetch(                                                                  \\012      ''https://raw.githubusercontent.com/netspective-labs/sql-aide/main/deno.jsonc'', \\012    ).then((res) => res.json()).then((data) =>                                       \\012      console.log(                                                                   \\012        Object.entries(data.tasks ?? {})                                             \\012          .filter(([k]) => k.startsWith(''surveilr-''))                                \\012          .map(([k, v]) => ({ [k]: v }))                                             \\012          .map((line) => JSON.stringify(line)).join(''\n''),                           \\012      )                                                                              \\012    ).catch((err) => console.error(err));"                                           \\012  | surveilr ingest tasks\012```\012\012### Testing shell tasks\012\012If you want to test the output of shell tasks without persisting with\012`ingest tasks`:\012\012```bash\012$ surveilr capturable-exec test task --help\012$ surveilr capturable-exec test task -t ''osqueryi "select * from users" --json''\012$ surveilr capturable-exec test task -t ''osqueryi "select * from users"''\012$ surveilr capturable-exec test task -t ''{ "osquery result as plain text": "osqueryi \"SELECT * from users\" --json" }''\012$ surveilr capturable-exec test task -t ''{ "osquery result as plain text": "osqueryi \"SELECT * from users\"", "nature": "text/plain" }''\012\012$ echo ''osqueryi "select * from users" --json'' | surveilr capturable-exec test task --stdin\012$ echo ''{ "osquery result as plain text": "osqueryi \"SELECT * from users\"", "nature": "text/plain" }'' | surveilr capturable-exec test task --stdin\012$ cat support/test-fixtures/synthetic-tasks-via-stdin | surveilr capturable-exec test task --stdin\012```\012\012See examples\012[in this test fixture](support/test-fixtures/synthetic-tasks-via-stdin).\012\012## Merging multiple `RSSD`s into one using `surveilr` (`admin merge`)\012\012Merging multiple _Resource Surveillance State SQLite Databases_ into one using\012`surveilr` _without_ running external `sqlite3`:\012\012```bash\012$ surveilr admin merge --help                  # explain the `admin merge` subcommand\012$ surveilr admin merge                         # execute merge SQL for all files in the current path\012$ surveilr admin merge --candidates "**/*.db"  # execute merge SQL for specific globs in the current path\012```\012\012The `surveilr admin merge` above prepares the SQL to merge multiple databases\012into one and executes it automatically creating\012`resource-surveillance-aggregated.sqlite.db` (you can override the name using\012`-d`).\012\012Generating SQL to merge multiple _Resource Surveillance State SQLite Databases_\012into one, inspecting it, and then executing _using_ `sqlite3`:\012\012```bash\012$ surveilr admin merge --sql-only\012$ surveilr admin merge --candidates "**/*.db" --sql-only\012$ surveilr admin merge --candidates "**/*.db" -i "x*.db" --sql-only # -i ignores certain candidates\012$ surveilr admin merge --sql-only > merge.sql\012```\012\012### Merging multiple `RSSD`s into one using `sqlite3` (`admin merge --sql-only`)\012\012Because merging multiple database can sometimes fail due to unforseen data\012issues, you can use `sqlite3` to merge multiple databases using\012`surveilr`-generated SQL after inspecting it. Here''s how:\012\012```bash\012$ surveilr admin init -d target.sqlite.db -r \\012  && surveilr admin merge -d target.sqlite.db --sql-only \\012   | sqlite3 target.sqlite.db\012```\012\012The CLI multi-command pipe above does three things:\012\0121. `surveilr admin init` initializes an empty `target.sqlite.db` (`-r` removes\012   it if it exists)\0122. `surveilr admin merge --sql-only` generates the merge SQL for all databases\012   except `target.sqlite.db`; to inspect the SQL you can save it to a file\012   `surveilr admin merge -d target.sqlite.db --sql-only > merge.sql`.\0123. `sqlite3` pipe at the end just executes the generated SQL using SQLite 3\012   shell and produces merged `target.sqlite.db`\012\012Once `target.sqlite.db` is created after step 3, none of the original\012device-specific `RSSD`s are required and `target.sqlite.db` is independent of\012`surveilr` as well.\012\012## Files as Resources vs. Capturable Executables as Resources\012\012When `ingest` command runs, it''s main job is to find files and store them in\012`uniform_resource` table as records. If the content of a file is already stored\012in the file system this works well. However, sometimes we need to generate the\012content of a file (or group of files) and store the output of the generated\012files. That''s where the idea of _Capturable Executables_ (`CEs`) comes in.\012\012CEs allow you to pass in arguments or behaviors to the `ingest` command that\012allows certain patterns of files to be executed in a safe shell, and their\012STDOUT and STDERR captured and stored in `uniform_resource`. These scripts are\012referred to as _capturable executables_ or `CE`s and are influenced through\012_Processing Instructions_ (`PI`s) in file names.\012\012For example, if we want `ingest`, as it encounters a `abc.surveilr.sh` file to\012execute it, we can pass in `--capture_exec "surverilr[json]"` and it will\012execute the script, treat the output as JSON, and store it in\012`uniform_resource`. `surverilr[json]` becomes what is known as a `CE` Resource\012Surveillance _Processing Instruction_ (`PI`) and the pattern is arbitrary so\012long as the _nature_ is a named Rust reg ex capture group liked\012`surveilr\[(?P<nature>[^]]*)\]` (focus on `nature`, you can test this regular\012expressions at https://regex101.com/r/sVroiN/1).\012\012This _Capturable Executables_ functionality is available:\012\012- Calls an executable without any parameters and assumes the output is whatever\012  is in `[xyz]` PI as the `uniform_resource` _nature_.\012- If the filename is something like `myfile.surveilr-SQL.sh` it means that the\012  output of the command will be treated as batch SQL and executed on the target\012  SQLite database in the same transaction as the primary database. If we pass in\012  everything through STDIN (see below), `INSERT INTO` should be easy.\012- Need to capture status code from the executable and STDERR from subprocess and\012  pass it back so it can be stored in\012  `walk_session_path_fs_entry`.`captured_executable` JSON column along with\012  `args` and `stdin`.\012- Pass in the device, behavior, and other context information through CLI\012  parameters or STDIN to the shell script. The input (STDIN) should look like\012  this and contain a reasonably complete context so that executables know how to\012  generate their output:\012\012```json\012{\012  "surveilr-ingest": {\012    "args": {\012      "state_db_fs_path": "./e2e-test-state.sqlite.db"\012    },\012    "behavior": {\012      "capturable_executables": [\012        "surveilr\\[(?P<nature>[^\\]]*)\\]"\012      ],\012      "compute_digests": [".*"],\012      "ignore_regexs": [\012        "/(\\.git|node_modules)/"\012      ],\012      "ingest_content": [\012        "\\.(md|mdx|html|json|jsonc|toml|yaml)$",\012        "surveilr\\[(?P<nature>[^\\]]*)\\]"\012      ],\012      "root_paths": ["./support/test-fixtures"]\012    },\012    "device": { "device_id": "01HFHZGEZC763PWRBV2WKXBJH0" },\012    "env": {\012      "current_dir": "/home/snshah/workspaces/github.com/opsfolio/resource-surveillance"\012    },\012    "session": {\012      "entry": {\012        "path": "/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/echo-stdin.surveilr[json].sh"\012      },\012      "walk-path-id": "01HFHZGEZEDTW29BWWSEDE46WH",\012      "walk-session-id": "01HFHZGEZD31S0V1EYBW4TT530"\012    }\012  }\012}\012```\012\012### Testing Capturable Executables\012\012Try to keep CEs individually testable as independent scripts. You can validate\012capturable executables by using `surveilr capturable-exec` subcommands.\012\012```bash\012$ surveilr capturable-exec ls --help                    # see all the options (arguments are same as `ingest`)\012$ surveilr capturable-exec ls                           # scan for CEs and show a table of what''s found\012$ surveilr capturable-exec ls --markdown > capturable-exec.md  # find CEs, try to execute them, store their output in a Markdown\012```\012\012Running `capturable-exec ls` should show something similar to this:\012\012```\012| Executable                                                                     | Nature                        | Issue             |\012|:------------------------------------------------------------------------------:|:-----------------------------:|:-----------------:|\012| ./support/test-fixtures/idempotent.surveilr-SQL.sh                             | batched SQL                   |                   |\012| ./support/test-fixtures/capturable-executable.surveilr[json].sh                | json                          |                   |\012| ./support/test-fixtures/capturable-executable.surveilr[json].ts                | json                          |                   |\012| ./support/test-fixtures/echo-stdin.surveilr[json].sh                           | json                          |                   |\012| ./support/test-fixtures/capturable-executable-bad-exit-status.surveilr[txt].sh | txt                           |                   |\012| ./support/test-fixtures/capturable-executable-no-permissions.surveilr[json].sh | Executable Permission Not Set | chmod +x required |\012```\012\012Running `capturable-exec ls --markdown` generates a Markdown document that you\012can use to learn more about what `STDIN`, `STDOUT`, and `STDERR` streams will be\012created during `ingest`.\012\012### Capturable Executables Examples\012\012See these examples in `support/test-fixtures`:\012\012- `capturable-executable.surveilr[json].ts` shows how to use simple JSON output\012  from a Deno script and store it in `uniform_resource`\012- `capturable-executable.surveilr[json].sh` shows how to use simple JSON output\012  from a Bash script and store it in `uniform_resource`\012- `echo-stdin.surveilr[json].sh` shows how to accept STDIN and emit JSON as\012  STDOUT -- this allows more complex processing by getting additional context\012  from surveilr and doing something special in a script.\012- `idempotent.surveilr-SQL.sh` shows how a script can generate SQL and\012  `surveilr` will execute the SQL as a batch in the same transaction (WARNING:\012  SQL is unsanitized and this might be a security hole so be careful turning it\012  on).\012\012How to control the behavior of _Capturable Executables_ filenames:\012\012- `surveilr ingest --captured-fs-exec-sql` Regexp(s) control which files are\012  considered capturable executables who output will be captured and executed as\012  "SQL batch"\012- `surveilr ingest --capture-fs-exec` Regexp(s) control which files are\012  considered capturable executables\012\012Full diagnostics of STDIN, STDOUT, STDERR, etc. are present in the\012`ur_session_path_fs_entry` row for all scripts as they''re encountered. If you\012need more features, submit tickets.\012\012## Code Notebooks\012\012In order to ensure that the Resource Surveillance agent is extensible, we\012leverage SQLite heavily for both storage of data but also storing the SQL it\012needs to bootstrap itself, perform migrations, and conduct regular\012administrative and query operations.\012\012```bash\012$ surveilr notebooks ls                                     # list all notebooks and cells available, with migrations status\012$ surveilr notebooks cat --cell infoSchemaOsQueryATCs       # export the information schema as osQuery ATC\012$ surveilr notebooks cat --cell notebooksInfoSchemaDiagram  # show the notebooks admin PlanUML ERD stored in the database\012$ surveilr notebooks cat --cell surveilrInfoSchemaDiagram   # show the surveilr PlanUML ERD stored in the database\012```\012\012The key to that extensibility is the `code_notebook_cell` table which stores SQL\012(called _SQL notebook cells_) or other interpretable code in the database so\012that once the database is created, all SQL and related code is part of the\012database and may be executed like this from the CLI using any environment that\012supports SQLite shell or SQLite drivers:\012\012```bash\012$ sqlite3 xyz.db "select sql from code_notebook_cell where code_notebook_cell_id = ''infoSchemaMarkdown''" | sqlite3 xyz.db\012```\012\012You can pass in arguments using `.parameter` or `sql_parameters` table, like:\012\012```bash\012$ echo ".parameter set X Y; $(sqlite3 xyz.db \"SELECT sql FROM code_notebook_cell where code_notebook_cell_id = ''init''\")" | sqlite3 xyz.db\012```\012\012Anywhere you see `surveilr notebooks cat` those can be run directly through\012SQLite, the following two commands do the same thing:\012\012```bash\012$ surveilr notebooks cat --cell infoSchemaOsQueryATCs | sqlite3 resource-surveillance.sqlite.db\012$ sqlite3 resource-surveillance.sqlite.db "select interpretable_code from stored_notebook_cell where cell_name = ''infoSchemaOsQueryATCs''" | sqlite3 device-content.sqlite.db\012```\012\012## Database Documentation\012\012- [SQLite State Schema Documentation](support/docs/surveilr-state-schema/README.md)\012- [SQLite Notebooks Schema Documentation](support/docs/surveilr-code-notebooks-schema/README.md)\012\012To generate schema docs:\012\012```bash\012$ just tbls\012```\012\012### AI Prompts\012\012In order to make it easier to understand how to generate `surveilr` SQL, you can\012use these prompts stored in the notebooks:\012\012```bash\012$ surveilr notebooks cat --cell "%understand service schema%"\012$ surveilr notebooks cat --cell "%understand notebooks schema%"\012```\012\012The output of the first one is a good way to help ChatGPT or other LLM to\012understand the `surveilr` service SQL schema (`device`, `uniform_resource`,\012`ingest`, etc) and ask it questions to generate SQL for you. The second one is a\012good way to help ChatGPT or other LLM to understand the `surveilr` notebooks\012schema and ask it questions to generate SQL specifically for the _code\012notebooks_ capability.\012','\012',char(10)),'md',19030,'2023-12-02 21:21:29.700009683 UTC',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFFG4EAA880XNP6NN1VNX6','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/quality-system/surveilr-sbom.spdx.json','72297a49ec7580f53925578399bc191ebfbc208f',replace('{\012  "SPDXID": "SPDXRef-DOCUMENT",\012  "creationInfo": {\012    "created": "2023-11-14T14:41:40.863Z",\012    "creators": [\012      "Tool: cargo-sbom-v0.8.4"\012    ]\012  },\012  "dataLicense": "CC0-1.0",\012  "documentNamespace": "https://spdx.org/spdxdocs/resource-surveillance-5f10ee5d-bd70-48eb-9ffa-7c88499d2020",\012  "files": [\012    {\012      "SPDXID": "SPDXRef-File-surveilr",\012      "checksums": [],\012      "fileName": "surveilr",\012      "fileTypes": [\012        "BINARY"\012      ]\012    }\012  ],\012  "name": "resource-surveillance",\012  "packages": [\012    {\012      "SPDXID": "SPDXRef-Package-same-file-1.0.6",\012      "description": "A simple crate for determining whether two file paths point to the same file.\n",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/same-file@1.0.6",\012          "referenceType": "purl"\012        }\012      ],\012      "homepage": "https://github.com/BurntSushi/same-file",\012      "licenseConcluded": "Unlicense OR MIT",\012      "licenseDeclared": "Unlicense/MIT",\012      "name": "same-file",\012      "versionInfo": "1.0.6"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-serde_rusqlite-0.33.1",\012      "description": "Serialize/deserialize rusqlite rows",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/serde_rusqlite@0.33.1",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "LGPL-3.0",\012      "licenseDeclared": "LGPL-3.0",\012      "name": "serde_rusqlite",\012      "versionInfo": "0.33.1"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-anstyle-wincon-3.0.1",\012      "description": "Styling legacy Windows terminals",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/anstyle-wincon@3.0.1",\012          "referenceType": "purl"\012        }\012      ],\012      "homepage": "https://github.com/rust-cli/anstyle",\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "anstyle-wincon",\012      "versionInfo": "3.0.1"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-android-tzdata-0.1.1",\012      "description": "Parser for the Android-specific tzdata file",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/android-tzdata@0.1.1",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "android-tzdata",\012      "versionInfo": "0.1.1"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-clap_lex-0.6.0",\012      "description": "Minimal, flexible command line parser",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/clap_lex@0.6.0",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "clap_lex",\012      "versionInfo": "0.6.0"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-windows-core-0.51.1",\012      "description": "Rust for Windows",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/windows-core@0.51.1",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "windows-core",\012      "versionInfo": "0.51.1"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-regex-automata-0.4.3",\012      "description": "Automata construction and matching using regular expressions.",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/regex-automata@0.4.3",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "regex-automata",\012      "versionInfo": "0.4.3"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-ryu-1.0.15",\012      "description": "Fast floating point to string conversion",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/ryu@1.0.15",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "Apache-2.0 OR BSL-1.0",\012      "licenseDeclared": "Apache-2.0 OR BSL-1.0",\012      "name": "ryu",\012      "versionInfo": "1.0.15"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-block-buffer-0.10.4",\012      "description": "Buffer type for block processing of data",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/block-buffer@0.10.4",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "block-buffer",\012      "versionInfo": "0.10.4"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-anstyle-parse-0.2.2",\012      "description": "Parse ANSI Style Escapes",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/anstyle-parse@0.2.2",\012          "referenceType": "purl"\012        }\012      ],\012      "homepage": "https://github.com/rust-cli/anstyle",\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "anstyle-parse",\012      "versionInfo": "0.2.2"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-bumpalo-3.14.0",\012      "description": "A fast bump allocation arena for Rust.",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/bumpalo@3.14.0",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "bumpalo",\012      "versionInfo": "3.14.0"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-serde_spanned-0.6.4",\012      "description": "Serde-compatible spanned Value",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/serde_spanned@0.6.4",\012          "referenceType": "purl"\012        }\012      ],\012      "homepage": "https://github.com/toml-rs/toml",\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "serde_spanned",\012      "versionInfo": "0.6.4"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-chrono-0.4.31",\012      "description": "Date and time library for Rust",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/chrono@0.4.31",\012          "referenceType": "purl"\012        }\012      ],\012      "homepage": "https://github.com/chronotope/chrono",\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "chrono",\012      "versionInfo": "0.4.31"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-rand_chacha-0.3.1",\012      "description": "ChaCha random number generator\n",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/rand_chacha@0.3.1",\012          "referenceType": "purl"\012        }\012      ],\012      "homepage": "https://rust-random.github.io/book",\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "rand_chacha",\012      "versionInfo": "0.3.1"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-unsafe-libyaml-0.2.9",\012      "description": "libyaml transpiled to rust by c2rust",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/unsafe-libyaml@0.2.9",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT",\012      "licenseDeclared": "MIT",\012      "name": "unsafe-libyaml",\012      "versionInfo": "0.2.9"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-winapi-i686-pc-windows-gnu-0.4.0",\012      "description": "Import libraries for the i686-pc-windows-gnu target. Please don''t use this crate directly, depend on winapi instead.",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/winapi-i686-pc-windows-gnu@0.4.0",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT/Apache-2.0",\012      "name": "winapi-i686-pc-windows-gnu",\012      "versionInfo": "0.4.0"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-fallible-iterator-0.2.0",\012      "description": "Fallible iterator traits",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/fallible-iterator@0.2.0",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT/Apache-2.0",\012      "name": "fallible-iterator",\012      "versionInfo": "0.2.0"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-ppv-lite86-0.2.17",\012      "description": "Implementation of the crypto-simd API for x86",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/ppv-lite86@0.2.17",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT/Apache-2.0",\012      "name": "ppv-lite86",\012      "versionInfo": "0.2.17"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-rusqlite-0.29.0",\012      "description": "Ergonomic wrapper for SQLite",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/rusqlite@0.29.0",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT",\012      "licenseDeclared": "MIT",\012      "name": "rusqlite",\012      "versionInfo": "0.29.0"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-rand-0.8.5",\012      "description": "Random number generators and other randomness functionality.\n",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/rand@0.8.5",\012          "referenceType": "purl"\012        }\012      ],\012      "homepage": "https://rust-random.github.io/book",\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "rand",\012      "versionInfo": "0.8.5"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-wasm-bindgen-0.2.88",\012      "description": "Easy support for interacting between JS and Rust.\n",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/wasm-bindgen@0.2.88",\012          "referenceType": "purl"\012        }\012      ],\012      "homepage": "https://rustwasm.github.io/",\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "wasm-bindgen",\012      "versionInfo": "0.2.88"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-wasm-bindgen-macro-0.2.88",\012      "description": "Definition of the `#[wasm_bindgen]` attribute, an internal dependency\n",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/wasm-bindgen-macro@0.2.88",\012          "referenceType": "purl"\012        }\012      ],\012      "homepage": "https://rustwasm.github.io/wasm-bindgen/",\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "wasm-bindgen-macro",\012      "versionInfo": "0.2.88"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-wasm-bindgen-backend-0.2.88",\012      "description": "Backend code generation of the wasm-bindgen tool\n",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/wasm-bindgen-backend@0.2.88",\012          "referenceType": "purl"\012        }\012      ],\012      "homepage": "https://rustwasm.github.io/wasm-bindgen/",\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "wasm-bindgen-backend",\012      "versionInfo": "0.2.88"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-winapi-0.3.9",\012      "description": "Raw FFI bindings for all of Windows API.",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/winapi@0.3.9",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT/Apache-2.0",\012      "name": "winapi",\012      "versionInfo": "0.3.9"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-wasi-0.11.0+wasi-snapshot-preview1",\012      "description": "Experimental WASI API bindings for Rust",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/wasi@0.11.0+wasi-snapshot-preview1",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "Apache-2.0 OR Apache-2.0 OR MIT",\012      "licenseDeclared": "Apache-2.0 WITH LLVM-exception OR Apache-2.0 OR MIT",\012      "name": "wasi",\012      "versionInfo": "0.11.0+wasi-snapshot-preview1"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-windows-targets-0.48.5",\012      "description": "Import libs for Windows",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/windows-targets@0.48.5",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "windows-targets",\012      "versionInfo": "0.48.5"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-rayon-1.8.0",\012      "description": "Simple work-stealing parallelism for Rust",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/rayon@1.8.0",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "rayon",\012      "versionInfo": "1.8.0"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-walkdir-2.4.0",\012      "description": "Recursively walk a directory.",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/walkdir@2.4.0",\012          "referenceType": "purl"\012        }\012      ],\012      "homepage": "https://github.com/BurntSushi/walkdir",\012      "licenseConcluded": "Unlicense OR MIT",\012      "licenseDeclared": "Unlicense/MIT",\012      "name": "walkdir",\012      "versionInfo": "2.4.0"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-crossbeam-deque-0.8.3",\012      "description": "Concurrent work-stealing deque",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/crossbeam-deque@0.8.3",\012          "referenceType": "purl"\012        }\012      ],\012      "homepage": "https://github.com/crossbeam-rs/crossbeam/tree/master/crossbeam-deque",\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "crossbeam-deque",\012      "versionInfo": "0.8.3"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-base64-0.21.5",\012      "description": "encodes and decodes base64 as bytes or utf8",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/base64@0.21.5",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "base64",\012      "versionInfo": "0.21.5"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-windows_i686_gnu-0.48.5",\012      "description": "Import lib for Windows",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/windows_i686_gnu@0.48.5",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "windows_i686_gnu",\012      "versionInfo": "0.48.5"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-glob-0.3.1",\012      "description": "Support for matching file paths against Unix shell style patterns.\n",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/glob@0.3.1",\012          "referenceType": "purl"\012        }\012      ],\012      "homepage": "https://github.com/rust-lang/glob",\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "glob",\012      "versionInfo": "0.3.1"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-allocator-api2-0.2.16",\012      "description": "Mirror of Rust''s allocator API",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/allocator-api2@0.2.16",\012          "referenceType": "purl"\012        }\012      ],\012      "homepage": "https://github.com/zakarumych/allocator-api2",\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "allocator-api2",\012      "versionInfo": "0.2.16"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-crypto-common-0.1.6",\012      "description": "Common cryptographic traits",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/crypto-common@0.1.6",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "crypto-common",\012      "versionInfo": "0.1.6"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-serde-1.0.192",\012      "description": "A generic serialization/deserialization framework",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/serde@1.0.192",\012          "referenceType": "purl"\012        }\012      ],\012      "homepage": "https://serde.rs",\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "serde",\012      "versionInfo": "1.0.192"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-toml-0.8.8",\012      "description": "A native Rust encoder and decoder of TOML-formatted files and streams. Provides\nimplementations of the standard Serialize/Deserialize traits for TOML data to\nfacilitate deserializing and serializing Rust structures.\n",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/toml@0.8.8",\012          "referenceType": "purl"\012        }\012      ],\012      "homepage": "https://github.com/toml-rs/toml",\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "toml",\012      "versionInfo": "0.8.8"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-windows_x86_64_gnullvm-0.48.5",\012      "description": "Import lib for Windows",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/windows_x86_64_gnullvm@0.48.5",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "windows_x86_64_gnullvm",\012      "versionInfo": "0.48.5"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-iana-time-zone-0.1.58",\012      "description": "get the IANA time zone for the current system",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/iana-time-zone@0.1.58",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "iana-time-zone",\012      "versionInfo": "0.1.58"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-serde_yaml-0.9.27",\012      "description": "YAML data format for Serde",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/serde_yaml@0.9.27",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "serde_yaml",\012      "versionInfo": "0.9.27"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-indexmap-2.1.0",\012      "description": "A hash table with consistent order and fast iteration.",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/indexmap@2.1.0",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "Apache-2.0 OR MIT",\012      "licenseDeclared": "Apache-2.0 OR MIT",\012      "name": "indexmap",\012      "versionInfo": "2.1.0"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-serde_derive-1.0.192",\012      "description": "Macros 1.1 implementation of #[derive(Serialize, Deserialize)]",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/serde_derive@1.0.192",\012          "referenceType": "purl"\012        }\012      ],\012      "homepage": "https://serde.rs",\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "serde_derive",\012      "versionInfo": "1.0.192"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-anstyle-query-1.0.0",\012      "description": "Look up colored console capabilities",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/anstyle-query@1.0.0",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "anstyle-query",\012      "versionInfo": "1.0.0"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-cpufeatures-0.2.11",\012      "description": "Lightweight runtime CPU feature detection for aarch64, loongarch64, and x86/x86_64 targets, \nwith no_std support and support for mobile targets including Android and iOS\n",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/cpufeatures@0.2.11",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "cpufeatures",\012      "versionInfo": "0.2.11"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-ahash-0.8.6",\012      "description": "A non-cryptographic hash function using AES-NI for high performance",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/ahash@0.8.6",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "ahash",\012      "versionInfo": "0.8.6"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-winnow-0.5.19",\012      "description": "A byte-oriented, zero-copy, parser combinators library",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/winnow@0.5.19",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT",\012      "licenseDeclared": "MIT",\012      "name": "winnow",\012      "versionInfo": "0.5.19"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-bstr-1.8.0",\012      "description": "A string type that is not required to be valid UTF-8.",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/bstr@1.8.0",\012          "referenceType": "purl"\012        }\012      ],\012      "homepage": "https://github.com/BurntSushi/bstr",\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "bstr",\012      "versionInfo": "1.8.0"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-bitflags-2.4.1",\012      "description": "A macro to generate structures which behave like bitflags.\n",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/bitflags@2.4.1",\012          "referenceType": "purl"\012        }\012      ],\012      "homepage": "https://github.com/bitflags/bitflags",\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "bitflags",\012      "versionInfo": "2.4.1"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-digest-0.10.7",\012      "description": "Traits for cryptographic hash functions and message authentication codes",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/digest@0.10.7",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "digest",\012      "versionInfo": "0.10.7"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-fnv-1.0.7",\012      "description": "Fowler–Noll–Vo hash function",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/fnv@1.0.7",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "Apache-2.0 OR MIT",\012      "licenseDeclared": "Apache-2.0 / MIT",\012      "name": "fnv",\012      "versionInfo": "1.0.7"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-uuid-1.5.0",\012      "description": "A library to generate and parse UUIDs.",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/uuid@1.5.0",\012          "referenceType": "purl"\012        }\012      ],\012      "homepage": "https://github.com/uuid-rs/uuid",\012      "licenseConcluded": "Apache-2.0 OR MIT",\012      "licenseDeclared": "Apache-2.0 OR MIT",\012      "name": "uuid",\012      "versionInfo": "1.5.0"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-cfg-if-1.0.0",\012      "description": "A macro to ergonomically define an item depending on a large number of #[cfg]\nparameters. Structured like an if-else chain, the first matching branch is the\nitem that gets emitted.\n",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/cfg-if@1.0.0",\012          "referenceType": "purl"\012        }\012      ],\012      "homepage": "https://github.com/alexcrichton/cfg-if",\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT/Apache-2.0",\012      "name": "cfg-if",\012      "versionInfo": "1.0.0"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-windows_aarch64_msvc-0.48.5",\012      "description": "Import lib for Windows",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/windows_aarch64_msvc@0.48.5",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "windows_aarch64_msvc",\012      "versionInfo": "0.48.5"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-windows_x86_64_gnu-0.48.5",\012      "description": "Import lib for Windows",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/windows_x86_64_gnu@0.48.5",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "windows_x86_64_gnu",\012      "versionInfo": "0.48.5"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-globset-0.4.13",\012      "description": "Cross platform single glob and glob set matching. Glob set matching is the\nprocess of matching one or more glob patterns against a single candidate path\nsimultaneously, and returning all of the globs that matched.\n",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/globset@0.4.13",\012          "referenceType": "purl"\012        }\012      ],\012      "homepage": "https://github.com/BurntSushi/ripgrep/tree/master/crates/globset",\012      "licenseConcluded": "Unlicense OR MIT",\012      "licenseDeclared": "Unlicense OR MIT",\012      "name": "globset",\012      "versionInfo": "0.4.13"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-android_system_properties-0.1.5",\012      "description": "Minimal Android system properties wrapper",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/android_system_properties@0.1.5",\012          "referenceType": "purl"\012        }\012      ],\012      "homepage": "https://github.com/nical/android_system_properties",\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT/Apache-2.0",\012      "name": "android_system_properties",\012      "versionInfo": "0.1.5"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-once_cell-1.18.0",\012      "description": "Single assignment cells and lazy values.",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/once_cell@1.18.0",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "once_cell",\012      "versionInfo": "1.18.0"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-sha1-0.10.6",\012      "description": "SHA-1 hash function",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/sha1@0.10.6",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "sha1",\012      "versionInfo": "0.10.6"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-wasm-bindgen-shared-0.2.88",\012      "description": "Shared support between wasm-bindgen and wasm-bindgen cli, an internal\ndependency.\n",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/wasm-bindgen-shared@0.2.88",\012          "referenceType": "purl"\012        }\012      ],\012      "homepage": "https://rustwasm.github.io/wasm-bindgen/",\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "wasm-bindgen-shared",\012      "versionInfo": "0.2.88"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-hashlink-0.8.4",\012      "description": "HashMap-like containers that hold their key-value pairs in a user controllable order",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/hashlink@0.8.4",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "hashlink",\012      "versionInfo": "0.8.4"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-regex-syntax-0.8.2",\012      "description": "A regular expression parser.",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/regex-syntax@0.8.2",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "regex-syntax",\012      "versionInfo": "0.8.2"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-memchr-2.6.4",\012      "description": "Provides extremely fast (uses SIMD on x86_64, aarch64 and wasm32) routines for\n1, 2 or 3 byte search and single substring search.\n",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/memchr@2.6.4",\012          "referenceType": "purl"\012        }\012      ],\012      "homepage": "https://github.com/BurntSushi/memchr",\012      "licenseConcluded": "Unlicense OR MIT",\012      "licenseDeclared": "Unlicense OR MIT",\012      "name": "memchr",\012      "versionInfo": "2.6.4"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-rayon-core-1.12.0",\012      "description": "Core APIs for Rayon",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/rayon-core@1.12.0",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "rayon-core",\012      "versionInfo": "1.12.0"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-windows_aarch64_gnullvm-0.48.5",\012      "description": "Import lib for Windows",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/windows_aarch64_gnullvm@0.48.5",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "windows_aarch64_gnullvm",\012      "versionInfo": "0.48.5"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-scopeguard-1.2.0",\012      "description": "A RAII scope guard that will run a given closure when it goes out of scope,\neven if the code between panics (assuming unwinding panic).\n\nDefines the macros `defer!`, `defer_on_unwind!`, `defer_on_success!` as\nshorthands for guards with one of the implemented strategies.\n",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/scopeguard@1.2.0",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "scopeguard",\012      "versionInfo": "1.2.0"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-clap_builder-4.4.8",\012      "description": "A simple to use, efficient, and full-featured Command Line Argument Parser",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/clap_builder@4.4.8",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "clap_builder",\012      "versionInfo": "4.4.8"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-smallvec-1.11.2",\012      "description": "''Small vector'' optimization: store up to a small number of items on the stack",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/smallvec@1.11.2",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "smallvec",\012      "versionInfo": "1.11.2"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-lazy_static-1.4.0",\012      "description": "A macro for declaring lazily evaluated statics in Rust.",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/lazy_static@1.4.0",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT/Apache-2.0",\012      "name": "lazy_static",\012      "versionInfo": "1.4.0"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-hostname-0.3.1",\012      "description": "Cross-platform system''s host name functions",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/hostname@0.3.1",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT",\012      "licenseDeclared": "MIT",\012      "name": "hostname",\012      "versionInfo": "0.3.1"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-generic-array-0.14.7",\012      "description": "Generic types implementing functionality of arrays",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/generic-array@0.14.7",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT",\012      "licenseDeclared": "MIT",\012      "name": "generic-array",\012      "versionInfo": "0.14.7"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-unicode-ident-1.0.12",\012      "description": "Determine whether characters have the XID_Start or XID_Continue properties according to Unicode Standard Annex #31",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/unicode-ident@1.0.12",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "(MIT OR Apache-2.0) AND Unicode-DFS-2016",\012      "licenseDeclared": "(MIT OR Apache-2.0) AND Unicode-DFS-2016",\012      "name": "unicode-ident",\012      "versionInfo": "1.0.12"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-zerocopy-0.7.25",\012      "description": "Utilities for zero-copy parsing and serialization",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/zerocopy@0.7.25",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "BSD-2-Clause OR Apache-2.0 OR MIT",\012      "licenseDeclared": "BSD-2-Clause OR Apache-2.0 OR MIT",\012      "name": "zerocopy",\012      "versionInfo": "0.7.25"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-surveilr-0.4.2",\012      "downloadLocation": "NONE",\012      "licenseConcluded": "NOASSERTION",\012      "name": "surveilr",\012      "versionInfo": "0.4.2"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-windows-sys-0.48.0",\012      "description": "Rust for Windows",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/windows-sys@0.48.0",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "windows-sys",\012      "versionInfo": "0.48.0"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-anstyle-1.0.4",\012      "description": "ANSI text styling",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/anstyle@1.0.4",\012          "referenceType": "purl"\012        }\012      ],\012      "homepage": "https://github.com/rust-cli/anstyle",\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "anstyle",\012      "versionInfo": "1.0.4"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-hashbrown-0.14.2",\012      "description": "A Rust port of Google''s SwissTable hash map",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/hashbrown@0.14.2",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "hashbrown",\012      "versionInfo": "0.14.2"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-toml_edit-0.21.0",\012      "description": "Yet another format-preserving TOML parser.",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/toml_edit@0.21.0",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "toml_edit",\012      "versionInfo": "0.21.0"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-winapi-util-0.1.6",\012      "description": "A dumping ground for high level safe wrappers over winapi.",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/winapi-util@0.1.6",\012          "referenceType": "purl"\012        }\012      ],\012      "homepage": "https://github.com/BurntSushi/winapi-util",\012      "licenseConcluded": "Unlicense OR MIT",\012      "licenseDeclared": "Unlicense/MIT",\012      "name": "winapi-util",\012      "versionInfo": "0.1.6"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-ntapi-0.4.1",\012      "description": "FFI bindings for Native API",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/ntapi@0.4.1",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "Apache-2.0 OR MIT",\012      "licenseDeclared": "Apache-2.0 OR MIT",\012      "name": "ntapi",\012      "versionInfo": "0.4.1"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-log-0.4.20",\012      "description": "A lightweight logging facade for Rust\n",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/log@0.4.20",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "log",\012      "versionInfo": "0.4.20"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-anstream-0.6.4",\012      "description": "A simple cross platform library for writing colored text to a terminal.",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/anstream@0.6.4",\012          "referenceType": "purl"\012        }\012      ],\012      "homepage": "https://github.com/rust-cli/anstyle",\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "anstream",\012      "versionInfo": "0.6.4"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-quote-1.0.33",\012      "description": "Quasi-quoting macro quote!(...)",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/quote@1.0.33",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "quote",\012      "versionInfo": "1.0.33"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-core-foundation-sys-0.8.4",\012      "description": "Bindings to Core Foundation for macOS",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/core-foundation-sys@0.8.4",\012          "referenceType": "purl"\012        }\012      ],\012      "homepage": "https://github.com/servo/core-foundation-rs",\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT / Apache-2.0",\012      "name": "core-foundation-sys",\012      "versionInfo": "0.8.4"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-zerocopy-derive-0.7.25",\012      "description": "Custom derive for traits from the zerocopy crate",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/zerocopy-derive@0.7.25",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "BSD-2-Clause OR Apache-2.0 OR MIT",\012      "licenseDeclared": "BSD-2-Clause OR Apache-2.0 OR MIT",\012      "name": "zerocopy-derive",\012      "versionInfo": "0.7.25"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-utf8parse-0.2.1",\012      "description": "Table-driven UTF-8 parser",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/utf8parse@0.2.1",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "Apache-2.0 OR MIT",\012      "licenseDeclared": "Apache-2.0 OR MIT",\012      "name": "utf8parse",\012      "versionInfo": "0.2.1"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-wasm-bindgen-macro-support-0.2.88",\012      "description": "The part of the implementation of the `#[wasm_bindgen]` attribute that is not in the shared backend crate\n",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/wasm-bindgen-macro-support@0.2.88",\012          "referenceType": "purl"\012        }\012      ],\012      "homepage": "https://rustwasm.github.io/wasm-bindgen/",\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "wasm-bindgen-macro-support",\012      "versionInfo": "0.2.88"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-rand_core-0.6.4",\012      "description": "Core random number generator traits and tools for implementation.\n",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/rand_core@0.6.4",\012          "referenceType": "purl"\012        }\012      ],\012      "homepage": "https://rust-random.github.io/book",\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "rand_core",\012      "versionInfo": "0.6.4"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-num-traits-0.2.17",\012      "description": "Numeric traits for generic mathematics",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/num-traits@0.2.17",\012          "referenceType": "purl"\012        }\012      ],\012      "homepage": "https://github.com/rust-num/num-traits",\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "num-traits",\012      "versionInfo": "0.2.17"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-js-sys-0.3.65",\012      "description": "Bindings for all JS global objects and functions in all JS environments like\nNode.js and browsers, built on `#[wasm_bindgen]` using the `wasm-bindgen` crate.\n",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/js-sys@0.3.65",\012          "referenceType": "purl"\012        }\012      ],\012      "homepage": "https://rustwasm.github.io/wasm-bindgen/",\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "js-sys",\012      "versionInfo": "0.3.65"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-crossbeam-epoch-0.9.15",\012      "description": "Epoch-based garbage collection",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/crossbeam-epoch@0.9.15",\012          "referenceType": "purl"\012        }\012      ],\012      "homepage": "https://github.com/crossbeam-rs/crossbeam/tree/master/crossbeam-epoch",\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "crossbeam-epoch",\012      "versionInfo": "0.9.15"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-equivalent-1.0.1",\012      "description": "Traits for key comparison in maps.",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/equivalent@1.0.1",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "Apache-2.0 OR MIT",\012      "licenseDeclared": "Apache-2.0 OR MIT",\012      "name": "equivalent",\012      "versionInfo": "1.0.1"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-match_cfg-0.1.0",\012      "description": "A convenience macro to ergonomically define an item depending on a large number\nof `#[cfg]` parameters. Structured like match statement, the first matching\nbranch is the item that gets emitted.\n",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/match_cfg@0.1.0",\012          "referenceType": "purl"\012        }\012      ],\012      "homepage": "https://github.com/gnzlbg/match_cfg",\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT/Apache-2.0",\012      "name": "match_cfg",\012      "versionInfo": "0.1.0"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-getrandom-0.2.11",\012      "description": "A small cross-platform library for retrieving random data from system source",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/getrandom@0.2.11",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "getrandom",\012      "versionInfo": "0.2.11"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-windows_i686_msvc-0.48.5",\012      "description": "Import lib for Windows",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/windows_i686_msvc@0.48.5",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "windows_i686_msvc",\012      "versionInfo": "0.48.5"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-indoc-2.0.4",\012      "description": "Indented document literals",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/indoc@2.0.4",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "indoc",\012      "versionInfo": "2.0.4"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-iana-time-zone-haiku-0.1.2",\012      "description": "iana-time-zone support crate for Haiku OS",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/iana-time-zone-haiku@0.1.2",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "iana-time-zone-haiku",\012      "versionInfo": "0.1.2"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-proc-macro2-1.0.69",\012      "description": "A substitute implementation of the compiler''s `proc_macro` API to decouple token-based libraries from the procedural macro use case.",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/proc-macro2@1.0.69",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "proc-macro2",\012      "versionInfo": "1.0.69"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-clap-4.4.8",\012      "description": "A simple to use, efficient, and full-featured Command Line Argument Parser",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/clap@4.4.8",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "clap",\012      "versionInfo": "4.4.8"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-sysinfo-0.29.10",\012      "description": "Library to get system information such as processes, CPUs, disks, components and networks",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/sysinfo@0.29.10",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT",\012      "licenseDeclared": "MIT",\012      "name": "sysinfo",\012      "versionInfo": "0.29.10"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-clap_derive-4.4.7",\012      "description": "Parse command line argument by defining a struct, derive crate.",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/clap_derive@4.4.7",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "clap_derive",\012      "versionInfo": "4.4.7"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-memoffset-0.9.0",\012      "description": "offset_of functionality for Rust structs.",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/memoffset@0.9.0",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT",\012      "licenseDeclared": "MIT",\012      "name": "memoffset",\012      "versionInfo": "0.9.0"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-anyhow-1.0.75",\012      "description": "Flexible concrete Error type built on std::error::Error",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/anyhow@1.0.75",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "anyhow",\012      "versionInfo": "1.0.75"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-heck-0.4.1",\012      "description": "heck is a case conversion library.",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/heck@0.4.1",\012          "referenceType": "purl"\012        }\012      ],\012      "homepage": "https://github.com/withoutboats/heck",\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "heck",\012      "versionInfo": "0.4.1"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-crossbeam-utils-0.8.16",\012      "description": "Utilities for concurrent programming",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/crossbeam-utils@0.8.16",\012          "referenceType": "purl"\012        }\012      ],\012      "homepage": "https://github.com/crossbeam-rs/crossbeam/tree/master/crossbeam-utils",\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "crossbeam-utils",\012      "versionInfo": "0.8.16"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-libsqlite3-sys-0.26.0",\012      "description": "Native bindings to the libsqlite3 library",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/libsqlite3-sys@0.26.0",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT",\012      "licenseDeclared": "MIT",\012      "name": "libsqlite3-sys",\012      "versionInfo": "0.26.0"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-aho-corasick-1.1.2",\012      "description": "Fast multiple substring searching.",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/aho-corasick@1.1.2",\012          "referenceType": "purl"\012        }\012      ],\012      "homepage": "https://github.com/BurntSushi/aho-corasick",\012      "licenseConcluded": "Unlicense OR MIT",\012      "licenseDeclared": "Unlicense OR MIT",\012      "name": "aho-corasick",\012      "versionInfo": "1.1.2"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-libc-0.2.150",\012      "description": "Raw FFI bindings to platform libraries like libc.\n",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/libc@0.2.150",\012          "referenceType": "purl"\012        }\012      ],\012      "homepage": "https://github.com/rust-lang/libc",\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "libc",\012      "versionInfo": "0.2.150"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-either-1.9.0",\012      "description": "The enum `Either` with variants `Left` and `Right` is a general purpose sum type with two cases.\n",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/either@1.9.0",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "either",\012      "versionInfo": "1.9.0"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-clap-markdown-0.1.3",\012      "description": "Autogenerate Markdown documentation for clap command-line tools",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/clap-markdown@0.1.3",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "clap-markdown",\012      "versionInfo": "0.1.3"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-syn-2.0.39",\012      "description": "Parser for Rust source code",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/syn@2.0.39",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "syn",\012      "versionInfo": "2.0.39"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-strsim-0.10.0",\012      "description": "Implementations of string similarity metrics. Includes Hamming, Levenshtein,\nOSA, Damerau-Levenshtein, Jaro, Jaro-Winkler, and Sørensen-Dice.\n",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/strsim@0.10.0",\012          "referenceType": "purl"\012        }\012      ],\012      "homepage": "https://github.com/dguo/strsim-rs",\012      "licenseConcluded": "MIT",\012      "licenseDeclared": "MIT",\012      "name": "strsim",\012      "versionInfo": "0.10.0"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-toml_datetime-0.6.5",\012      "description": "A TOML-compatible datetime type",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/toml_datetime@0.6.5",\012          "referenceType": "purl"\012        }\012      ],\012      "homepage": "https://github.com/toml-rs/toml",\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "toml_datetime",\012      "versionInfo": "0.6.5"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-winapi-x86_64-pc-windows-gnu-0.4.0",\012      "description": "Import libraries for the x86_64-pc-windows-gnu target. Please don''t use this crate directly, depend on winapi instead.",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/winapi-x86_64-pc-windows-gnu@0.4.0",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT/Apache-2.0",\012      "name": "winapi-x86_64-pc-windows-gnu",\012      "versionInfo": "0.4.0"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-ulid-1.1.0",\012      "description": "a Universally Unique Lexicographically Sortable Identifier implementation",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/ulid@1.1.0",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT",\012      "licenseDeclared": "MIT",\012      "name": "ulid",\012      "versionInfo": "1.1.0"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-typenum-1.17.0",\012      "description": "Typenum is a Rust library for type-level numbers evaluated at\n    compile time. It currently supports bits, unsigned integers, and signed\n    integers. It also provides a type-level array of type-level numbers, but its\n    implementation is incomplete.",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/typenum@1.17.0",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "typenum",\012      "versionInfo": "1.17.0"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-regex-1.10.2",\012      "description": "An implementation of regular expressions for Rust. This implementation uses\nfinite automata and guarantees linear time matching on all inputs.\n",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/regex@1.10.2",\012          "referenceType": "purl"\012        }\012      ],\012      "homepage": "https://github.com/rust-lang/regex",\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "regex",\012      "versionInfo": "1.10.2"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-serde_json-1.0.108",\012      "description": "A JSON serialization file format",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/serde_json@1.0.108",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "serde_json",\012      "versionInfo": "1.0.108"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-itoa-1.0.9",\012      "description": "Fast integer primitive to string conversion",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/itoa@1.0.9",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "itoa",\012      "versionInfo": "1.0.9"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-fallible-streaming-iterator-0.1.9",\012      "description": "Fallible streaming iteration",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/fallible-streaming-iterator@0.1.9",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT/Apache-2.0",\012      "name": "fallible-streaming-iterator",\012      "versionInfo": "0.1.9"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-colorchoice-1.0.0",\012      "description": "Global override of color control",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/colorchoice@1.0.0",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "colorchoice",\012      "versionInfo": "1.0.0"\012    },\012    {\012      "SPDXID": "SPDXRef-Package-windows_x86_64_msvc-0.48.5",\012      "description": "Import lib for Windows",\012      "downloadLocation": "registry+https://github.com/rust-lang/crates.io-index",\012      "externalRefs": [\012        {\012          "referenceCategory": "PACKAGE-MANAGER",\012          "referenceLocator": "pkg:cargo/windows_x86_64_msvc@0.48.5",\012          "referenceType": "purl"\012        }\012      ],\012      "licenseConcluded": "MIT OR Apache-2.0",\012      "licenseDeclared": "MIT OR Apache-2.0",\012      "name": "windows_x86_64_msvc",\012      "versionInfo": "0.48.5"\012    }\012  ],\012  "relationships": [\012    {\012      "relatedSpdxElement": "SPDXRef-Package-serde-1.0.192",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-toml_edit-0.21.0"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-ryu-1.0.15",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-serde_yaml-0.9.27"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-wasm-bindgen-macro-0.2.88",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-wasm-bindgen-0.2.88"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-winapi-i686-pc-windows-gnu-0.4.0",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-winapi-0.3.9"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-rayon-core-1.12.0",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-rayon-1.8.0"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-ryu-1.0.15",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-serde_json-1.0.108"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-windows_aarch64_gnullvm-0.48.5",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-windows-targets-0.48.5"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-syn-2.0.39",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-zerocopy-derive-0.7.25"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-libc-0.2.150",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-hostname-0.3.1"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-toml_datetime-0.6.5",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-toml-0.8.8"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-cfg-if-1.0.0",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-sha1-0.10.6"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-chrono-0.4.31",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-surveilr-0.4.2"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-strsim-0.10.0",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-clap_builder-4.4.8"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-clap-markdown-0.1.3",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-surveilr-0.4.2"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-serde-1.0.192",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-toml-0.8.8"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-sha1-0.10.6",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-surveilr-0.4.2"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-glob-0.3.1",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-surveilr-0.4.2"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-quote-1.0.33",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-serde_derive-1.0.192"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-serde-1.0.192",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-ulid-1.1.0"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-memchr-2.6.4",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-regex-1.10.2"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-fallible-iterator-0.2.0",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-rusqlite-0.29.0"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-memoffset-0.9.0",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-crossbeam-epoch-0.9.15"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-aho-corasick-1.1.2",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-globset-0.4.13"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-regex-automata-0.4.3",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-regex-1.10.2"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-winapi-util-0.1.6",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-same-file-1.0.6"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-proc-macro2-1.0.69",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-quote-1.0.33"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-anstyle-query-1.0.0",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-anstream-0.6.4"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-hostname-0.3.1",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-surveilr-0.4.2"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-quote-1.0.33",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-wasm-bindgen-macro-0.2.88"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-once_cell-1.18.0",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-ahash-0.8.6"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-getrandom-0.2.11",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-rand_core-0.6.4"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-syn-2.0.39",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-wasm-bindgen-backend-0.2.88"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-base64-0.21.5",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-surveilr-0.4.2"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-anstyle-1.0.4",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-clap_builder-4.4.8"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-cfg-if-1.0.0",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-wasm-bindgen-0.2.88"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-bstr-1.8.0",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-globset-0.4.13"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-match_cfg-0.1.0",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-hostname-0.3.1"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-quote-1.0.33",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-syn-2.0.39"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-regex-syntax-0.8.2",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-regex-1.10.2"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-fallible-streaming-iterator-0.1.9",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-rusqlite-0.29.0"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-clap_derive-4.4.7",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-clap-4.4.8"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-winapi-0.3.9",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-ntapi-0.4.1"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-toml_edit-0.21.0",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-toml-0.8.8"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-surveilr-0.4.2",\012      "relationshipType": "GENERATED_FROM",\012      "spdxElementId": "SPDXRef-File-surveilr"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-libsqlite3-sys-0.26.0",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-rusqlite-0.29.0"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-rand_core-0.6.4",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-rand-0.8.5"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-hashbrown-0.14.2",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-indexmap-2.1.0"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-winapi-0.3.9",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-sysinfo-0.29.10"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-syn-2.0.39",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-serde_derive-1.0.192"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-memchr-2.6.4",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-winnow-0.5.19"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-utf8parse-0.2.1",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-anstyle-parse-0.2.2"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-anstyle-1.0.4",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-anstream-0.6.4"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-libc-0.2.150",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-sysinfo-0.29.10"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-scopeguard-1.2.0",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-crossbeam-epoch-0.9.15"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-indexmap-2.1.0",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-serde_yaml-0.9.27"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-ulid-1.1.0",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-surveilr-0.4.2"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-anstream-0.6.4",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-clap_builder-4.4.8"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-libc-0.2.150",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-getrandom-0.2.11"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-wasm-bindgen-macro-support-0.2.88",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-wasm-bindgen-macro-0.2.88"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-wasm-bindgen-backend-0.2.88",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-wasm-bindgen-macro-support-0.2.88"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-unicode-ident-1.0.12",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-proc-macro2-1.0.69"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-fnv-1.0.7",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-globset-0.4.13"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-serde-1.0.192",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-serde_rusqlite-0.33.1"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-wasi-0.11.0+wasi-snapshot-preview1",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-getrandom-0.2.11"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-aho-corasick-1.1.2",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-regex-automata-0.4.3"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-windows-sys-0.48.0",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-anstyle-query-1.0.0"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-windows-targets-0.48.5",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-windows-sys-0.48.0"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-crossbeam-utils-0.8.16",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-rayon-core-1.12.0"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-utf8parse-0.2.1",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-anstream-0.6.4"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-lazy_static-1.4.0",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-surveilr-0.4.2"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-memchr-2.6.4",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-bstr-1.8.0"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-ntapi-0.4.1",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-sysinfo-0.29.10"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-digest-0.10.7",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-sha1-0.10.6"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-hashlink-0.8.4",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-rusqlite-0.29.0"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-anstyle-wincon-3.0.1",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-anstream-0.6.4"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-indoc-2.0.4",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-surveilr-0.4.2"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-iana-time-zone-0.1.58",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-chrono-0.4.31"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-wasm-bindgen-0.2.88",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-js-sys-0.3.65"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-cfg-if-1.0.0",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-crossbeam-epoch-0.9.15"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-windows_aarch64_msvc-0.48.5",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-windows-targets-0.48.5"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-serde_spanned-0.6.4",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-toml-0.8.8"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-toml_datetime-0.6.5",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-toml_edit-0.21.0"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-unsafe-libyaml-0.2.9",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-serde_yaml-0.9.27"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-either-1.9.0",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-rayon-1.8.0"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-cpufeatures-0.2.11",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-sha1-0.10.6"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-crossbeam-deque-0.8.3",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-rayon-core-1.12.0"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-quote-1.0.33",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-zerocopy-derive-0.7.25"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-toml-0.8.8",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-surveilr-0.4.2"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-itoa-1.0.9",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-serde_yaml-0.9.27"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-memchr-2.6.4",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-aho-corasick-1.1.2"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-rusqlite-0.29.0",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-surveilr-0.4.2"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-libc-0.2.150",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-android_system_properties-0.1.5"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-js-sys-0.3.65",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-iana-time-zone-0.1.58"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-windows_x86_64_gnullvm-0.48.5",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-windows-targets-0.48.5"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-rand-0.8.5",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-ulid-1.1.0"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-log-0.4.20",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-globset-0.4.13"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-bitflags-2.4.1",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-rusqlite-0.29.0"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-crypto-common-0.1.6",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-digest-0.10.7"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-proc-macro2-1.0.69",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-serde_derive-1.0.192"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-serde-1.0.192",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-chrono-0.4.31"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-log-0.4.20",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-wasm-bindgen-backend-0.2.88"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-bumpalo-3.14.0",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-wasm-bindgen-backend-0.2.88"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-android-tzdata-0.1.1",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-chrono-0.4.31"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-colorchoice-1.0.0",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-anstream-0.6.4"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-block-buffer-0.10.4",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-digest-0.10.7"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-serde-1.0.192",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-toml_datetime-0.6.5"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-winapi-util-0.1.6",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-walkdir-2.4.0"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-libc-0.2.150",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-cpufeatures-0.2.11"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-js-sys-0.3.65",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-chrono-0.4.31"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-serde_yaml-0.9.27",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-surveilr-0.4.2"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-walkdir-2.4.0",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-surveilr-0.4.2"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-once_cell-1.18.0",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-wasm-bindgen-backend-0.2.88"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-allocator-api2-0.2.16",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-hashbrown-0.14.2"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-equivalent-1.0.1",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-indexmap-2.1.0"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-cfg-if-1.0.0",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-getrandom-0.2.11"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-num-traits-0.2.17",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-chrono-0.4.31"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-memchr-2.6.4",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-regex-automata-0.4.3"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-iana-time-zone-haiku-0.1.2",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-iana-time-zone-0.1.58"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-windows_i686_msvc-0.48.5",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-windows-targets-0.48.5"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-windows-targets-0.48.5",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-chrono-0.4.31"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-proc-macro2-1.0.69",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-wasm-bindgen-backend-0.2.88"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-sysinfo-0.29.10",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-surveilr-0.4.2"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-cfg-if-1.0.0",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-ahash-0.8.6"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-itoa-1.0.9",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-serde_json-1.0.108"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-unicode-ident-1.0.12",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-syn-2.0.39"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-serde-1.0.192",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-surveilr-0.4.2"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-android_system_properties-0.1.5",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-iana-time-zone-0.1.58"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-clap_lex-0.6.0",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-clap_builder-4.4.8"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-windows_x86_64_gnu-0.48.5",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-windows-targets-0.48.5"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-clap-4.4.8",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-clap-markdown-0.1.3"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-ahash-0.8.6",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-hashbrown-0.14.2"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-generic-array-0.14.7",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-block-buffer-0.10.4"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-core-foundation-sys-0.8.4",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-iana-time-zone-0.1.58"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-typenum-1.17.0",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-generic-array-0.14.7"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-typenum-1.17.0",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-crypto-common-0.1.6"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-rusqlite-0.29.0",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-serde_rusqlite-0.33.1"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-cfg-if-1.0.0",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-sysinfo-0.29.10"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-crossbeam-epoch-0.9.15",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-crossbeam-deque-0.8.3"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-proc-macro2-1.0.69",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-clap_derive-4.4.7"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-libc-0.2.150",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-rand-0.8.5"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-wasm-bindgen-0.2.88",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-iana-time-zone-0.1.58"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-ppv-lite86-0.2.17",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-rand_chacha-0.3.1"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-windows-core-0.51.1",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-iana-time-zone-0.1.58"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-anyhow-1.0.75",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-surveilr-0.4.2"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-smallvec-1.11.2",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-rusqlite-0.29.0"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-regex-1.10.2",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-globset-0.4.13"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-serde-1.0.192",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-bstr-1.8.0"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-syn-2.0.39",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-clap_derive-4.4.7"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-once_cell-1.18.0",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-sysinfo-0.29.10"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-hashbrown-0.14.2",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-hashlink-0.8.4"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-syn-2.0.39",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-wasm-bindgen-macro-support-0.2.88"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-serde-1.0.192",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-serde_yaml-0.9.27"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-core-foundation-sys-0.8.4",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-sysinfo-0.29.10"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-crossbeam-utils-0.8.16",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-crossbeam-epoch-0.9.15"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-wasm-bindgen-shared-0.2.88",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-wasm-bindgen-backend-0.2.88"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-generic-array-0.14.7",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-crypto-common-0.1.6"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-rayon-1.8.0",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-sysinfo-0.29.10"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-uuid-1.5.0",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-ulid-1.1.0"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-quote-1.0.33",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-clap_derive-4.4.7"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-cfg-if-1.0.0",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-crossbeam-utils-0.8.16"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-same-file-1.0.6",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-walkdir-2.4.0"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-proc-macro2-1.0.69",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-zerocopy-derive-0.7.25"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-winapi-0.3.9",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-winapi-util-0.1.6"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-anstyle-1.0.4",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-anstyle-wincon-3.0.1"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-winapi-0.3.9",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-hostname-0.3.1"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-wasm-bindgen-shared-0.2.88",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-wasm-bindgen-macro-support-0.2.88"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-proc-macro2-1.0.69",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-wasm-bindgen-macro-support-0.2.88"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-zerocopy-0.7.25",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-ahash-0.8.6"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-serde_json-1.0.108",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-surveilr-0.4.2"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-heck-0.4.1",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-clap_derive-4.4.7"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-winnow-0.5.19",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-toml_edit-0.21.0"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-clap_builder-4.4.8",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-clap-4.4.8"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-serde_rusqlite-0.33.1",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-surveilr-0.4.2"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-quote-1.0.33",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-wasm-bindgen-macro-support-0.2.88"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-quote-1.0.33",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-wasm-bindgen-backend-0.2.88"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-regex-syntax-0.8.2",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-regex-automata-0.4.3"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-regex-1.10.2",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-surveilr-0.4.2"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-serde_derive-1.0.192",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-serde-1.0.192"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-cfg-if-1.0.0",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-crossbeam-deque-0.8.3"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-indexmap-2.1.0",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-toml_edit-0.21.0"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-globset-0.4.13",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-surveilr-0.4.2"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-rand_core-0.6.4",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-rand_chacha-0.3.1"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-aho-corasick-1.1.2",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-regex-1.10.2"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-windows-targets-0.48.5",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-windows-core-0.51.1"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-windows_i686_gnu-0.48.5",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-windows-targets-0.48.5"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-rand_chacha-0.3.1",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-rand-0.8.5"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-anstyle-parse-0.2.2",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-anstream-0.6.4"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-zerocopy-derive-0.7.25",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-zerocopy-0.7.25"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-serde-1.0.192",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-serde_json-1.0.108"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-crossbeam-utils-0.8.16",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-crossbeam-deque-0.8.3"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-proc-macro2-1.0.69",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-syn-2.0.39"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-wasm-bindgen-0.2.88",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-chrono-0.4.31"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-serde-1.0.192",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-serde_spanned-0.6.4"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-winapi-x86_64-pc-windows-gnu-0.4.0",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-winapi-0.3.9"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-serde-1.0.192",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-sysinfo-0.29.10"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-serde_spanned-0.6.4",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-toml_edit-0.21.0"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-clap-4.4.8",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-surveilr-0.4.2"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-windows-sys-0.48.0",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-anstyle-wincon-3.0.1"\012    },\012    {\012      "relatedSpdxElement": "SPDXRef-Package-windows_x86_64_msvc-0.48.5",\012      "relationshipType": "DEPENDS_ON",\012      "spdxElementId": "SPDXRef-Package-windows-targets-0.48.5"\012    }\012  ],\012  "spdxVersion": "SPDX-2.3"\012}\012','\012',char(10)),'json',107644,'2023-11-14 14:41:40.846144868 UTC',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFFG4EWTPZG0ZJG4KFG2NC','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks.tbls.auto.yml','d26560bd25ef13016a08ad28c8dfbfb5914b778c',replace('format:\n  adjust: true\n  hideColumnsWithoutValues:\n    - Parents\n    - Children\ner:\n  hideDef: true\n  distance: 2\ninclude:\n  - assurance_schema\n  - code_notebook_kernel\n  - code_notebook_cell\n  - code_notebook_state\nname: Resource Surveillance Notebooks Schema\ncomments:\n  - table: assurance_schema\n    columnComments:\n      assurance_schema_id: assurance_schema primary key and internal label (not a ULID)\n      assurance_type: ''''''JSON Schema'''', ''''XML Schema'''', etc.''\n      code: >-\n        If the schema is other than JSON Schema, use this for the validation\n        code\n      code_json: >-\n        If the schema is a JSON Schema or the assurance code has a JSON\n        representation\n      governance: >-\n        JSON schema-specific governance data (description, documentation, usage,\n        etc. in JSON)\n      activity_log: ''{"isSqlDomainZodDescrMeta":true,"isJsonSqlDomain":true}''\n    tableComment: >-\n      A Notebook is a group of Cells. A kernel is a computational engine that\n      executes the code contained in a notebook cell.\n\n      Each notebook is associated with a kernel of a specific programming\n      language or code transformer which can interpret\n\n      code and produce a result. For example, a SQL notebook might use a SQLite\n      kernel for running SQL code and an AI Prompt\n\n      might prepare AI prompts for LLMs.\n  - table: code_notebook_kernel\n    columnComments:\n      code_notebook_kernel_id: code_notebook_kernel primary key and internal label (not a ULID)\n      kernel_name: the kernel name for human/display use cases\n      description: any further description of the kernel for human/display use cases\n      mime_type: MIME type of this kernel''s code in case it will be served\n      file_extn: >-\n        the typical file extension for these kernel''s codebases, can be used for\n        syntax highlighting, etc.\n      elaboration: kernel-specific attributes/properties\n      governance: kernel-specific governance data\n      activity_log: ''{"isSqlDomainZodDescrMeta":true,"isJsonSqlDomain":true}''\n    tableComment: >-\n      A Notebook is a group of Cells. A kernel is a computational engine that\n      executes the code contained in a notebook cell.\n\n      Each notebook is associated with a kernel of a specific programming\n      language or code transformer which can interpret\n\n      code and produce a result. For example, a SQL notebook might use a SQLite\n      kernel for running SQL code and an AI Prompt\n\n      might prepare AI prompts for LLMs.\n  - table: code_notebook_cell\n    columnComments:\n      code_notebook_cell_id: code_notebook_cell primary key\n      notebook_kernel_id: ''{"isSqlDomainZodDescrMeta":true,"isVarChar":true}''\n      cell_governance: >-\n        any idempotency, versioning, hash, branch, tag or other "governance"\n        data (dependent on the cell)\n      arguments: ''{"isSqlDomainZodDescrMeta":true,"isJsonText":true}''\n      activity_log: ''{"isSqlDomainZodDescrMeta":true,"isJsonSqlDomain":true}''\n    tableComment: >-\n      Each Notebook is divided into cells, which are individual units of\n      interpretable code.\n\n      The content of Cells depends on the Notebook Kernel and contain the source\n      code to be\n\n      executed by the Notebook''s Kernel. The output of the code (text, graphics,\n      etc.) can be\n\n      stateless or may be stateful and store its results and state transitions\n      in code_notebook_state.\n  - table: code_notebook_state\n    columnComments:\n      code_notebook_state_id: code_notebook_state primary key\n      code_notebook_cell_id: code_notebook_cell row this state describes\n      from_state: the previous state (set to "INITIAL" when it''s the first transition)\n      to_state: >-\n        the current state; if no rows exist it means no state transition\n        occurred\n      transition_result: if the result of state change is necessary for future use\n      transition_reason: short text or code explaining why the transition occurred\n      transitioned_at: when the transition occurred\n      elaboration: any elaboration needed for the state transition\n      activity_log: ''{"isSqlDomainZodDescrMeta":true,"isJsonSqlDomain":true}''\n    tableComment: >-\n      Records the state of a notebook''s cells'' executions, computations, and\n      results for Kernels that are stateful.\n\n      For example, a SQL Notebook Cell that creates tables should only be run\n      once (meaning it''s statefule).\n\n      Other Kernels might store results for functions and output defined in one\n      cell can be used in later cells.\n','\n',char(10)),'yml',4526,'2023-12-04 02:56:03.889340016 UTC',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFFG4G0KVCG95YPPCS43CF','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/GPM.md','367780dbac21d8a97aeb11f9e51e42235b4d114e',replace('# Governance, Planning, and Management for `surveilr`\n\n## Part 1: Outcomes-Focused Labels for GitHub Issues\n\nUsing outcomes-focused labels in GitHub issues allows for prioritizing tasks\nbased on their impact and aligns the development work with strategic goals. Here\nare some recommended labels:\n\n- **Security Impact**: Labels such as "Blocker Security Risk" and "Threat\n  Surface Increase" for prioritizing security-related issues.\n- **Performance Enhancement**: Tags like "Performance" and "Resource\n  Optimization" for performance-related tasks.\n- **Usability Improvement**: For user experience enhancements, use labels such\n  as `OpEX` (operator experience) or `UX` (user experience) or `DX` (developer\n  experience).\n- **Compliance**: Labels like "Legislative Compliance" when tied to a law,\n  "Regulatory Compliance" for executive branch regulations, "Standards\n  Compliance" when a compliance is required for a specific external standard,\n  "Privacy Compliance" for encryption and other data privacy issues.\n- **Reliability Increase**: Tags like "Stability", "Data Reliability" and "Fault\n  Tolerance" for reliability-focused tasks.\n\nOnly use label for expressing the impact of the issue. Do not use labels to\nmerely categorize the issue because searching using text is easier than\nsearching by labels. Also, we never want to assign work based on arbitrary\ncategories but expected outcomes and desired results.\n\n## Part 2: Aligning with Conventional Commits\n\nAligning GitHub issue labels with Conventional Commit messages enhances the\ntraceability and readability of changes. Below are some examples that should be\nupdated based on the final selection of tags/labels defined above.\n\n1. **Security Impact**:\n   `fix(security): [Blocker Risk/Threat Surface] - brief description`\n2. **Performance Enhancement**:\n   `perf(enhancement): [Speed/Resource] - description`\n3. **Usability Improvement**: `feat(usability): [OpEX/DX/UX] - description`\n4. **Compliance**:\n   `chore(compliance): [Legislative/Regulatory/Privacy/Standards] - description`\n5. **Reliability Increase**:\n   `fix(reliability): [Stability/Fault Tolerance] - description`\n6. **Data Protection**:\n   `feat(security): [Data Encryption/Privacy Compliance] - description`\n','\n',char(10)),'md',2237,'2023-11-14 00:41:05.332492826 UTC',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFFG4G4ZQ7BZCJEM6C6370','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema/schema.json','7294ca5b064edd37cc98c8924b461e73922c83b7',replace('{"name":"Resource Surveillance Notebooks Schema","desc":"","tables":[{"name":"assurance_schema","type":"table","comment":"A Notebook is a group of Cells. A kernel is a computational engine that executes the code contained in a notebook cell.  Each notebook is associated with a kernel of a specific programming language or code transformer which can interpret  code and produce a result. For example, a SQL notebook might use a SQLite kernel for running SQL code and an AI Prompt  might prepare AI prompts for LLMs.","columns":[{"name":"assurance_schema_id","type":"VARCHAR","nullable":false,"default":null,"comment":"assurance_schema primary key and internal label (not a ULID)"},{"name":"assurance_type","type":"TEXT","nullable":false,"default":null,"comment":"''JSON Schema'', ''XML Schema'', etc."},{"name":"code","type":"TEXT","nullable":false,"default":null,"comment":"If the schema is other than JSON Schema, use this for the validation code"},{"name":"code_json","type":"TEXT","nullable":true,"default":null,"comment":"If the schema is a JSON Schema or the assurance code has a JSON representation"},{"name":"governance","type":"TEXT","nullable":true,"default":null,"comment":"JSON schema-specific governance data (description, documentation, usage, etc. in JSON)"},{"name":"created_at","type":"TIMESTAMP","nullable":true,"default":"CURRENT_TIMESTAMP","comment":""},{"name":"created_by","type":"TEXT","nullable":true,"default":"''UNKNOWN''","comment":""},{"name":"updated_at","type":"TIMESTAMP","nullable":true,"default":null,"comment":""},{"name":"updated_by","type":"TEXT","nullable":true,"default":null,"comment":""},{"name":"deleted_at","type":"TIMESTAMP","nullable":true,"default":null,"comment":""},{"name":"deleted_by","type":"TEXT","nullable":true,"default":null,"comment":""},{"name":"activity_log","type":"TEXT","nullable":true,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isJsonSqlDomain\":true}"}],"indexes":[{"name":"sqlite_autoindex_assurance_schema_1","def":"PRIMARY KEY (assurance_schema_id)","table":"assurance_schema","columns":["assurance_schema_id"],"comment":""}],"constraints":[{"name":"assurance_schema_id","type":"PRIMARY KEY","def":"PRIMARY KEY (assurance_schema_id)","table":"assurance_schema","referenced_table":null,"columns":["assurance_schema_id"],"referenced_columns":null,"comment":""},{"name":"sqlite_autoindex_assurance_schema_1","type":"PRIMARY KEY","def":"PRIMARY KEY (assurance_schema_id)","table":"assurance_schema","referenced_table":null,"columns":["assurance_schema_id"],"referenced_columns":null,"comment":""},{"name":"-","type":"CHECK","def":"CHECK(json_valid(code_json) OR code_json IS NULL)","table":"assurance_schema","referenced_table":null,"columns":["code","code_json"],"referenced_columns":null,"comment":""},{"name":"-","type":"CHECK","def":"CHECK(json_valid(governance) OR governance IS NULL)","table":"assurance_schema","referenced_table":null,"columns":["governance"],"referenced_columns":null,"comment":""}],"triggers":[],"def":"CREATE TABLE \"assurance_schema\" (\n    \"assurance_schema_id\" VARCHAR PRIMARY KEY NOT NULL,\n    \"assurance_type\" TEXT NOT NULL,\n    \"code\" TEXT NOT NULL,\n    \"code_json\" TEXT CHECK(json_valid(code_json) OR code_json IS NULL),\n    \"governance\" TEXT CHECK(json_valid(governance) OR governance IS NULL),\n    \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"created_by\" TEXT DEFAULT ''UNKNOWN'',\n    \"updated_at\" TIMESTAMP,\n    \"updated_by\" TEXT,\n    \"deleted_at\" TIMESTAMP,\n    \"deleted_by\" TEXT,\n    \"activity_log\" TEXT\n)"},{"name":"code_notebook_kernel","type":"table","comment":"A Notebook is a group of Cells. A kernel is a computational engine that executes the code contained in a notebook cell.  Each notebook is associated with a kernel of a specific programming language or code transformer which can interpret  code and produce a result. For example, a SQL notebook might use a SQLite kernel for running SQL code and an AI Prompt  might prepare AI prompts for LLMs.","columns":[{"name":"code_notebook_kernel_id","type":"VARCHAR","nullable":false,"default":null,"comment":"code_notebook_kernel primary key and internal label (not a ULID)"},{"name":"kernel_name","type":"TEXT","nullable":false,"default":null,"comment":"the kernel name for human/display use cases"},{"name":"description","type":"TEXT","nullable":true,"default":null,"comment":"any further description of the kernel for human/display use cases"},{"name":"mime_type","type":"TEXT","nullable":true,"default":null,"comment":"MIME type of this kernel''s code in case it will be served"},{"name":"file_extn","type":"TEXT","nullable":true,"default":null,"comment":"the typical file extension for these kernel''s codebases, can be used for syntax highlighting, etc."},{"name":"elaboration","type":"TEXT","nullable":true,"default":null,"comment":"kernel-specific attributes/properties"},{"name":"governance","type":"TEXT","nullable":true,"default":null,"comment":"kernel-specific governance data"},{"name":"created_at","type":"TIMESTAMP","nullable":true,"default":"CURRENT_TIMESTAMP","comment":""},{"name":"created_by","type":"TEXT","nullable":true,"default":"''UNKNOWN''","comment":""},{"name":"updated_at","type":"TIMESTAMP","nullable":true,"default":null,"comment":""},{"name":"updated_by","type":"TEXT","nullable":true,"default":null,"comment":""},{"name":"deleted_at","type":"TIMESTAMP","nullable":true,"default":null,"comment":""},{"name":"deleted_by","type":"TEXT","nullable":true,"default":null,"comment":""},{"name":"activity_log","type":"TEXT","nullable":true,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isJsonSqlDomain\":true}"}],"indexes":[{"name":"sqlite_autoindex_code_notebook_kernel_2","def":"UNIQUE (kernel_name)","table":"code_notebook_kernel","columns":["kernel_name"],"comment":""},{"name":"sqlite_autoindex_code_notebook_kernel_1","def":"PRIMARY KEY (code_notebook_kernel_id)","table":"code_notebook_kernel","columns":["code_notebook_kernel_id"],"comment":""}],"constraints":[{"name":"code_notebook_kernel_id","type":"PRIMARY KEY","def":"PRIMARY KEY (code_notebook_kernel_id)","table":"code_notebook_kernel","referenced_table":null,"columns":["code_notebook_kernel_id"],"referenced_columns":null,"comment":""},{"name":"sqlite_autoindex_code_notebook_kernel_2","type":"UNIQUE","def":"UNIQUE (kernel_name)","table":"code_notebook_kernel","referenced_table":null,"columns":["kernel_name"],"referenced_columns":null,"comment":""},{"name":"sqlite_autoindex_code_notebook_kernel_1","type":"PRIMARY KEY","def":"PRIMARY KEY (code_notebook_kernel_id)","table":"code_notebook_kernel","referenced_table":null,"columns":["code_notebook_kernel_id"],"referenced_columns":null,"comment":""},{"name":"-","type":"CHECK","def":"CHECK(json_valid(elaboration) OR elaboration IS NULL)","table":"code_notebook_kernel","referenced_table":null,"columns":["elaboration"],"referenced_columns":null,"comment":""},{"name":"-","type":"CHECK","def":"CHECK(json_valid(governance) OR governance IS NULL)","table":"code_notebook_kernel","referenced_table":null,"columns":["governance"],"referenced_columns":null,"comment":""}],"triggers":[],"def":"CREATE TABLE \"code_notebook_kernel\" (\n    \"code_notebook_kernel_id\" VARCHAR PRIMARY KEY NOT NULL,\n    \"kernel_name\" TEXT NOT NULL,\n    \"description\" TEXT,\n    \"mime_type\" TEXT,\n    \"file_extn\" TEXT,\n    \"elaboration\" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    \"governance\" TEXT CHECK(json_valid(governance) OR governance IS NULL),\n    \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"created_by\" TEXT DEFAULT ''UNKNOWN'',\n    \"updated_at\" TIMESTAMP,\n    \"updated_by\" TEXT,\n    \"deleted_at\" TIMESTAMP,\n    \"deleted_by\" TEXT,\n    \"activity_log\" TEXT,\n    UNIQUE(\"kernel_name\")\n)"},{"name":"code_notebook_cell","type":"table","comment":"Each Notebook is divided into cells, which are individual units of interpretable code.  The content of Cells depends on the Notebook Kernel and contain the source code to be  executed by the Notebook''s Kernel. The output of the code (text, graphics, etc.) can be  stateless or may be stateful and store its results and state transitions in code_notebook_state.","columns":[{"name":"code_notebook_cell_id","type":"VARCHAR","nullable":false,"default":null,"comment":"code_notebook_cell primary key"},{"name":"notebook_kernel_id","type":"VARCHAR","nullable":false,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isVarChar\":true}"},{"name":"notebook_name","type":"TEXT","nullable":false,"default":null,"comment":""},{"name":"cell_name","type":"TEXT","nullable":false,"default":null,"comment":""},{"name":"cell_governance","type":"TEXT","nullable":true,"default":null,"comment":"any idempotency, versioning, hash, branch, tag or other \"governance\" data (dependent on the cell)"},{"name":"interpretable_code","type":"TEXT","nullable":false,"default":null,"comment":""},{"name":"interpretable_code_hash","type":"TEXT","nullable":false,"default":null,"comment":""},{"name":"description","type":"TEXT","nullable":true,"default":null,"comment":""},{"name":"arguments","type":"TEXT","nullable":true,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isJsonText\":true}"},{"name":"created_at","type":"TIMESTAMP","nullable":true,"default":"CURRENT_TIMESTAMP","comment":""},{"name":"created_by","type":"TEXT","nullable":true,"default":"''UNKNOWN''","comment":""},{"name":"updated_at","type":"TIMESTAMP","nullable":true,"default":null,"comment":""},{"name":"updated_by","type":"TEXT","nullable":true,"default":null,"comment":""},{"name":"deleted_at","type":"TIMESTAMP","nullable":true,"default":null,"comment":""},{"name":"deleted_by","type":"TEXT","nullable":true,"default":null,"comment":""},{"name":"activity_log","type":"TEXT","nullable":true,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isJsonSqlDomain\":true}"}],"indexes":[{"name":"sqlite_autoindex_code_notebook_cell_2","def":"UNIQUE (notebook_name, cell_name, interpretable_code_hash)","table":"code_notebook_cell","columns":["notebook_name","cell_name","interpretable_code_hash"],"comment":""},{"name":"sqlite_autoindex_code_notebook_cell_1","def":"PRIMARY KEY (code_notebook_cell_id)","table":"code_notebook_cell","columns":["code_notebook_cell_id"],"comment":""}],"constraints":[{"name":"code_notebook_cell_id","type":"PRIMARY KEY","def":"PRIMARY KEY (code_notebook_cell_id)","table":"code_notebook_cell","referenced_table":null,"columns":["code_notebook_cell_id"],"referenced_columns":null,"comment":""},{"name":"- (Foreign key ID: 0)","type":"FOREIGN KEY","def":"FOREIGN KEY (notebook_kernel_id) REFERENCES code_notebook_kernel (code_notebook_kernel_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE","table":"code_notebook_cell","referenced_table":"code_notebook_kernel","columns":["notebook_kernel_id"],"referenced_columns":["code_notebook_kernel_id"],"comment":""},{"name":"sqlite_autoindex_code_notebook_cell_2","type":"UNIQUE","def":"UNIQUE (notebook_name, cell_name, interpretable_code_hash)","table":"code_notebook_cell","referenced_table":null,"columns":["notebook_name","cell_name","interpretable_code_hash"],"referenced_columns":null,"comment":""},{"name":"sqlite_autoindex_code_notebook_cell_1","type":"PRIMARY KEY","def":"PRIMARY KEY (code_notebook_cell_id)","table":"code_notebook_cell","referenced_table":null,"columns":["code_notebook_cell_id"],"referenced_columns":null,"comment":""},{"name":"-","type":"CHECK","def":"CHECK(json_valid(cell_governance) OR cell_governance IS NULL)","table":"code_notebook_cell","referenced_table":null,"columns":["cell_governance"],"referenced_columns":null,"comment":""},{"name":"-","type":"CHECK","def":"CHECK(json_valid(arguments) OR arguments IS NULL)","table":"code_notebook_cell","referenced_table":null,"columns":["arguments"],"referenced_columns":null,"comment":""}],"triggers":[],"def":"CREATE TABLE \"code_notebook_cell\" (\n    \"code_notebook_cell_id\" VARCHAR PRIMARY KEY NOT NULL,\n    \"notebook_kernel_id\" VARCHAR NOT NULL,\n    \"notebook_name\" TEXT NOT NULL,\n    \"cell_name\" TEXT NOT NULL,\n    \"cell_governance\" TEXT CHECK(json_valid(cell_governance) OR cell_governance IS NULL),\n    \"interpretable_code\" TEXT NOT NULL,\n    \"interpretable_code_hash\" TEXT NOT NULL,\n    \"description\" TEXT,\n    \"arguments\" TEXT CHECK(json_valid(arguments) OR arguments IS NULL),\n    \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"created_by\" TEXT DEFAULT ''UNKNOWN'',\n    \"updated_at\" TIMESTAMP,\n    \"updated_by\" TEXT,\n    \"deleted_at\" TIMESTAMP,\n    \"deleted_by\" TEXT,\n    \"activity_log\" TEXT,\n    FOREIGN KEY(\"notebook_kernel_id\") REFERENCES \"code_notebook_kernel\"(\"code_notebook_kernel_id\"),\n    UNIQUE(\"notebook_name\", \"cell_name\", \"interpretable_code_hash\")\n)"},{"name":"code_notebook_state","type":"table","comment":"Records the state of a notebook''s cells'' executions, computations, and results for Kernels that are stateful.  For example, a SQL Notebook Cell that creates tables should only be run once (meaning it''s statefule).  Other Kernels might store results for functions and output defined in one cell can be used in later cells.","columns":[{"name":"code_notebook_state_id","type":"VARCHAR","nullable":false,"default":null,"comment":"code_notebook_state primary key"},{"name":"code_notebook_cell_id","type":"VARCHAR","nullable":false,"default":null,"comment":"code_notebook_cell row this state describes"},{"name":"from_state","type":"TEXT","nullable":false,"default":null,"comment":"the previous state (set to \"INITIAL\" when it''s the first transition)"},{"name":"to_state","type":"TEXT","nullable":false,"default":null,"comment":"the current state; if no rows exist it means no state transition occurred"},{"name":"transition_result","type":"TEXT","nullable":true,"default":null,"comment":"if the result of state change is necessary for future use"},{"name":"transition_reason","type":"TEXT","nullable":true,"default":null,"comment":"short text or code explaining why the transition occurred"},{"name":"transitioned_at","type":"TIMESTAMP","nullable":true,"default":"CURRENT_TIMESTAMP","comment":"when the transition occurred"},{"name":"elaboration","type":"TEXT","nullable":true,"default":null,"comment":"any elaboration needed for the state transition"},{"name":"created_at","type":"TIMESTAMP","nullable":true,"default":"CURRENT_TIMESTAMP","comment":""},{"name":"created_by","type":"TEXT","nullable":true,"default":"''UNKNOWN''","comment":""},{"name":"updated_at","type":"TIMESTAMP","nullable":true,"default":null,"comment":""},{"name":"updated_by","type":"TEXT","nullable":true,"default":null,"comment":""},{"name":"deleted_at","type":"TIMESTAMP","nullable":true,"default":null,"comment":""},{"name":"deleted_by","type":"TEXT","nullable":true,"default":null,"comment":""},{"name":"activity_log","type":"TEXT","nullable":true,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isJsonSqlDomain\":true}"}],"indexes":[{"name":"sqlite_autoindex_code_notebook_state_2","def":"UNIQUE (code_notebook_cell_id, from_state, to_state)","table":"code_notebook_state","columns":["code_notebook_cell_id","from_state","to_state"],"comment":""},{"name":"sqlite_autoindex_code_notebook_state_1","def":"PRIMARY KEY (code_notebook_state_id)","table":"code_notebook_state","columns":["code_notebook_state_id"],"comment":""}],"constraints":[{"name":"code_notebook_state_id","type":"PRIMARY KEY","def":"PRIMARY KEY (code_notebook_state_id)","table":"code_notebook_state","referenced_table":null,"columns":["code_notebook_state_id"],"referenced_columns":null,"comment":""},{"name":"- (Foreign key ID: 0)","type":"FOREIGN KEY","def":"FOREIGN KEY (code_notebook_cell_id) REFERENCES code_notebook_cell (code_notebook_cell_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE","table":"code_notebook_state","referenced_table":"code_notebook_cell","columns":["code_notebook_cell_id"],"referenced_columns":["code_notebook_cell_id"],"comment":""},{"name":"sqlite_autoindex_code_notebook_state_2","type":"UNIQUE","def":"UNIQUE (code_notebook_cell_id, from_state, to_state)","table":"code_notebook_state","referenced_table":null,"columns":["code_notebook_cell_id","from_state","to_state"],"referenced_columns":null,"comment":""},{"name":"sqlite_autoindex_code_notebook_state_1","type":"PRIMARY KEY","def":"PRIMARY KEY (code_notebook_state_id)","table":"code_notebook_state","referenced_table":null,"columns":["code_notebook_state_id"],"referenced_columns":null,"comment":""},{"name":"-","type":"CHECK","def":"CHECK(json_valid(transition_result) OR transition_result IS NULL)","table":"code_notebook_state","referenced_table":null,"columns":["transition_result"],"referenced_columns":null,"comment":""},{"name":"-","type":"CHECK","def":"CHECK(json_valid(elaboration) OR elaboration IS NULL)","table":"code_notebook_state","referenced_table":null,"columns":["elaboration"],"referenced_columns":null,"comment":""}],"triggers":[],"def":"CREATE TABLE \"code_notebook_state\" (\n    \"code_notebook_state_id\" VARCHAR PRIMARY KEY NOT NULL,\n    \"code_notebook_cell_id\" VARCHAR NOT NULL,\n    \"from_state\" TEXT NOT NULL,\n    \"to_state\" TEXT NOT NULL,\n    \"transition_result\" TEXT CHECK(json_valid(transition_result) OR transition_result IS NULL),\n    \"transition_reason\" TEXT,\n    \"transitioned_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"elaboration\" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"created_by\" TEXT DEFAULT ''UNKNOWN'',\n    \"updated_at\" TIMESTAMP,\n    \"updated_by\" TEXT,\n    \"deleted_at\" TIMESTAMP,\n    \"deleted_by\" TEXT,\n    \"activity_log\" TEXT,\n    FOREIGN KEY(\"code_notebook_cell_id\") REFERENCES \"code_notebook_cell\"(\"code_notebook_cell_id\"),\n    UNIQUE(\"code_notebook_cell_id\", \"from_state\", \"to_state\")\n)"}],"relations":[{"table":"code_notebook_cell","columns":["notebook_kernel_id"],"cardinality":"Zero or more","parent_table":"code_notebook_kernel","parent_columns":["code_notebook_kernel_id"],"parent_cardinality":"Exactly one","def":"FOREIGN KEY (notebook_kernel_id) REFERENCES code_notebook_kernel (code_notebook_kernel_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE","virtual":false},{"table":"code_notebook_state","columns":["code_notebook_cell_id"],"cardinality":"Zero or more","parent_table":"code_notebook_cell","parent_columns":["code_notebook_cell_id"],"parent_cardinality":"Exactly one","def":"FOREIGN KEY (code_notebook_cell_id) REFERENCES code_notebook_cell (code_notebook_cell_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE","virtual":false}],"functions":null,"driver":{"name":"sqlite","database_version":"3.42.0","meta":{}}}\012','\012',char(10)),'json',18770,'2023-12-04 02:56:00.189340955 UTC',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFFG4J69RDKKTYVQQE5PYA','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema/code_notebook_state.md','ffd6f19f2b64d0a02e759856a94ee94267d24455',replace('# code_notebook_state\n\n## Description\n\nRecords the state of a notebook''s cells'' executions, computations, and results for Kernels that are stateful.  For example, a SQL Notebook Cell that creates tables should only be run once (meaning it''s statefule).  Other Kernels might store results for functions and output defined in one cell can be used in later cells.\n\n<details>\n<summary><strong>Table Definition</strong></summary>\n\n```sql\nCREATE TABLE "code_notebook_state" (\n    "code_notebook_state_id" VARCHAR PRIMARY KEY NOT NULL,\n    "code_notebook_cell_id" VARCHAR NOT NULL,\n    "from_state" TEXT NOT NULL,\n    "to_state" TEXT NOT NULL,\n    "transition_result" TEXT CHECK(json_valid(transition_result) OR transition_result IS NULL),\n    "transition_reason" TEXT,\n    "transitioned_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "elaboration" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "created_by" TEXT DEFAULT ''UNKNOWN'',\n    "updated_at" TIMESTAMP,\n    "updated_by" TEXT,\n    "deleted_at" TIMESTAMP,\n    "deleted_by" TEXT,\n    "activity_log" TEXT,\n    FOREIGN KEY("code_notebook_cell_id") REFERENCES "code_notebook_cell"("code_notebook_cell_id"),\n    UNIQUE("code_notebook_cell_id", "from_state", "to_state")\n)\n```\n\n</details>\n\n## Columns\n\n| Name                   | Type      | Default           | Nullable | Parents                                     | Comment                                                                   |\n| ---------------------- | --------- | ----------------- | -------- | ------------------------------------------- | ------------------------------------------------------------------------- |\n| code_notebook_state_id | VARCHAR   |                   | false    |                                             | code_notebook_state primary key                                           |\n| code_notebook_cell_id  | VARCHAR   |                   | false    | [code_notebook_cell](code_notebook_cell.md) | code_notebook_cell row this state describes                               |\n| from_state             | TEXT      |                   | false    |                                             | the previous state (set to "INITIAL" when it''s the first transition)      |\n| to_state               | TEXT      |                   | false    |                                             | the current state; if no rows exist it means no state transition occurred |\n| transition_result      | TEXT      |                   | true     |                                             | if the result of state change is necessary for future use                 |\n| transition_reason      | TEXT      |                   | true     |                                             | short text or code explaining why the transition occurred                 |\n| transitioned_at        | TIMESTAMP | CURRENT_TIMESTAMP | true     |                                             | when the transition occurred                                              |\n| elaboration            | TEXT      |                   | true     |                                             | any elaboration needed for the state transition                           |\n| created_at             | TIMESTAMP | CURRENT_TIMESTAMP | true     |                                             |                                                                           |\n| created_by             | TEXT      | ''UNKNOWN''         | true     |                                             |                                                                           |\n| updated_at             | TIMESTAMP |                   | true     |                                             |                                                                           |\n| updated_by             | TEXT      |                   | true     |                                             |                                                                           |\n| deleted_at             | TIMESTAMP |                   | true     |                                             |                                                                           |\n| deleted_by             | TEXT      |                   | true     |                                             |                                                                           |\n| activity_log           | TEXT      |                   | true     |                                             | {"isSqlDomainZodDescrMeta":true,"isJsonSqlDomain":true}                   |\n\n## Constraints\n\n| Name                                   | Type        | Definition                                                                                                                                   |\n| -------------------------------------- | ----------- | -------------------------------------------------------------------------------------------------------------------------------------------- |\n| code_notebook_state_id                 | PRIMARY KEY | PRIMARY KEY (code_notebook_state_id)                                                                                                         |\n| - (Foreign key ID: 0)                  | FOREIGN KEY | FOREIGN KEY (code_notebook_cell_id) REFERENCES code_notebook_cell (code_notebook_cell_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE |\n| sqlite_autoindex_code_notebook_state_2 | UNIQUE      | UNIQUE (code_notebook_cell_id, from_state, to_state)                                                                                         |\n| sqlite_autoindex_code_notebook_state_1 | PRIMARY KEY | PRIMARY KEY (code_notebook_state_id)                                                                                                         |\n| -                                      | CHECK       | CHECK(json_valid(transition_result) OR transition_result IS NULL)                                                                            |\n| -                                      | CHECK       | CHECK(json_valid(elaboration) OR elaboration IS NULL)                                                                                        |\n\n## Indexes\n\n| Name                                   | Definition                                           |\n| -------------------------------------- | ---------------------------------------------------- |\n| sqlite_autoindex_code_notebook_state_2 | UNIQUE (code_notebook_cell_id, from_state, to_state) |\n| sqlite_autoindex_code_notebook_state_1 | PRIMARY KEY (code_notebook_state_id)                 |\n\n## Relations\n\n![er](code_notebook_state.svg)\n\n---\n\n> Generated by [tbls](https://github.com/k1LoW/tbls)\n','\n',char(10)),'md',6705,'2023-12-04 02:56:00.189340955 UTC',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFFG4MEGMY17D3RZG2ZP17','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema/README.md','65b068b0696559dd406a4c3a6476af7d0aed1cb9',replace('# Resource Surveillance Notebooks Schema\n\n## Tables\n\n| Name                                            | Columns | Comment                                                                                                                                                                                                                                                                                                                                                                                                   | Type  |\n| ----------------------------------------------- | ------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----- |\n| [assurance_schema](assurance_schema.md)         | 12      | A Notebook is a group of Cells. A kernel is a computational engine that executes the code contained in a notebook cell.  Each notebook is associated with a kernel of a specific programming language or code transformer which can interpret  code and produce a result. For example, a SQL notebook might use a SQLite kernel for running SQL code and an AI Prompt  might prepare AI prompts for LLMs. | table |\n| [code_notebook_kernel](code_notebook_kernel.md) | 14      | A Notebook is a group of Cells. A kernel is a computational engine that executes the code contained in a notebook cell.  Each notebook is associated with a kernel of a specific programming language or code transformer which can interpret  code and produce a result. For example, a SQL notebook might use a SQLite kernel for running SQL code and an AI Prompt  might prepare AI prompts for LLMs. | table |\n| [code_notebook_cell](code_notebook_cell.md)     | 16      | Each Notebook is divided into cells, which are individual units of interpretable code.  The content of Cells depends on the Notebook Kernel and contain the source code to be  executed by the Notebook''s Kernel. The output of the code (text, graphics, etc.) can be  stateless or may be stateful and store its results and state transitions in code_notebook_state.                                  | table |\n| [code_notebook_state](code_notebook_state.md)   | 15      | Records the state of a notebook''s cells'' executions, computations, and results for Kernels that are stateful.  For example, a SQL Notebook Cell that creates tables should only be run once (meaning it''s statefule).  Other Kernels might store results for functions and output defined in one cell can be used in later cells.                                                                         | table |\n\n## Relations\n\n![er](schema.svg)\n\n---\n\n> Generated by [tbls](https://github.com/k1LoW/tbls)\n','\n',char(10)),'md',2941,'2023-12-04 02:56:00.179340955 UTC',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFFG4NCC7S7M34H0BDATS1','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema/assurance_schema.md','f968086d1ee0b3fd1a046376189eb2c40dddc83a',replace('# assurance_schema\n\n## Description\n\nA Notebook is a group of Cells. A kernel is a computational engine that executes the code contained in a notebook cell.  Each notebook is associated with a kernel of a specific programming language or code transformer which can interpret  code and produce a result. For example, a SQL notebook might use a SQLite kernel for running SQL code and an AI Prompt  might prepare AI prompts for LLMs.\n\n<details>\n<summary><strong>Table Definition</strong></summary>\n\n```sql\nCREATE TABLE "assurance_schema" (\n    "assurance_schema_id" VARCHAR PRIMARY KEY NOT NULL,\n    "assurance_type" TEXT NOT NULL,\n    "code" TEXT NOT NULL,\n    "code_json" TEXT CHECK(json_valid(code_json) OR code_json IS NULL),\n    "governance" TEXT CHECK(json_valid(governance) OR governance IS NULL),\n    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "created_by" TEXT DEFAULT ''UNKNOWN'',\n    "updated_at" TIMESTAMP,\n    "updated_by" TEXT,\n    "deleted_at" TIMESTAMP,\n    "deleted_by" TEXT,\n    "activity_log" TEXT\n)\n```\n\n</details>\n\n## Columns\n\n| Name                | Type      | Default           | Nullable | Comment                                                                                |\n| ------------------- | --------- | ----------------- | -------- | -------------------------------------------------------------------------------------- |\n| assurance_schema_id | VARCHAR   |                   | false    | assurance_schema primary key and internal label (not a ULID)                           |\n| assurance_type      | TEXT      |                   | false    | ''JSON Schema'', ''XML Schema'', etc.                                                      |\n| code                | TEXT      |                   | false    | If the schema is other than JSON Schema, use this for the validation code              |\n| code_json           | TEXT      |                   | true     | If the schema is a JSON Schema or the assurance code has a JSON representation         |\n| governance          | TEXT      |                   | true     | JSON schema-specific governance data (description, documentation, usage, etc. in JSON) |\n| created_at          | TIMESTAMP | CURRENT_TIMESTAMP | true     |                                                                                        |\n| created_by          | TEXT      | ''UNKNOWN''         | true     |                                                                                        |\n| updated_at          | TIMESTAMP |                   | true     |                                                                                        |\n| updated_by          | TEXT      |                   | true     |                                                                                        |\n| deleted_at          | TIMESTAMP |                   | true     |                                                                                        |\n| deleted_by          | TEXT      |                   | true     |                                                                                        |\n| activity_log        | TEXT      |                   | true     | {"isSqlDomainZodDescrMeta":true,"isJsonSqlDomain":true}                                |\n\n## Constraints\n\n| Name                                | Type        | Definition                                          |\n| ----------------------------------- | ----------- | --------------------------------------------------- |\n| assurance_schema_id                 | PRIMARY KEY | PRIMARY KEY (assurance_schema_id)                   |\n| sqlite_autoindex_assurance_schema_1 | PRIMARY KEY | PRIMARY KEY (assurance_schema_id)                   |\n| -                                   | CHECK       | CHECK(json_valid(code_json) OR code_json IS NULL)   |\n| -                                   | CHECK       | CHECK(json_valid(governance) OR governance IS NULL) |\n\n## Indexes\n\n| Name                                | Definition                        |\n| ----------------------------------- | --------------------------------- |\n| sqlite_autoindex_assurance_schema_1 | PRIMARY KEY (assurance_schema_id) |\n\n## Relations\n\n![er](assurance_schema.svg)\n\n---\n\n> Generated by [tbls](https://github.com/k1LoW/tbls)\n','\n',char(10)),'md',4245,'2023-12-04 02:56:00.179340955 UTC',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFFG4Q4AT8D1FW9S1W287P','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema/code_notebook_kernel.md','932e34c2d8019119087da8c751404c7df667a900',replace('# code_notebook_kernel\n\n## Description\n\nA Notebook is a group of Cells. A kernel is a computational engine that executes the code contained in a notebook cell.  Each notebook is associated with a kernel of a specific programming language or code transformer which can interpret  code and produce a result. For example, a SQL notebook might use a SQLite kernel for running SQL code and an AI Prompt  might prepare AI prompts for LLMs.\n\n<details>\n<summary><strong>Table Definition</strong></summary>\n\n```sql\nCREATE TABLE "code_notebook_kernel" (\n    "code_notebook_kernel_id" VARCHAR PRIMARY KEY NOT NULL,\n    "kernel_name" TEXT NOT NULL,\n    "description" TEXT,\n    "mime_type" TEXT,\n    "file_extn" TEXT,\n    "elaboration" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    "governance" TEXT CHECK(json_valid(governance) OR governance IS NULL),\n    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "created_by" TEXT DEFAULT ''UNKNOWN'',\n    "updated_at" TIMESTAMP,\n    "updated_by" TEXT,\n    "deleted_at" TIMESTAMP,\n    "deleted_by" TEXT,\n    "activity_log" TEXT,\n    UNIQUE("kernel_name")\n)\n```\n\n</details>\n\n## Columns\n\n| Name                    | Type      | Default           | Nullable | Children                                    | Comment                                                                                            |\n| ----------------------- | --------- | ----------------- | -------- | ------------------------------------------- | -------------------------------------------------------------------------------------------------- |\n| code_notebook_kernel_id | VARCHAR   |                   | false    | [code_notebook_cell](code_notebook_cell.md) | code_notebook_kernel primary key and internal label (not a ULID)                                   |\n| kernel_name             | TEXT      |                   | false    |                                             | the kernel name for human/display use cases                                                        |\n| description             | TEXT      |                   | true     |                                             | any further description of the kernel for human/display use cases                                  |\n| mime_type               | TEXT      |                   | true     |                                             | MIME type of this kernel''s code in case it will be served                                          |\n| file_extn               | TEXT      |                   | true     |                                             | the typical file extension for these kernel''s codebases, can be used for syntax highlighting, etc. |\n| elaboration             | TEXT      |                   | true     |                                             | kernel-specific attributes/properties                                                              |\n| governance              | TEXT      |                   | true     |                                             | kernel-specific governance data                                                                    |\n| created_at              | TIMESTAMP | CURRENT_TIMESTAMP | true     |                                             |                                                                                                    |\n| created_by              | TEXT      | ''UNKNOWN''         | true     |                                             |                                                                                                    |\n| updated_at              | TIMESTAMP |                   | true     |                                             |                                                                                                    |\n| updated_by              | TEXT      |                   | true     |                                             |                                                                                                    |\n| deleted_at              | TIMESTAMP |                   | true     |                                             |                                                                                                    |\n| deleted_by              | TEXT      |                   | true     |                                             |                                                                                                    |\n| activity_log            | TEXT      |                   | true     |                                             | {"isSqlDomainZodDescrMeta":true,"isJsonSqlDomain":true}                                            |\n\n## Constraints\n\n| Name                                    | Type        | Definition                                            |\n| --------------------------------------- | ----------- | ----------------------------------------------------- |\n| code_notebook_kernel_id                 | PRIMARY KEY | PRIMARY KEY (code_notebook_kernel_id)                 |\n| sqlite_autoindex_code_notebook_kernel_2 | UNIQUE      | UNIQUE (kernel_name)                                  |\n| sqlite_autoindex_code_notebook_kernel_1 | PRIMARY KEY | PRIMARY KEY (code_notebook_kernel_id)                 |\n| -                                       | CHECK       | CHECK(json_valid(elaboration) OR elaboration IS NULL) |\n| -                                       | CHECK       | CHECK(json_valid(governance) OR governance IS NULL)   |\n\n## Indexes\n\n| Name                                    | Definition                            |\n| --------------------------------------- | ------------------------------------- |\n| sqlite_autoindex_code_notebook_kernel_2 | UNIQUE (kernel_name)                  |\n| sqlite_autoindex_code_notebook_kernel_1 | PRIMARY KEY (code_notebook_kernel_id) |\n\n## Relations\n\n![er](code_notebook_kernel.svg)\n\n---\n\n> Generated by [tbls](https://github.com/k1LoW/tbls)\n','\n',char(10)),'md',5895,'2023-12-04 02:56:00.179340955 UTC',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFFG4S33FDWWEBW7DCVCYQ','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema/code_notebook_cell.md','c53803e88c82f084adb1c1b742ba44f4348929ae',replace('# code_notebook_cell\n\n## Description\n\nEach Notebook is divided into cells, which are individual units of interpretable code.  The content of Cells depends on the Notebook Kernel and contain the source code to be  executed by the Notebook''s Kernel. The output of the code (text, graphics, etc.) can be  stateless or may be stateful and store its results and state transitions in code_notebook_state.\n\n<details>\n<summary><strong>Table Definition</strong></summary>\n\n```sql\nCREATE TABLE "code_notebook_cell" (\n    "code_notebook_cell_id" VARCHAR PRIMARY KEY NOT NULL,\n    "notebook_kernel_id" VARCHAR NOT NULL,\n    "notebook_name" TEXT NOT NULL,\n    "cell_name" TEXT NOT NULL,\n    "cell_governance" TEXT CHECK(json_valid(cell_governance) OR cell_governance IS NULL),\n    "interpretable_code" TEXT NOT NULL,\n    "interpretable_code_hash" TEXT NOT NULL,\n    "description" TEXT,\n    "arguments" TEXT CHECK(json_valid(arguments) OR arguments IS NULL),\n    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "created_by" TEXT DEFAULT ''UNKNOWN'',\n    "updated_at" TIMESTAMP,\n    "updated_by" TEXT,\n    "deleted_at" TIMESTAMP,\n    "deleted_by" TEXT,\n    "activity_log" TEXT,\n    FOREIGN KEY("notebook_kernel_id") REFERENCES "code_notebook_kernel"("code_notebook_kernel_id"),\n    UNIQUE("notebook_name", "cell_name", "interpretable_code_hash")\n)\n```\n\n</details>\n\n## Columns\n\n| Name                    | Type      | Default           | Nullable | Children                                      | Parents                                         | Comment                                                                                           |\n| ----------------------- | --------- | ----------------- | -------- | --------------------------------------------- | ----------------------------------------------- | ------------------------------------------------------------------------------------------------- |\n| code_notebook_cell_id   | VARCHAR   |                   | false    | [code_notebook_state](code_notebook_state.md) |                                                 | code_notebook_cell primary key                                                                    |\n| notebook_kernel_id      | VARCHAR   |                   | false    |                                               | [code_notebook_kernel](code_notebook_kernel.md) | {"isSqlDomainZodDescrMeta":true,"isVarChar":true}                                                 |\n| notebook_name           | TEXT      |                   | false    |                                               |                                                 |                                                                                                   |\n| cell_name               | TEXT      |                   | false    |                                               |                                                 |                                                                                                   |\n| cell_governance         | TEXT      |                   | true     |                                               |                                                 | any idempotency, versioning, hash, branch, tag or other "governance" data (dependent on the cell) |\n| interpretable_code      | TEXT      |                   | false    |                                               |                                                 |                                                                                                   |\n| interpretable_code_hash | TEXT      |                   | false    |                                               |                                                 |                                                                                                   |\n| description             | TEXT      |                   | true     |                                               |                                                 |                                                                                                   |\n| arguments               | TEXT      |                   | true     |                                               |                                                 | {"isSqlDomainZodDescrMeta":true,"isJsonText":true}                                                |\n| created_at              | TIMESTAMP | CURRENT_TIMESTAMP | true     |                                               |                                                 |                                                                                                   |\n| created_by              | TEXT      | ''UNKNOWN''         | true     |                                               |                                                 |                                                                                                   |\n| updated_at              | TIMESTAMP |                   | true     |                                               |                                                 |                                                                                                   |\n| updated_by              | TEXT      |                   | true     |                                               |                                                 |                                                                                                   |\n| deleted_at              | TIMESTAMP |                   | true     |                                               |                                                 |                                                                                                   |\n| deleted_by              | TEXT      |                   | true     |                                               |                                                 |                                                                                                   |\n| activity_log            | TEXT      |                   | true     |                                               |                                                 | {"isSqlDomainZodDescrMeta":true,"isJsonSqlDomain":true}                                           |\n\n## Constraints\n\n| Name                                  | Type        | Definition                                                                                                                                    |\n| ------------------------------------- | ----------- | --------------------------------------------------------------------------------------------------------------------------------------------- |\n| code_notebook_cell_id                 | PRIMARY KEY | PRIMARY KEY (code_notebook_cell_id)                                                                                                           |\n| - (Foreign key ID: 0)                 | FOREIGN KEY | FOREIGN KEY (notebook_kernel_id) REFERENCES code_notebook_kernel (code_notebook_kernel_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE |\n| sqlite_autoindex_code_notebook_cell_2 | UNIQUE      | UNIQUE (notebook_name, cell_name, interpretable_code_hash)                                                                                    |\n| sqlite_autoindex_code_notebook_cell_1 | PRIMARY KEY | PRIMARY KEY (code_notebook_cell_id)                                                                                                           |\n| -                                     | CHECK       | CHECK(json_valid(cell_governance) OR cell_governance IS NULL)                                                                                 |\n| -                                     | CHECK       | CHECK(json_valid(arguments) OR arguments IS NULL)                                                                                             |\n\n## Indexes\n\n| Name                                  | Definition                                                 |\n| ------------------------------------- | ---------------------------------------------------------- |\n| sqlite_autoindex_code_notebook_cell_2 | UNIQUE (notebook_name, cell_name, interpretable_code_hash) |\n| sqlite_autoindex_code_notebook_cell_1 | PRIMARY KEY (code_notebook_cell_id)                        |\n\n## Relations\n\n![er](code_notebook_cell.svg)\n\n---\n\n> Generated by [tbls](https://github.com/k1LoW/tbls)\n','\n',char(10)),'md',8354,'2023-12-04 02:56:00.179340955 UTC',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFFG4VRNERBVS5ECVX0JC6','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/CLI-help.md','72d07724ab030fb608ed4e2e6e48c2ed8d0859b6',replace('# Command-Line Help for `surveilr`\n\nThis document contains the help content for the `surveilr` command-line program.\n\n**Command Overview:**\n\n* [`surveilr`↴](#surveilr)\n* [`surveilr admin`↴](#surveilr-admin)\n* [`surveilr admin init`↴](#surveilr-admin-init)\n* [`surveilr admin merge`↴](#surveilr-admin-merge)\n* [`surveilr admin cli-help-md`↴](#surveilr-admin-cli-help-md)\n* [`surveilr capturable-exec`↴](#surveilr-capturable-exec)\n* [`surveilr capturable-exec ls`↴](#surveilr-capturable-exec-ls)\n* [`surveilr capturable-exec test`↴](#surveilr-capturable-exec-test)\n* [`surveilr capturable-exec test file`↴](#surveilr-capturable-exec-test-file)\n* [`surveilr capturable-exec test task`↴](#surveilr-capturable-exec-test-task)\n* [`surveilr ingest`↴](#surveilr-ingest)\n* [`surveilr ingest files`↴](#surveilr-ingest-files)\n* [`surveilr ingest tasks`↴](#surveilr-ingest-tasks)\n* [`surveilr notebooks`↴](#surveilr-notebooks)\n* [`surveilr notebooks cat`↴](#surveilr-notebooks-cat)\n* [`surveilr notebooks ls`↴](#surveilr-notebooks-ls)\n\n## `surveilr`\n\n**Usage:** `surveilr [OPTIONS] <COMMAND>`\n\n###### **Subcommands:**\n\n* `admin` — Admin / maintenance utilities\n* `capturable-exec` — Capturable Executables (CE) maintenance tools\n* `ingest` — Ingest content from device file system and other sources\n* `notebooks` — Notebooks maintenance utilities\n\n###### **Options:**\n\n* `--device-name <DEVICE_NAME>` — How to identify this device\n\n  Default value: `Titan`\n* `-d`, `--debug` — Turn debugging information on (repeat for higher levels)\n\n\n\n## `surveilr admin`\n\nAdmin / maintenance utilities\n\n**Usage:** `surveilr admin <COMMAND>`\n\n###### **Subcommands:**\n\n* `init` — initialize an empty database with bootstrap.sql\n* `merge` — merge multiple surveillance state databases into a single one\n* `cli-help-md` — generate CLI help markdown\n\n\n\n## `surveilr admin init`\n\ninitialize an empty database with bootstrap.sql\n\n**Usage:** `surveilr admin init [OPTIONS]`\n\n###### **Options:**\n\n* `-d`, `--state-db-fs-path <STATE_DB_FS_PATH>` — target SQLite database\n\n  Default value: `resource-surveillance.sqlite.db`\n* `-I`, `--state-db-init-sql <STATE_DB_INIT_SQL>` — one or more globs to match as SQL files and batch execute them in alpha order\n* `-r`, `--remove-existing-first` — remove the existing database first\n* `--with-device` — add the current device in the empty database''s device table\n\n\n\n## `surveilr admin merge`\n\nmerge multiple surveillance state databases into a single one\n\n**Usage:** `surveilr admin merge [OPTIONS]`\n\n###### **Options:**\n\n* `-c`, `--candidates <CANDIDATES>` — one or more DB name globs to match and merge\n\n  Default value: `*.db`\n* `-i`, `--ignore-candidates <IGNORE_CANDIDATES>` — one or more DB name globs to ignore if they match\n* `-d`, `--state-db-fs-path <STATE_DB_FS_PATH>` — target SQLite database with merged content\n\n  Default value: `resource-surveillance-aggregated.sqlite.db`\n* `-I`, `--state-db-init-sql <STATE_DB_INIT_SQL>` — one or more globs to match as SQL files and batch execute them in alpha order\n* `-r`, `--remove-existing-first` — remove the existing database first\n* `--sql-only` — only generate SQL and emit to STDOUT (no actual merge)\n\n\n\n## `surveilr admin cli-help-md`\n\ngenerate CLI help markdown\n\n**Usage:** `surveilr admin cli-help-md`\n\n\n\n## `surveilr capturable-exec`\n\nCapturable Executables (CE) maintenance tools\n\n**Usage:** `surveilr capturable-exec <COMMAND>`\n\n###### **Subcommands:**\n\n* `ls` — list potential capturable executables\n* `test` — test capturable executables files\n\n\n\n## `surveilr capturable-exec ls`\n\nlist potential capturable executables\n\n**Usage:** `surveilr capturable-exec ls [OPTIONS]`\n\n###### **Options:**\n\n* `-r`, `--root-fs-path <ROOT_FS_PATH>` — one or more root paths to ingest\n\n  Default value: `.`\n* `--markdown` — emit the results as markdown, not a simple table\n\n\n\n## `surveilr capturable-exec test`\n\ntest capturable executables files\n\n**Usage:** `surveilr capturable-exec test <COMMAND>`\n\n###### **Subcommands:**\n\n* `file` — test capturable executables files\n* `task` — Execute a task string as if it was run by `ingest tasks` and show the output\n\n\n\n## `surveilr capturable-exec test file`\n\ntest capturable executables files\n\n**Usage:** `surveilr capturable-exec test file --fs-path <FS_PATH>`\n\n###### **Options:**\n\n* `-f`, `--fs-path <FS_PATH>`\n\n\n\n## `surveilr capturable-exec test task`\n\nExecute a task string as if it was run by `ingest tasks` and show the output\n\n**Usage:** `surveilr capturable-exec test task [OPTIONS]`\n\n###### **Options:**\n\n* `-s`, `--stdin` — send commands in via STDIN the same as with `ingest tasks` and just emit the output\n* `-t`, `--task <TASK>` — one or more commands that would work as a Deno Task line\n* `--cwd <CWD>` — use this as the current working directory (CWD)\n\n\n\n## `surveilr ingest`\n\nIngest content from device file system and other sources\n\n**Usage:** `surveilr ingest <COMMAND>`\n\n###### **Subcommands:**\n\n* `files` — Ingest content from device file system and other sources\n* `tasks` — Notebooks maintenance utilities\n\n\n\n## `surveilr ingest files`\n\nIngest content from device file system and other sources\n\n**Usage:** `surveilr ingest files [OPTIONS]`\n\n###### **Options:**\n\n* `--dry-run` — don''t run the ingestion, just report statistics\n* `-b`, `--behavior <BEHAVIOR>` — the behavior name in `behavior` table\n* `-r`, `--root-fs-path <ROOT_FS_PATH>` — one or more root paths to ingest\n\n  Default value: `.`\n* `-d`, `--state-db-fs-path <STATE_DB_FS_PATH>` — target SQLite database\n\n  Default value: `resource-surveillance.sqlite.db`\n* `-I`, `--state-db-init-sql <STATE_DB_INIT_SQL>` — one or more globs to match as SQL files and batch execute them in alpha order\n* `--include-state-db-in-ingestion` — include the surveil database in the ingestion candidates\n* `--stats` — show stats as an ASCII table after completion\n* `--stats-json` — show stats in JSON after completion\n* `--save-behavior <SAVE_BEHAVIOR>` — save the options as a new behavior\n\n\n\n## `surveilr ingest tasks`\n\nNotebooks maintenance utilities\n\n**Usage:** `surveilr ingest tasks [OPTIONS]`\n\n###### **Options:**\n\n* `-d`, `--state-db-fs-path <STATE_DB_FS_PATH>` — target SQLite database\n\n  Default value: `resource-surveillance.sqlite.db`\n* `-I`, `--state-db-init-sql <STATE_DB_INIT_SQL>` — one or more globs to match as SQL files and batch execute them in alpha order\n* `--stdin` — read tasks from STDIN\n* `--stats` — show session stats after completion\n* `--stats-json` — show session stats as JSON after completion\n\n\n\n## `surveilr notebooks`\n\nNotebooks maintenance utilities\n\n**Usage:** `surveilr notebooks [OPTIONS] <COMMAND>`\n\n###### **Subcommands:**\n\n* `cat` — Notebooks'' cells emit utilities\n* `ls` — list all notebooks\n\n###### **Options:**\n\n* `-d`, `--state-db-fs-path <STATE_DB_FS_PATH>` — target SQLite database\n\n  Default value: `resource-surveillance.sqlite.db`\n* `-I`, `--state-db-init-sql <STATE_DB_INIT_SQL>` — one or more globs to match as SQL files and batch execute them in alpha order\n\n\n\n## `surveilr notebooks cat`\n\nNotebooks'' cells emit utilities\n\n**Usage:** `surveilr notebooks cat [OPTIONS]`\n\n###### **Options:**\n\n* `-n`, `--notebook <NOTEBOOK>` — search for these notebooks (include % for LIKE otherwise =)\n* `-c`, `--cell <CELL>` — search for these cells (include % for LIKE otherwise =)\n* `-s`, `--seps` — add separators before each cell\n\n\n\n## `surveilr notebooks ls`\n\nlist all notebooks\n\n**Usage:** `surveilr notebooks ls [OPTIONS]`\n\n###### **Options:**\n\n* `-m`, `--migratable` — list all SQL cells that will be handled by execute_migrations\n\n\n\n<hr/>\n\n<small><i>\n    This document was generated automatically by\n    <a href="https://crates.io/crates/clap-markdown"><code>clap-markdown</code></a>.\n</i></small>\n\n','\n',char(10)),'md',7848,'2023-12-04 02:55:56.649341853 UTC',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFFG4VZ15A0JENGQRC6DA4','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state.tbls.auto.yml','10b68d45d273dcdb82423588f2d3ffcb5524d50e',replace('format:\n  adjust: true\n  hideColumnsWithoutValues:\n    - Parents\n    - Children\ner:\n  hideDef: true\n  distance: 2\ninclude:\n  - device\n  - behavior\n  - ur_ingest_resource_path_match_rule\n  - ur_ingest_resource_path_rewrite_rule\n  - ur_ingest_session\n  - ur_ingest_session_fs_path\n  - uniform_resource\n  - uniform_resource_transform\n  - ur_ingest_session_fs_path_entry\n  - ur_ingest_session_task\nname: Resource Surveillance State Schema\ncomments:\n  - table: device\n    columnComments:\n      device_id: ''{"isSqlDomainZodDescrMeta":true,"isVarChar":true}''\n      name: unique device identifier (defaults to hostname)\n      state: >-\n        should be "SINGLETON" if only one state is allowed, or other tags if\n        multiple states are allowed\n      boundary: ''can be IP address, VLAN, or any other device name differentiator''\n      segmentation: zero trust or other network segmentation\n      state_sysinfo: >-\n        any sysinfo or other state data that is specific to this device\n        (mutable)\n      elaboration: any elaboration needed for the device (mutable)\n      activity_log: ''{"isSqlDomainZodDescrMeta":true,"isJsonSqlDomain":true}''\n    tableComment: >-\n      Identity, network segmentation, and sysinfo for devices on which\n      uniform_resource are found\n  - table: behavior\n    columnComments:\n      behavior_id: ''{"isSqlDomainZodDescrMeta":true,"isVarChar":true}''\n      device_id: ''{"isSqlDomainZodDescrMeta":true,"isVarChar":true}''\n      behavior_name: ''Arbitrary but unique per-device behavior name (e.g. ingest::xyz)''\n      behavior_conf_json: >-\n        Configuration, settings, parameters, etc. describing the behavior (JSON,\n        behavior-dependent)\n      assurance_schema_id: ''{"isSqlDomainZodDescrMeta":true,"isVarChar":true}''\n      governance: ''Descriptions or other "governance" details (JSON, behavior-dependent)''\n      activity_log: ''{"isSqlDomainZodDescrMeta":true,"isJsonSqlDomain":true}''\n    tableComment: |-\n      Behaviors are configuration "presets" that can be used to drive\n      application operations at runtime. For example, ingest behaviors\n      include configs that indicate which files to ignore, which to\n      scan, when to load content, etc. This is more convenient than\n      creating\n\n      behavior has a foreign key reference to the device table since\n      behaviors might be device-specific.\n  - table: ur_ingest_resource_path_match_rule\n    columnComments:\n      ur_ingest_resource_path_match_rule_id: ''{"isSqlDomainZodDescrMeta":true,"isVarChar":true}''\n      activity_log: ''{"isSqlDomainZodDescrMeta":true,"isJsonSqlDomain":true}''\n    tableComment: |-\n      A regular expression can determine the flags to apply to an ingestion path\n      and if the regular expr contains a nature capture group that pattern match\n      will assign the nature too.\n  - table: ur_ingest_resource_path_rewrite_rule\n    columnComments:\n      ur_ingest_resource_path_rewrite_rule_id: ''{"isSqlDomainZodDescrMeta":true,"isVarChar":true}''\n      activity_log: ''{"isSqlDomainZodDescrMeta":true,"isJsonSqlDomain":true}''\n    tableComment: |-\n      A regular expression can determine the flags to apply to an ingestion path\n      and if the regular expr contains a nature capture group that pattern match\n      will assign the nature too.\n  - table: ur_ingest_session\n    columnComments:\n      ur_ingest_session_id: ''{"isSqlDomainZodDescrMeta":true,"isVarChar":true}''\n      device_id: ''{"isSqlDomainZodDescrMeta":true,"isVarChar":true}''\n      behavior_id: ''{"isSqlDomainZodDescrMeta":true,"isVarChar":true}''\n      behavior_json: ''{"isSqlDomainZodDescrMeta":true,"isJsonText":true}''\n      ingest_started_at: >-\n        {"isSqlDomainZodDescrMeta":true,"isDateSqlDomain":true,"isDateTime":true}\n      ingest_finished_at: >-\n        {"isSqlDomainZodDescrMeta":true,"isDateSqlDomain":true,"isDateTime":true}\n      elaboration: ''{"isSqlDomainZodDescrMeta":true,"isJsonText":true}''\n      activity_log: ''{"isSqlDomainZodDescrMeta":true,"isJsonSqlDomain":true}''\n    tableComment: >-\n      Immutable ingestion sessions represents any "discovery" or "walk"\n      operation.\n\n      This could be a device file system scan or any other resource discovery\n\n      session. Each time a discovery operation starts, a record is created.\n\n      ur_ingest_session has a foreign key reference to the device table so that\n      the\n\n      same device can be used for multiple ingest sessions but also the ingest\n\n      sessions can be merged across workstations / servers for easier detection\n\n      of changes and similaries between file systems on different devices.\n  - table: ur_ingest_session_fs_path\n    columnComments:\n      ur_ingest_session_fs_path_id: ''{"isSqlDomainZodDescrMeta":true,"isVarChar":true}''\n      ingest_session_id: ''{"isSqlDomainZodDescrMeta":true,"isVarChar":true}''\n      elaboration: ''{"isSqlDomainZodDescrMeta":true,"isJsonText":true}''\n      activity_log: ''{"isSqlDomainZodDescrMeta":true,"isJsonSqlDomain":true}''\n    tableComment: >-\n      Immutable ingest session file system path represents a discovery or "walk"\n      path. If\n\n      the session included a file system scan, then root_path is the\n\n      root file system path that was scanned. If the session was discovering\n\n      resources in another target then root_path would be\n\n      representative of the target path (could be a URI).\n  - table: uniform_resource\n    columnComments:\n      uniform_resource_id: uniform_resource ULID primary key\n      device_id: which device row introduced this resource\n      ingest_session_id: which ur_ingest_session row introduced this resource\n      ingest_fs_path_id: which ur_ingest_session_fs_path row introduced this resource\n      uri: >-\n        the resource''s URI (dependent on how it was acquired and on which\n        device)\n      content_digest: >-\n        ''-'' when no hash was computed (not NULL); content_digest for symlinks\n        will be the same as their target\n      content: >-\n        either NULL if no content was acquired or the actual blob/text of the\n        content\n      nature: file extension or MIME\n      last_modified_at: >-\n        {"isSqlDomainZodDescrMeta":true,"isDateSqlDomain":true,"isDateTime":true}\n      content_fm_body_attrs: >-\n        each component of frontmatter-based content ({ frontMatter: '''', body:\n        '''', attrs: {...} })\n      frontmatter: meta data or other "frontmatter" in JSON format\n      elaboration: anything that doesn''t fit in other columns (JSON)\n      activity_log: ''{"isSqlDomainZodDescrMeta":true,"isJsonSqlDomain":true}''\n    tableComment: |-\n      Immutable resource and content information. On multiple executions,\n      uniform_resource are inserted only if the the content (see unique\n      index for details). For historical logging, uniform_resource has foreign\n      key references to both ur_ingest_session and ur_ingest_session_fs_path\n      tables to indicate which particular session and ingestion path the\n      resourced was inserted during.\n  - table: uniform_resource_transform\n    columnComments:\n      uniform_resource_transform_id: uniform_resource_transform ULID primary key\n      uniform_resource_id: uniform_resource row ID of original content\n      content_digest: transformed content hash\n      content: transformed content\n      nature: file extension or MIME\n      elaboration: anything that doesn''t fit in other columns (JSON)\n      activity_log: ''{"isSqlDomainZodDescrMeta":true,"isJsonSqlDomain":true}''\n    tableComment: uniform_resource transformed content\n  - table: ur_ingest_session_fs_path_entry\n    columnComments:\n      ur_ingest_session_fs_path_entry_id: ''{"isSqlDomainZodDescrMeta":true,"isVarChar":true}''\n      ingest_session_id: ''{"isSqlDomainZodDescrMeta":true,"isVarChar":true}''\n      ingest_fs_path_id: ''{"isSqlDomainZodDescrMeta":true,"isVarChar":true}''\n      uniform_resource_id: ''{"isSqlDomainZodDescrMeta":true,"isVarChar":true}''\n      captured_executable: ''{"isSqlDomainZodDescrMeta":true,"isJsonText":true}''\n      ur_diagnostics: ''{"isSqlDomainZodDescrMeta":true,"isJsonText":true}''\n      ur_transformations: ''{"isSqlDomainZodDescrMeta":true,"isJsonText":true}''\n      elaboration: ''{"isSqlDomainZodDescrMeta":true,"isJsonText":true}''\n      activity_log: ''{"isSqlDomainZodDescrMeta":true,"isJsonSqlDomain":true}''\n    tableComment: >-\n      Contains entries related to file system content ingestion paths. On\n      multiple executions,\n\n      unlike uniform_resource, ur_ingest_session_fs_path_entry rows are always\n      inserted and\n\n      references the uniform_resource primary key of its related content.\n\n      This method allows for a more efficient query of file version differences\n      across\n\n      sessions. With SQL queries, you can detect which sessions have a file\n      added or modified,\n\n      which sessions have a file deleted, and what the differences are in file\n      contents\n\n      if they were modified across sessions.\n  - table: ur_ingest_session_task\n    columnComments:\n      ur_ingest_session_task_id: ''{"isSqlDomainZodDescrMeta":true,"isVarChar":true}''\n      ingest_session_id: ''{"isSqlDomainZodDescrMeta":true,"isVarChar":true}''\n      uniform_resource_id: ''{"isSqlDomainZodDescrMeta":true,"isVarChar":true}''\n      captured_executable: ''{"isSqlDomainZodDescrMeta":true,"isJsonText":true}''\n      ur_diagnostics: ''{"isSqlDomainZodDescrMeta":true,"isJsonText":true}''\n      ur_transformations: ''{"isSqlDomainZodDescrMeta":true,"isJsonText":true}''\n      elaboration: ''{"isSqlDomainZodDescrMeta":true,"isJsonText":true}''\n      activity_log: ''{"isSqlDomainZodDescrMeta":true,"isJsonSqlDomain":true}''\n    tableComment: >-\n      Contains entries related to task content ingestion paths. On multiple\n      executions,\n\n      unlike uniform_resource, ur_ingest_session_task rows are always inserted\n      and\n\n      references the uniform_resource primary key of its related content.\n\n      This method allows for a more efficient query of file version differences\n      across\n\n      sessions. With SQL queries, you can detect which sessions have a file\n      added or modified,\n\n      which sessions have a file deleted, and what the differences are in file\n      contents\n\n      if they were modified across sessions.\n','\n',char(10)),'yml',10187,'2023-12-04 02:56:03.889340016 UTC',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFFG4WM9R5NATPEJFMTSPF','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/ULID.md','d4733c4c20922e3dbbd73041d52ac5dbd783190e',replace('## ULID Primary Keys across multiple devices\n\nThe ULID (Universally Unique Lexicographically Sortable Identifier) is designed\nto generate unique identifiers across distributed systems without coordination.\nLet''s break down its structure to understand the likelihood of conflicts.\n\nA ULID consists of:\n\n1. A 48-bit timestamp, which gives millisecond precision for about 138 years.\n2. A 80-bit random component, which is generated randomly for each ID.\n\nGiven the design, there are two primary scenarios where a conflict might arise:\n\n1. **Timestamp Collision**: If two or more ULIDs are generated at the exact same\n   millisecond on different machines, then the uniqueness of the ULID is purely\n   dependent on the randomness of the second component.\n2. **Randomness Collision**: Even if the timestamp differs, if the random\n   component generated is the same for two ULIDs (which is astronomically\n   unlikely), there will be a conflict.\n\nNow, let''s consider the probability of each scenario:\n\n1. **Timestamp Collision**: If you''re generating millions of ULIDs in a short\n   span of time, it''s quite likely that you''ll have multiple ULIDs with the same\n   timestamp. This isn''t a problem by itself, but it means the uniqueness then\n   rests on the random component.\n2. **Randomness Collision**: The random component of a ULID is 80 bits. This\n   means there are \(2^{80}\) or approximately \(1.2 x 10^{24}\) possible\n   values. If you generate millions (let''s say one million for simplicity), the\n   chance of any two having the same random value is tiny. Using the birthday\n   paradox as a rough estimation, even after generating billions of ULIDs, the\n   probability of a conflict in the random component remains astronomically low.\n\nIf you generate millions of ULIDs across multiple machines, the chances of a\ncollision are extremely low due to the large randomness space of the 80-bit\nrandom component. The design of the ULID ensures that even in high-throughput\ndistributed systems, conflicts should be virtually non-existent. As always with\nsuch systems, monitoring and conflict resolution strategies are still good\npractices, but the inherent risks are minimal.\n','\n',char(10)),'md',2169,'2023-11-20 13:14:28.082236690 UTC',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFFG4XEH9AWKNH9G0SWS9C','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/schema.json','6afe9c96522e2bb935f3b9cc49627a6e7027ed85',replace('{"name":"Resource Surveillance State Schema","desc":"","tables":[{"name":"device","type":"table","comment":"Identity, network segmentation, and sysinfo for devices on which uniform_resource are found","columns":[{"name":"device_id","type":"VARCHAR","nullable":false,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isVarChar\":true}"},{"name":"name","type":"TEXT","nullable":false,"default":null,"comment":"unique device identifier (defaults to hostname)"},{"name":"state","type":"TEXT","nullable":false,"default":null,"comment":"should be \"SINGLETON\" if only one state is allowed, or other tags if multiple states are allowed"},{"name":"boundary","type":"TEXT","nullable":false,"default":null,"comment":"can be IP address, VLAN, or any other device name differentiator"},{"name":"segmentation","type":"TEXT","nullable":true,"default":null,"comment":"zero trust or other network segmentation"},{"name":"state_sysinfo","type":"TEXT","nullable":true,"default":null,"comment":"any sysinfo or other state data that is specific to this device (mutable)"},{"name":"elaboration","type":"TEXT","nullable":true,"default":null,"comment":"any elaboration needed for the device (mutable)"},{"name":"created_at","type":"TIMESTAMP","nullable":true,"default":"CURRENT_TIMESTAMP","comment":""},{"name":"created_by","type":"TEXT","nullable":true,"default":"''UNKNOWN''","comment":""},{"name":"updated_at","type":"TIMESTAMP","nullable":true,"default":null,"comment":""},{"name":"updated_by","type":"TEXT","nullable":true,"default":null,"comment":""},{"name":"deleted_at","type":"TIMESTAMP","nullable":true,"default":null,"comment":""},{"name":"deleted_by","type":"TEXT","nullable":true,"default":null,"comment":""},{"name":"activity_log","type":"TEXT","nullable":true,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isJsonSqlDomain\":true}"}],"indexes":[{"name":"idx_device__name__state","def":"CREATE INDEX \"idx_device__name__state\" ON \"device\"(\"name\", \"state\")","table":"device","columns":["name","state"],"comment":""},{"name":"sqlite_autoindex_device_2","def":"UNIQUE (name, state, boundary)","table":"device","columns":["name","state","boundary"],"comment":""},{"name":"sqlite_autoindex_device_1","def":"PRIMARY KEY (device_id)","table":"device","columns":["device_id"],"comment":""}],"constraints":[{"name":"device_id","type":"PRIMARY KEY","def":"PRIMARY KEY (device_id)","table":"device","referenced_table":null,"columns":["device_id"],"referenced_columns":null,"comment":""},{"name":"sqlite_autoindex_device_2","type":"UNIQUE","def":"UNIQUE (name, state, boundary)","table":"device","referenced_table":null,"columns":["name","state","boundary"],"referenced_columns":null,"comment":""},{"name":"sqlite_autoindex_device_1","type":"PRIMARY KEY","def":"PRIMARY KEY (device_id)","table":"device","referenced_table":null,"columns":["device_id"],"referenced_columns":null,"comment":""},{"name":"-","type":"CHECK","def":"CHECK(json_valid(state))","table":"device","referenced_table":null,"columns":["state"],"referenced_columns":null,"comment":""},{"name":"-","type":"CHECK","def":"CHECK(json_valid(segmentation) OR segmentation IS NULL)","table":"device","referenced_table":null,"columns":["segmentation"],"referenced_columns":null,"comment":""},{"name":"-","type":"CHECK","def":"CHECK(json_valid(state_sysinfo) OR state_sysinfo IS NULL)","table":"device","referenced_table":null,"columns":["state","state_sysinfo"],"referenced_columns":null,"comment":""},{"name":"-","type":"CHECK","def":"CHECK(json_valid(elaboration) OR elaboration IS NULL)","table":"device","referenced_table":null,"columns":["elaboration"],"referenced_columns":null,"comment":""}],"triggers":[],"def":"CREATE TABLE \"device\" (\n    \"device_id\" VARCHAR PRIMARY KEY NOT NULL,\n    \"name\" TEXT NOT NULL,\n    \"state\" TEXT CHECK(json_valid(state)) NOT NULL,\n    \"boundary\" TEXT NOT NULL,\n    \"segmentation\" TEXT CHECK(json_valid(segmentation) OR segmentation IS NULL),\n    \"state_sysinfo\" TEXT CHECK(json_valid(state_sysinfo) OR state_sysinfo IS NULL),\n    \"elaboration\" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"created_by\" TEXT DEFAULT ''UNKNOWN'',\n    \"updated_at\" TIMESTAMP,\n    \"updated_by\" TEXT,\n    \"deleted_at\" TIMESTAMP,\n    \"deleted_by\" TEXT,\n    \"activity_log\" TEXT,\n    UNIQUE(\"name\", \"state\", \"boundary\")\n)"},{"name":"behavior","type":"table","comment":"Behaviors are configuration \"presets\" that can be used to drive\napplication operations at runtime. For example, ingest behaviors\ninclude configs that indicate which files to ignore, which to\nscan, when to load content, etc. This is more convenient than\ncreating\n\nbehavior has a foreign key reference to the device table since\nbehaviors might be device-specific.","columns":[{"name":"behavior_id","type":"VARCHAR","nullable":false,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isVarChar\":true}"},{"name":"device_id","type":"VARCHAR","nullable":false,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isVarChar\":true}"},{"name":"behavior_name","type":"TEXT","nullable":false,"default":null,"comment":"Arbitrary but unique per-device behavior name (e.g. ingest::xyz)"},{"name":"behavior_conf_json","type":"TEXT","nullable":false,"default":null,"comment":"Configuration, settings, parameters, etc. describing the behavior (JSON, behavior-dependent)"},{"name":"assurance_schema_id","type":"VARCHAR","nullable":true,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isVarChar\":true}"},{"name":"governance","type":"TEXT","nullable":true,"default":null,"comment":"Descriptions or other \"governance\" details (JSON, behavior-dependent)"},{"name":"created_at","type":"TIMESTAMP","nullable":true,"default":"CURRENT_TIMESTAMP","comment":""},{"name":"created_by","type":"TEXT","nullable":true,"default":"''UNKNOWN''","comment":""},{"name":"updated_at","type":"TIMESTAMP","nullable":true,"default":null,"comment":""},{"name":"updated_by","type":"TEXT","nullable":true,"default":null,"comment":""},{"name":"deleted_at","type":"TIMESTAMP","nullable":true,"default":null,"comment":""},{"name":"deleted_by","type":"TEXT","nullable":true,"default":null,"comment":""},{"name":"activity_log","type":"TEXT","nullable":true,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isJsonSqlDomain\":true}"}],"indexes":[{"name":"sqlite_autoindex_behavior_2","def":"UNIQUE (device_id, behavior_name)","table":"behavior","columns":["device_id","behavior_name"],"comment":""},{"name":"sqlite_autoindex_behavior_1","def":"PRIMARY KEY (behavior_id)","table":"behavior","columns":["behavior_id"],"comment":""}],"constraints":[{"name":"behavior_id","type":"PRIMARY KEY","def":"PRIMARY KEY (behavior_id)","table":"behavior","referenced_table":null,"columns":["behavior_id"],"referenced_columns":null,"comment":""},{"name":"- (Foreign key ID: 0)","type":"FOREIGN KEY","def":"FOREIGN KEY (assurance_schema_id) REFERENCES assurance_schema (assurance_schema_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE","table":"behavior","referenced_table":"assurance_schema","columns":["assurance_schema_id"],"referenced_columns":["assurance_schema_id"],"comment":""},{"name":"- (Foreign key ID: 1)","type":"FOREIGN KEY","def":"FOREIGN KEY (device_id) REFERENCES device (device_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE","table":"behavior","referenced_table":"device","columns":["device_id"],"referenced_columns":["device_id"],"comment":""},{"name":"sqlite_autoindex_behavior_2","type":"UNIQUE","def":"UNIQUE (device_id, behavior_name)","table":"behavior","referenced_table":null,"columns":["device_id","behavior_name"],"referenced_columns":null,"comment":""},{"name":"sqlite_autoindex_behavior_1","type":"PRIMARY KEY","def":"PRIMARY KEY (behavior_id)","table":"behavior","referenced_table":null,"columns":["behavior_id"],"referenced_columns":null,"comment":""},{"name":"-","type":"CHECK","def":"CHECK(json_valid(behavior_conf_json))","table":"behavior","referenced_table":null,"columns":["behavior_conf_json"],"referenced_columns":null,"comment":""},{"name":"-","type":"CHECK","def":"CHECK(json_valid(governance) OR governance IS NULL)","table":"behavior","referenced_table":null,"columns":["governance"],"referenced_columns":null,"comment":""}],"triggers":[],"def":"CREATE TABLE \"behavior\" (\n    \"behavior_id\" VARCHAR PRIMARY KEY NOT NULL,\n    \"device_id\" VARCHAR NOT NULL,\n    \"behavior_name\" TEXT NOT NULL,\n    \"behavior_conf_json\" TEXT CHECK(json_valid(behavior_conf_json)) NOT NULL,\n    \"assurance_schema_id\" VARCHAR,\n    \"governance\" TEXT CHECK(json_valid(governance) OR governance IS NULL),\n    \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"created_by\" TEXT DEFAULT ''UNKNOWN'',\n    \"updated_at\" TIMESTAMP,\n    \"updated_by\" TEXT,\n    \"deleted_at\" TIMESTAMP,\n    \"deleted_by\" TEXT,\n    \"activity_log\" TEXT,\n    FOREIGN KEY(\"device_id\") REFERENCES \"device\"(\"device_id\"),\n    FOREIGN KEY(\"assurance_schema_id\") REFERENCES \"assurance_schema\"(\"assurance_schema_id\"),\n    UNIQUE(\"device_id\", \"behavior_name\")\n)"},{"name":"ur_ingest_resource_path_match_rule","type":"table","comment":"A regular expression can determine the flags to apply to an ingestion path\nand if the regular expr contains a nature capture group that pattern match\nwill assign the nature too.","columns":[{"name":"ur_ingest_resource_path_match_rule_id","type":"VARCHAR","nullable":false,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isVarChar\":true}"},{"name":"namespace","type":"TEXT","nullable":false,"default":null,"comment":""},{"name":"regex","type":"TEXT","nullable":false,"default":null,"comment":""},{"name":"flags","type":"TEXT","nullable":false,"default":null,"comment":""},{"name":"nature_regex_capture","type":"TEXT","nullable":true,"default":null,"comment":""},{"name":"description","type":"TEXT","nullable":true,"default":null,"comment":""},{"name":"created_at","type":"TIMESTAMP","nullable":true,"default":"CURRENT_TIMESTAMP","comment":""},{"name":"created_by","type":"TEXT","nullable":true,"default":"''UNKNOWN''","comment":""},{"name":"updated_at","type":"TIMESTAMP","nullable":true,"default":null,"comment":""},{"name":"updated_by","type":"TEXT","nullable":true,"default":null,"comment":""},{"name":"deleted_at","type":"TIMESTAMP","nullable":true,"default":null,"comment":""},{"name":"deleted_by","type":"TEXT","nullable":true,"default":null,"comment":""},{"name":"activity_log","type":"TEXT","nullable":true,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isJsonSqlDomain\":true}"}],"indexes":[{"name":"sqlite_autoindex_ur_ingest_resource_path_match_rule_2","def":"UNIQUE (namespace, regex)","table":"ur_ingest_resource_path_match_rule","columns":["namespace","regex"],"comment":""},{"name":"sqlite_autoindex_ur_ingest_resource_path_match_rule_1","def":"PRIMARY KEY (ur_ingest_resource_path_match_rule_id)","table":"ur_ingest_resource_path_match_rule","columns":["ur_ingest_resource_path_match_rule_id"],"comment":""}],"constraints":[{"name":"ur_ingest_resource_path_match_rule_id","type":"PRIMARY KEY","def":"PRIMARY KEY (ur_ingest_resource_path_match_rule_id)","table":"ur_ingest_resource_path_match_rule","referenced_table":null,"columns":["ur_ingest_resource_path_match_rule_id"],"referenced_columns":null,"comment":""},{"name":"sqlite_autoindex_ur_ingest_resource_path_match_rule_2","type":"UNIQUE","def":"UNIQUE (namespace, regex)","table":"ur_ingest_resource_path_match_rule","referenced_table":null,"columns":["namespace","regex"],"referenced_columns":null,"comment":""},{"name":"sqlite_autoindex_ur_ingest_resource_path_match_rule_1","type":"PRIMARY KEY","def":"PRIMARY KEY (ur_ingest_resource_path_match_rule_id)","table":"ur_ingest_resource_path_match_rule","referenced_table":null,"columns":["ur_ingest_resource_path_match_rule_id"],"referenced_columns":null,"comment":""}],"triggers":[],"def":"CREATE TABLE \"ur_ingest_resource_path_match_rule\" (\n    \"ur_ingest_resource_path_match_rule_id\" VARCHAR PRIMARY KEY NOT NULL,\n    \"namespace\" TEXT NOT NULL,\n    \"regex\" TEXT NOT NULL,\n    \"flags\" TEXT NOT NULL,\n    \"nature_regex_capture\" TEXT,\n    \"description\" TEXT,\n    \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"created_by\" TEXT DEFAULT ''UNKNOWN'',\n    \"updated_at\" TIMESTAMP,\n    \"updated_by\" TEXT,\n    \"deleted_at\" TIMESTAMP,\n    \"deleted_by\" TEXT,\n    \"activity_log\" TEXT,\n    UNIQUE(\"namespace\", \"regex\")\n)"},{"name":"ur_ingest_resource_path_rewrite_rule","type":"table","comment":"A regular expression can determine the flags to apply to an ingestion path\nand if the regular expr contains a nature capture group that pattern match\nwill assign the nature too.","columns":[{"name":"ur_ingest_resource_path_rewrite_rule_id","type":"VARCHAR","nullable":false,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isVarChar\":true}"},{"name":"namespace","type":"TEXT","nullable":false,"default":null,"comment":""},{"name":"regex","type":"TEXT","nullable":false,"default":null,"comment":""},{"name":"replace","type":"TEXT","nullable":false,"default":null,"comment":""},{"name":"description","type":"TEXT","nullable":true,"default":null,"comment":""},{"name":"created_at","type":"TIMESTAMP","nullable":true,"default":"CURRENT_TIMESTAMP","comment":""},{"name":"created_by","type":"TEXT","nullable":true,"default":"''UNKNOWN''","comment":""},{"name":"updated_at","type":"TIMESTAMP","nullable":true,"default":null,"comment":""},{"name":"updated_by","type":"TEXT","nullable":true,"default":null,"comment":""},{"name":"deleted_at","type":"TIMESTAMP","nullable":true,"default":null,"comment":""},{"name":"deleted_by","type":"TEXT","nullable":true,"default":null,"comment":""},{"name":"activity_log","type":"TEXT","nullable":true,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isJsonSqlDomain\":true}"}],"indexes":[{"name":"sqlite_autoindex_ur_ingest_resource_path_rewrite_rule_2","def":"UNIQUE (namespace, regex, replace)","table":"ur_ingest_resource_path_rewrite_rule","columns":["namespace","regex","replace"],"comment":""},{"name":"sqlite_autoindex_ur_ingest_resource_path_rewrite_rule_1","def":"PRIMARY KEY (ur_ingest_resource_path_rewrite_rule_id)","table":"ur_ingest_resource_path_rewrite_rule","columns":["ur_ingest_resource_path_rewrite_rule_id"],"comment":""}],"constraints":[{"name":"ur_ingest_resource_path_rewrite_rule_id","type":"PRIMARY KEY","def":"PRIMARY KEY (ur_ingest_resource_path_rewrite_rule_id)","table":"ur_ingest_resource_path_rewrite_rule","referenced_table":null,"columns":["ur_ingest_resource_path_rewrite_rule_id"],"referenced_columns":null,"comment":""},{"name":"sqlite_autoindex_ur_ingest_resource_path_rewrite_rule_2","type":"UNIQUE","def":"UNIQUE (namespace, regex, replace)","table":"ur_ingest_resource_path_rewrite_rule","referenced_table":null,"columns":["namespace","regex","replace"],"referenced_columns":null,"comment":""},{"name":"sqlite_autoindex_ur_ingest_resource_path_rewrite_rule_1","type":"PRIMARY KEY","def":"PRIMARY KEY (ur_ingest_resource_path_rewrite_rule_id)","table":"ur_ingest_resource_path_rewrite_rule","referenced_table":null,"columns":["ur_ingest_resource_path_rewrite_rule_id"],"referenced_columns":null,"comment":""}],"triggers":[],"def":"CREATE TABLE \"ur_ingest_resource_path_rewrite_rule\" (\n    \"ur_ingest_resource_path_rewrite_rule_id\" VARCHAR PRIMARY KEY NOT NULL,\n    \"namespace\" TEXT NOT NULL,\n    \"regex\" TEXT NOT NULL,\n    \"replace\" TEXT NOT NULL,\n    \"description\" TEXT,\n    \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"created_by\" TEXT DEFAULT ''UNKNOWN'',\n    \"updated_at\" TIMESTAMP,\n    \"updated_by\" TEXT,\n    \"deleted_at\" TIMESTAMP,\n    \"deleted_by\" TEXT,\n    \"activity_log\" TEXT,\n    UNIQUE(\"namespace\", \"regex\", \"replace\")\n)"},{"name":"ur_ingest_session","type":"table","comment":"Immutable ingestion sessions represents any \"discovery\" or \"walk\" operation.  This could be a device file system scan or any other resource discovery  session. Each time a discovery operation starts, a record is created.  ur_ingest_session has a foreign key reference to the device table so that the  same device can be used for multiple ingest sessions but also the ingest  sessions can be merged across workstations / servers for easier detection  of changes and similaries between file systems on different devices.","columns":[{"name":"ur_ingest_session_id","type":"VARCHAR","nullable":false,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isVarChar\":true}"},{"name":"device_id","type":"VARCHAR","nullable":false,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isVarChar\":true}"},{"name":"behavior_id","type":"VARCHAR","nullable":true,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isVarChar\":true}"},{"name":"behavior_json","type":"TEXT","nullable":true,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isJsonText\":true}"},{"name":"ingest_started_at","type":"TIMESTAMP","nullable":false,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isDateSqlDomain\":true,\"isDateTime\":true}"},{"name":"ingest_finished_at","type":"TIMESTAMP","nullable":true,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isDateSqlDomain\":true,\"isDateTime\":true}"},{"name":"elaboration","type":"TEXT","nullable":true,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isJsonText\":true}"},{"name":"created_at","type":"TIMESTAMP","nullable":true,"default":"CURRENT_TIMESTAMP","comment":""},{"name":"created_by","type":"TEXT","nullable":true,"default":"''UNKNOWN''","comment":""},{"name":"updated_at","type":"TIMESTAMP","nullable":true,"default":null,"comment":""},{"name":"updated_by","type":"TEXT","nullable":true,"default":null,"comment":""},{"name":"deleted_at","type":"TIMESTAMP","nullable":true,"default":null,"comment":""},{"name":"deleted_by","type":"TEXT","nullable":true,"default":null,"comment":""},{"name":"activity_log","type":"TEXT","nullable":true,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isJsonSqlDomain\":true}"}],"indexes":[{"name":"sqlite_autoindex_ur_ingest_session_2","def":"UNIQUE (device_id, created_at)","table":"ur_ingest_session","columns":["device_id","created_at"],"comment":""},{"name":"sqlite_autoindex_ur_ingest_session_1","def":"PRIMARY KEY (ur_ingest_session_id)","table":"ur_ingest_session","columns":["ur_ingest_session_id"],"comment":""}],"constraints":[{"name":"ur_ingest_session_id","type":"PRIMARY KEY","def":"PRIMARY KEY (ur_ingest_session_id)","table":"ur_ingest_session","referenced_table":null,"columns":["ur_ingest_session_id"],"referenced_columns":null,"comment":""},{"name":"- (Foreign key ID: 0)","type":"FOREIGN KEY","def":"FOREIGN KEY (behavior_id) REFERENCES behavior (behavior_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE","table":"ur_ingest_session","referenced_table":"behavior","columns":["behavior_id"],"referenced_columns":["behavior_id"],"comment":""},{"name":"- (Foreign key ID: 1)","type":"FOREIGN KEY","def":"FOREIGN KEY (device_id) REFERENCES device (device_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE","table":"ur_ingest_session","referenced_table":"device","columns":["device_id"],"referenced_columns":["device_id"],"comment":""},{"name":"sqlite_autoindex_ur_ingest_session_2","type":"UNIQUE","def":"UNIQUE (device_id, created_at)","table":"ur_ingest_session","referenced_table":null,"columns":["device_id","created_at"],"referenced_columns":null,"comment":""},{"name":"sqlite_autoindex_ur_ingest_session_1","type":"PRIMARY KEY","def":"PRIMARY KEY (ur_ingest_session_id)","table":"ur_ingest_session","referenced_table":null,"columns":["ur_ingest_session_id"],"referenced_columns":null,"comment":""},{"name":"-","type":"CHECK","def":"CHECK(json_valid(behavior_json) OR behavior_json IS NULL)","table":"ur_ingest_session","referenced_table":null,"columns":["behavior_json"],"referenced_columns":null,"comment":""},{"name":"-","type":"CHECK","def":"CHECK(json_valid(elaboration) OR elaboration IS NULL)","table":"ur_ingest_session","referenced_table":null,"columns":["elaboration"],"referenced_columns":null,"comment":""}],"triggers":[],"def":"CREATE TABLE \"ur_ingest_session\" (\n    \"ur_ingest_session_id\" VARCHAR PRIMARY KEY NOT NULL,\n    \"device_id\" VARCHAR NOT NULL,\n    \"behavior_id\" VARCHAR,\n    \"behavior_json\" TEXT CHECK(json_valid(behavior_json) OR behavior_json IS NULL),\n    \"ingest_started_at\" TIMESTAMP NOT NULL,\n    \"ingest_finished_at\" TIMESTAMP,\n    \"elaboration\" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"created_by\" TEXT DEFAULT ''UNKNOWN'',\n    \"updated_at\" TIMESTAMP,\n    \"updated_by\" TEXT,\n    \"deleted_at\" TIMESTAMP,\n    \"deleted_by\" TEXT,\n    \"activity_log\" TEXT,\n    FOREIGN KEY(\"device_id\") REFERENCES \"device\"(\"device_id\"),\n    FOREIGN KEY(\"behavior_id\") REFERENCES \"behavior\"(\"behavior_id\"),\n    UNIQUE(\"device_id\", \"created_at\")\n)"},{"name":"ur_ingest_session_fs_path","type":"table","comment":"Immutable ingest session file system path represents a discovery or \"walk\" path. If  the session included a file system scan, then root_path is the  root file system path that was scanned. If the session was discovering  resources in another target then root_path would be  representative of the target path (could be a URI).","columns":[{"name":"ur_ingest_session_fs_path_id","type":"VARCHAR","nullable":false,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isVarChar\":true}"},{"name":"ingest_session_id","type":"VARCHAR","nullable":false,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isVarChar\":true}"},{"name":"root_path","type":"TEXT","nullable":false,"default":null,"comment":""},{"name":"elaboration","type":"TEXT","nullable":true,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isJsonText\":true}"},{"name":"created_at","type":"TIMESTAMP","nullable":true,"default":"CURRENT_TIMESTAMP","comment":""},{"name":"created_by","type":"TEXT","nullable":true,"default":"''UNKNOWN''","comment":""},{"name":"updated_at","type":"TIMESTAMP","nullable":true,"default":null,"comment":""},{"name":"updated_by","type":"TEXT","nullable":true,"default":null,"comment":""},{"name":"deleted_at","type":"TIMESTAMP","nullable":true,"default":null,"comment":""},{"name":"deleted_by","type":"TEXT","nullable":true,"default":null,"comment":""},{"name":"activity_log","type":"TEXT","nullable":true,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isJsonSqlDomain\":true}"}],"indexes":[{"name":"idx_ur_ingest_session_fs_path__ingest_session_id__root_path","def":"CREATE INDEX \"idx_ur_ingest_session_fs_path__ingest_session_id__root_path\" ON \"ur_ingest_session_fs_path\"(\"ingest_session_id\", \"root_path\")","table":"ur_ingest_session_fs_path","columns":["ingest_session_id","root_path"],"comment":""},{"name":"sqlite_autoindex_ur_ingest_session_fs_path_2","def":"UNIQUE (ingest_session_id, root_path, created_at)","table":"ur_ingest_session_fs_path","columns":["ingest_session_id","root_path","created_at"],"comment":""},{"name":"sqlite_autoindex_ur_ingest_session_fs_path_1","def":"PRIMARY KEY (ur_ingest_session_fs_path_id)","table":"ur_ingest_session_fs_path","columns":["ur_ingest_session_fs_path_id"],"comment":""}],"constraints":[{"name":"ur_ingest_session_fs_path_id","type":"PRIMARY KEY","def":"PRIMARY KEY (ur_ingest_session_fs_path_id)","table":"ur_ingest_session_fs_path","referenced_table":null,"columns":["ur_ingest_session_fs_path_id"],"referenced_columns":null,"comment":""},{"name":"- (Foreign key ID: 0)","type":"FOREIGN KEY","def":"FOREIGN KEY (ingest_session_id) REFERENCES ur_ingest_session (ur_ingest_session_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE","table":"ur_ingest_session_fs_path","referenced_table":"ur_ingest_session","columns":["ingest_session_id"],"referenced_columns":["ur_ingest_session_id"],"comment":""},{"name":"sqlite_autoindex_ur_ingest_session_fs_path_2","type":"UNIQUE","def":"UNIQUE (ingest_session_id, root_path, created_at)","table":"ur_ingest_session_fs_path","referenced_table":null,"columns":["ingest_session_id","root_path","created_at"],"referenced_columns":null,"comment":""},{"name":"sqlite_autoindex_ur_ingest_session_fs_path_1","type":"PRIMARY KEY","def":"PRIMARY KEY (ur_ingest_session_fs_path_id)","table":"ur_ingest_session_fs_path","referenced_table":null,"columns":["ur_ingest_session_fs_path_id"],"referenced_columns":null,"comment":""},{"name":"-","type":"CHECK","def":"CHECK(json_valid(elaboration) OR elaboration IS NULL)","table":"ur_ingest_session_fs_path","referenced_table":null,"columns":["elaboration"],"referenced_columns":null,"comment":""}],"triggers":[],"def":"CREATE TABLE \"ur_ingest_session_fs_path\" (\n    \"ur_ingest_session_fs_path_id\" VARCHAR PRIMARY KEY NOT NULL,\n    \"ingest_session_id\" VARCHAR NOT NULL,\n    \"root_path\" TEXT NOT NULL,\n    \"elaboration\" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"created_by\" TEXT DEFAULT ''UNKNOWN'',\n    \"updated_at\" TIMESTAMP,\n    \"updated_by\" TEXT,\n    \"deleted_at\" TIMESTAMP,\n    \"deleted_by\" TEXT,\n    \"activity_log\" TEXT,\n    FOREIGN KEY(\"ingest_session_id\") REFERENCES \"ur_ingest_session\"(\"ur_ingest_session_id\"),\n    UNIQUE(\"ingest_session_id\", \"root_path\", \"created_at\")\n)"},{"name":"uniform_resource","type":"table","comment":"Immutable resource and content information. On multiple executions,\nuniform_resource are inserted only if the the content (see unique\nindex for details). For historical logging, uniform_resource has foreign\nkey references to both ur_ingest_session and ur_ingest_session_fs_path\ntables to indicate which particular session and ingestion path the\nresourced was inserted during.","columns":[{"name":"uniform_resource_id","type":"VARCHAR","nullable":false,"default":null,"comment":"uniform_resource ULID primary key"},{"name":"device_id","type":"VARCHAR","nullable":false,"default":null,"comment":"which device row introduced this resource"},{"name":"ingest_session_id","type":"VARCHAR","nullable":false,"default":null,"comment":"which ur_ingest_session row introduced this resource"},{"name":"ingest_fs_path_id","type":"VARCHAR","nullable":true,"default":null,"comment":"which ur_ingest_session_fs_path row introduced this resource"},{"name":"uri","type":"TEXT","nullable":false,"default":null,"comment":"the resource''s URI (dependent on how it was acquired and on which device)"},{"name":"content_digest","type":"TEXT","nullable":false,"default":null,"comment":"''-'' when no hash was computed (not NULL); content_digest for symlinks will be the same as their target"},{"name":"content","type":"BLOB","nullable":true,"default":null,"comment":"either NULL if no content was acquired or the actual blob/text of the content"},{"name":"nature","type":"TEXT","nullable":true,"default":null,"comment":"file extension or MIME"},{"name":"size_bytes","type":"INTEGER","nullable":true,"default":null,"comment":""},{"name":"last_modified_at","type":"TIMESTAMP","nullable":true,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isDateSqlDomain\":true,\"isDateTime\":true}"},{"name":"content_fm_body_attrs","type":"TEXT","nullable":true,"default":null,"comment":"each component of frontmatter-based content ({ frontMatter: '''', body: '''', attrs: {...} })"},{"name":"frontmatter","type":"TEXT","nullable":true,"default":null,"comment":"meta data or other \"frontmatter\" in JSON format"},{"name":"elaboration","type":"TEXT","nullable":true,"default":null,"comment":"anything that doesn''t fit in other columns (JSON)"},{"name":"created_at","type":"TIMESTAMP","nullable":true,"default":"CURRENT_TIMESTAMP","comment":""},{"name":"created_by","type":"TEXT","nullable":true,"default":"''UNKNOWN''","comment":""},{"name":"updated_at","type":"TIMESTAMP","nullable":true,"default":null,"comment":""},{"name":"updated_by","type":"TEXT","nullable":true,"default":null,"comment":""},{"name":"deleted_at","type":"TIMESTAMP","nullable":true,"default":null,"comment":""},{"name":"deleted_by","type":"TEXT","nullable":true,"default":null,"comment":""},{"name":"activity_log","type":"TEXT","nullable":true,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isJsonSqlDomain\":true}"}],"indexes":[{"name":"idx_uniform_resource__device_id__uri","def":"CREATE INDEX \"idx_uniform_resource__device_id__uri\" ON \"uniform_resource\"(\"device_id\", \"uri\")","table":"uniform_resource","columns":["device_id","uri"],"comment":""},{"name":"sqlite_autoindex_uniform_resource_2","def":"UNIQUE (device_id, content_digest, uri, size_bytes, last_modified_at)","table":"uniform_resource","columns":["device_id","content_digest","uri","size_bytes","last_modified_at"],"comment":""},{"name":"sqlite_autoindex_uniform_resource_1","def":"PRIMARY KEY (uniform_resource_id)","table":"uniform_resource","columns":["uniform_resource_id"],"comment":""}],"constraints":[{"name":"uniform_resource_id","type":"PRIMARY KEY","def":"PRIMARY KEY (uniform_resource_id)","table":"uniform_resource","referenced_table":null,"columns":["uniform_resource_id"],"referenced_columns":null,"comment":""},{"name":"- (Foreign key ID: 0)","type":"FOREIGN KEY","def":"FOREIGN KEY (ingest_fs_path_id) REFERENCES ur_ingest_session_fs_path (ur_ingest_session_fs_path_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE","table":"uniform_resource","referenced_table":"ur_ingest_session_fs_path","columns":["ingest_fs_path_id"],"referenced_columns":["ur_ingest_session_fs_path_id"],"comment":""},{"name":"- (Foreign key ID: 1)","type":"FOREIGN KEY","def":"FOREIGN KEY (ingest_session_id) REFERENCES ur_ingest_session (ur_ingest_session_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE","table":"uniform_resource","referenced_table":"ur_ingest_session","columns":["ingest_session_id"],"referenced_columns":["ur_ingest_session_id"],"comment":""},{"name":"- (Foreign key ID: 2)","type":"FOREIGN KEY","def":"FOREIGN KEY (device_id) REFERENCES device (device_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE","table":"uniform_resource","referenced_table":"device","columns":["device_id"],"referenced_columns":["device_id"],"comment":""},{"name":"sqlite_autoindex_uniform_resource_2","type":"UNIQUE","def":"UNIQUE (device_id, content_digest, uri, size_bytes, last_modified_at)","table":"uniform_resource","referenced_table":null,"columns":["device_id","content_digest","uri","size_bytes","last_modified_at"],"referenced_columns":null,"comment":""},{"name":"sqlite_autoindex_uniform_resource_1","type":"PRIMARY KEY","def":"PRIMARY KEY (uniform_resource_id)","table":"uniform_resource","referenced_table":null,"columns":["uniform_resource_id"],"referenced_columns":null,"comment":""},{"name":"-","type":"CHECK","def":"CHECK(json_valid(content_fm_body_attrs) OR content_fm_body_attrs IS NULL)","table":"uniform_resource","referenced_table":null,"columns":["content","content_fm_body_attrs"],"referenced_columns":null,"comment":""},{"name":"-","type":"CHECK","def":"CHECK(json_valid(frontmatter) OR frontmatter IS NULL)","table":"uniform_resource","referenced_table":null,"columns":["frontmatter"],"referenced_columns":null,"comment":""},{"name":"-","type":"CHECK","def":"CHECK(json_valid(elaboration) OR elaboration IS NULL)","table":"uniform_resource","referenced_table":null,"columns":["elaboration"],"referenced_columns":null,"comment":""}],"triggers":[],"def":"CREATE TABLE \"uniform_resource\" (\n    \"uniform_resource_id\" VARCHAR PRIMARY KEY NOT NULL,\n    \"device_id\" VARCHAR NOT NULL,\n    \"ingest_session_id\" VARCHAR NOT NULL,\n    \"ingest_fs_path_id\" VARCHAR,\n    \"uri\" TEXT NOT NULL,\n    \"content_digest\" TEXT NOT NULL,\n    \"content\" BLOB,\n    \"nature\" TEXT,\n    \"size_bytes\" INTEGER,\n    \"last_modified_at\" TIMESTAMP,\n    \"content_fm_body_attrs\" TEXT CHECK(json_valid(content_fm_body_attrs) OR content_fm_body_attrs IS NULL),\n    \"frontmatter\" TEXT CHECK(json_valid(frontmatter) OR frontmatter IS NULL),\n    \"elaboration\" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"created_by\" TEXT DEFAULT ''UNKNOWN'',\n    \"updated_at\" TIMESTAMP,\n    \"updated_by\" TEXT,\n    \"deleted_at\" TIMESTAMP,\n    \"deleted_by\" TEXT,\n    \"activity_log\" TEXT,\n    FOREIGN KEY(\"device_id\") REFERENCES \"device\"(\"device_id\"),\n    FOREIGN KEY(\"ingest_session_id\") REFERENCES \"ur_ingest_session\"(\"ur_ingest_session_id\"),\n    FOREIGN KEY(\"ingest_fs_path_id\") REFERENCES \"ur_ingest_session_fs_path\"(\"ur_ingest_session_fs_path_id\"),\n    UNIQUE(\"device_id\", \"content_digest\", \"uri\", \"size_bytes\", \"last_modified_at\")\n)"},{"name":"uniform_resource_transform","type":"table","comment":"uniform_resource transformed content","columns":[{"name":"uniform_resource_transform_id","type":"VARCHAR","nullable":false,"default":null,"comment":"uniform_resource_transform ULID primary key"},{"name":"uniform_resource_id","type":"VARCHAR","nullable":false,"default":null,"comment":"uniform_resource row ID of original content"},{"name":"uri","type":"TEXT","nullable":false,"default":null,"comment":""},{"name":"content_digest","type":"TEXT","nullable":false,"default":null,"comment":"transformed content hash"},{"name":"content","type":"BLOB","nullable":true,"default":null,"comment":"transformed content"},{"name":"nature","type":"TEXT","nullable":true,"default":null,"comment":"file extension or MIME"},{"name":"size_bytes","type":"INTEGER","nullable":true,"default":null,"comment":""},{"name":"elaboration","type":"TEXT","nullable":true,"default":null,"comment":"anything that doesn''t fit in other columns (JSON)"},{"name":"created_at","type":"TIMESTAMP","nullable":true,"default":"CURRENT_TIMESTAMP","comment":""},{"name":"created_by","type":"TEXT","nullable":true,"default":"''UNKNOWN''","comment":""},{"name":"updated_at","type":"TIMESTAMP","nullable":true,"default":null,"comment":""},{"name":"updated_by","type":"TEXT","nullable":true,"default":null,"comment":""},{"name":"deleted_at","type":"TIMESTAMP","nullable":true,"default":null,"comment":""},{"name":"deleted_by","type":"TEXT","nullable":true,"default":null,"comment":""},{"name":"activity_log","type":"TEXT","nullable":true,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isJsonSqlDomain\":true}"}],"indexes":[{"name":"idx_uniform_resource_transform__uniform_resource_id__content_digest","def":"CREATE INDEX \"idx_uniform_resource_transform__uniform_resource_id__content_digest\" ON \"uniform_resource_transform\"(\"uniform_resource_id\", \"content_digest\")","table":"uniform_resource_transform","columns":["uniform_resource_id","content_digest"],"comment":""},{"name":"sqlite_autoindex_uniform_resource_transform_2","def":"UNIQUE (uniform_resource_id, content_digest, nature, size_bytes)","table":"uniform_resource_transform","columns":["uniform_resource_id","content_digest","nature","size_bytes"],"comment":""},{"name":"sqlite_autoindex_uniform_resource_transform_1","def":"PRIMARY KEY (uniform_resource_transform_id)","table":"uniform_resource_transform","columns":["uniform_resource_transform_id"],"comment":""}],"constraints":[{"name":"uniform_resource_transform_id","type":"PRIMARY KEY","def":"PRIMARY KEY (uniform_resource_transform_id)","table":"uniform_resource_transform","referenced_table":null,"columns":["uniform_resource_transform_id"],"referenced_columns":null,"comment":""},{"name":"- (Foreign key ID: 0)","type":"FOREIGN KEY","def":"FOREIGN KEY (uniform_resource_id) REFERENCES uniform_resource (uniform_resource_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE","table":"uniform_resource_transform","referenced_table":"uniform_resource","columns":["uniform_resource_id"],"referenced_columns":["uniform_resource_id"],"comment":""},{"name":"sqlite_autoindex_uniform_resource_transform_2","type":"UNIQUE","def":"UNIQUE (uniform_resource_id, content_digest, nature, size_bytes)","table":"uniform_resource_transform","referenced_table":null,"columns":["uniform_resource_id","content_digest","nature","size_bytes"],"referenced_columns":null,"comment":""},{"name":"sqlite_autoindex_uniform_resource_transform_1","type":"PRIMARY KEY","def":"PRIMARY KEY (uniform_resource_transform_id)","table":"uniform_resource_transform","referenced_table":null,"columns":["uniform_resource_transform_id"],"referenced_columns":null,"comment":""},{"name":"-","type":"CHECK","def":"CHECK(json_valid(elaboration) OR elaboration IS NULL)","table":"uniform_resource_transform","referenced_table":null,"columns":["elaboration"],"referenced_columns":null,"comment":""}],"triggers":[],"def":"CREATE TABLE \"uniform_resource_transform\" (\n    \"uniform_resource_transform_id\" VARCHAR PRIMARY KEY NOT NULL,\n    \"uniform_resource_id\" VARCHAR NOT NULL,\n    \"uri\" TEXT NOT NULL,\n    \"content_digest\" TEXT NOT NULL,\n    \"content\" BLOB,\n    \"nature\" TEXT,\n    \"size_bytes\" INTEGER,\n    \"elaboration\" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"created_by\" TEXT DEFAULT ''UNKNOWN'',\n    \"updated_at\" TIMESTAMP,\n    \"updated_by\" TEXT,\n    \"deleted_at\" TIMESTAMP,\n    \"deleted_by\" TEXT,\n    \"activity_log\" TEXT,\n    FOREIGN KEY(\"uniform_resource_id\") REFERENCES \"uniform_resource\"(\"uniform_resource_id\"),\n    UNIQUE(\"uniform_resource_id\", \"content_digest\", \"nature\", \"size_bytes\")\n)"},{"name":"ur_ingest_session_fs_path_entry","type":"table","comment":"Contains entries related to file system content ingestion paths. On multiple executions,  unlike uniform_resource, ur_ingest_session_fs_path_entry rows are always inserted and  references the uniform_resource primary key of its related content.  This method allows for a more efficient query of file version differences across  sessions. With SQL queries, you can detect which sessions have a file added or modified,  which sessions have a file deleted, and what the differences are in file contents  if they were modified across sessions.","columns":[{"name":"ur_ingest_session_fs_path_entry_id","type":"VARCHAR","nullable":false,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isVarChar\":true}"},{"name":"ingest_session_id","type":"VARCHAR","nullable":false,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isVarChar\":true}"},{"name":"ingest_fs_path_id","type":"VARCHAR","nullable":false,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isVarChar\":true}"},{"name":"uniform_resource_id","type":"VARCHAR","nullable":true,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isVarChar\":true}"},{"name":"file_path_abs","type":"TEXT","nullable":false,"default":null,"comment":""},{"name":"file_path_rel_parent","type":"TEXT","nullable":false,"default":null,"comment":""},{"name":"file_path_rel","type":"TEXT","nullable":false,"default":null,"comment":""},{"name":"file_basename","type":"TEXT","nullable":false,"default":null,"comment":""},{"name":"file_extn","type":"TEXT","nullable":true,"default":null,"comment":""},{"name":"captured_executable","type":"TEXT","nullable":true,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isJsonText\":true}"},{"name":"ur_status","type":"TEXT","nullable":true,"default":null,"comment":""},{"name":"ur_diagnostics","type":"TEXT","nullable":true,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isJsonText\":true}"},{"name":"ur_transformations","type":"TEXT","nullable":true,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isJsonText\":true}"},{"name":"elaboration","type":"TEXT","nullable":true,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isJsonText\":true}"},{"name":"created_at","type":"TIMESTAMP","nullable":true,"default":"CURRENT_TIMESTAMP","comment":""},{"name":"created_by","type":"TEXT","nullable":true,"default":"''UNKNOWN''","comment":""},{"name":"updated_at","type":"TIMESTAMP","nullable":true,"default":null,"comment":""},{"name":"updated_by","type":"TEXT","nullable":true,"default":null,"comment":""},{"name":"deleted_at","type":"TIMESTAMP","nullable":true,"default":null,"comment":""},{"name":"deleted_by","type":"TEXT","nullable":true,"default":null,"comment":""},{"name":"activity_log","type":"TEXT","nullable":true,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isJsonSqlDomain\":true}"}],"indexes":[{"name":"idx_ur_ingest_session_fs_path_entry__ingest_session_id__file_path_abs","def":"CREATE INDEX \"idx_ur_ingest_session_fs_path_entry__ingest_session_id__file_path_abs\" ON \"ur_ingest_session_fs_path_entry\"(\"ingest_session_id\", \"file_path_abs\")","table":"ur_ingest_session_fs_path_entry","columns":["ingest_session_id","file_path_abs"],"comment":""},{"name":"sqlite_autoindex_ur_ingest_session_fs_path_entry_1","def":"PRIMARY KEY (ur_ingest_session_fs_path_entry_id)","table":"ur_ingest_session_fs_path_entry","columns":["ur_ingest_session_fs_path_entry_id"],"comment":""}],"constraints":[{"name":"ur_ingest_session_fs_path_entry_id","type":"PRIMARY KEY","def":"PRIMARY KEY (ur_ingest_session_fs_path_entry_id)","table":"ur_ingest_session_fs_path_entry","referenced_table":null,"columns":["ur_ingest_session_fs_path_entry_id"],"referenced_columns":null,"comment":""},{"name":"- (Foreign key ID: 0)","type":"FOREIGN KEY","def":"FOREIGN KEY (uniform_resource_id) REFERENCES uniform_resource (uniform_resource_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE","table":"ur_ingest_session_fs_path_entry","referenced_table":"uniform_resource","columns":["uniform_resource_id"],"referenced_columns":["uniform_resource_id"],"comment":""},{"name":"- (Foreign key ID: 1)","type":"FOREIGN KEY","def":"FOREIGN KEY (ingest_fs_path_id) REFERENCES ur_ingest_session_fs_path (ur_ingest_session_fs_path_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE","table":"ur_ingest_session_fs_path_entry","referenced_table":"ur_ingest_session_fs_path","columns":["ingest_fs_path_id"],"referenced_columns":["ur_ingest_session_fs_path_id"],"comment":""},{"name":"- (Foreign key ID: 2)","type":"FOREIGN KEY","def":"FOREIGN KEY (ingest_session_id) REFERENCES ur_ingest_session (ur_ingest_session_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE","table":"ur_ingest_session_fs_path_entry","referenced_table":"ur_ingest_session","columns":["ingest_session_id"],"referenced_columns":["ur_ingest_session_id"],"comment":""},{"name":"sqlite_autoindex_ur_ingest_session_fs_path_entry_1","type":"PRIMARY KEY","def":"PRIMARY KEY (ur_ingest_session_fs_path_entry_id)","table":"ur_ingest_session_fs_path_entry","referenced_table":null,"columns":["ur_ingest_session_fs_path_entry_id"],"referenced_columns":null,"comment":""},{"name":"-","type":"CHECK","def":"CHECK(json_valid(captured_executable) OR captured_executable IS NULL)","table":"ur_ingest_session_fs_path_entry","referenced_table":null,"columns":["captured_executable"],"referenced_columns":null,"comment":""},{"name":"-","type":"CHECK","def":"CHECK(json_valid(ur_diagnostics) OR ur_diagnostics IS NULL)","table":"ur_ingest_session_fs_path_entry","referenced_table":null,"columns":["ur_diagnostics"],"referenced_columns":null,"comment":""},{"name":"-","type":"CHECK","def":"CHECK(json_valid(ur_transformations) OR ur_transformations IS NULL)","table":"ur_ingest_session_fs_path_entry","referenced_table":null,"columns":["ur_transformations"],"referenced_columns":null,"comment":""},{"name":"-","type":"CHECK","def":"CHECK(json_valid(elaboration) OR elaboration IS NULL)","table":"ur_ingest_session_fs_path_entry","referenced_table":null,"columns":["elaboration"],"referenced_columns":null,"comment":""}],"triggers":[],"def":"CREATE TABLE \"ur_ingest_session_fs_path_entry\" (\n    \"ur_ingest_session_fs_path_entry_id\" VARCHAR PRIMARY KEY NOT NULL,\n    \"ingest_session_id\" VARCHAR NOT NULL,\n    \"ingest_fs_path_id\" VARCHAR NOT NULL,\n    \"uniform_resource_id\" VARCHAR,\n    \"file_path_abs\" TEXT NOT NULL,\n    \"file_path_rel_parent\" TEXT NOT NULL,\n    \"file_path_rel\" TEXT NOT NULL,\n    \"file_basename\" TEXT NOT NULL,\n    \"file_extn\" TEXT,\n    \"captured_executable\" TEXT CHECK(json_valid(captured_executable) OR captured_executable IS NULL),\n    \"ur_status\" TEXT,\n    \"ur_diagnostics\" TEXT CHECK(json_valid(ur_diagnostics) OR ur_diagnostics IS NULL),\n    \"ur_transformations\" TEXT CHECK(json_valid(ur_transformations) OR ur_transformations IS NULL),\n    \"elaboration\" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"created_by\" TEXT DEFAULT ''UNKNOWN'',\n    \"updated_at\" TIMESTAMP,\n    \"updated_by\" TEXT,\n    \"deleted_at\" TIMESTAMP,\n    \"deleted_by\" TEXT,\n    \"activity_log\" TEXT,\n    FOREIGN KEY(\"ingest_session_id\") REFERENCES \"ur_ingest_session\"(\"ur_ingest_session_id\"),\n    FOREIGN KEY(\"ingest_fs_path_id\") REFERENCES \"ur_ingest_session_fs_path\"(\"ur_ingest_session_fs_path_id\"),\n    FOREIGN KEY(\"uniform_resource_id\") REFERENCES \"uniform_resource\"(\"uniform_resource_id\")\n)"},{"name":"ur_ingest_session_task","type":"table","comment":"Contains entries related to task content ingestion paths. On multiple executions,  unlike uniform_resource, ur_ingest_session_task rows are always inserted and  references the uniform_resource primary key of its related content.  This method allows for a more efficient query of file version differences across  sessions. With SQL queries, you can detect which sessions have a file added or modified,  which sessions have a file deleted, and what the differences are in file contents  if they were modified across sessions.","columns":[{"name":"ur_ingest_session_task_id","type":"VARCHAR","nullable":false,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isVarChar\":true}"},{"name":"ingest_session_id","type":"VARCHAR","nullable":false,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isVarChar\":true}"},{"name":"uniform_resource_id","type":"VARCHAR","nullable":true,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isVarChar\":true}"},{"name":"captured_executable","type":"TEXT","nullable":false,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isJsonText\":true}"},{"name":"ur_status","type":"TEXT","nullable":true,"default":null,"comment":""},{"name":"ur_diagnostics","type":"TEXT","nullable":true,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isJsonText\":true}"},{"name":"ur_transformations","type":"TEXT","nullable":true,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isJsonText\":true}"},{"name":"elaboration","type":"TEXT","nullable":true,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isJsonText\":true}"},{"name":"created_at","type":"TIMESTAMP","nullable":true,"default":"CURRENT_TIMESTAMP","comment":""},{"name":"created_by","type":"TEXT","nullable":true,"default":"''UNKNOWN''","comment":""},{"name":"updated_at","type":"TIMESTAMP","nullable":true,"default":null,"comment":""},{"name":"updated_by","type":"TEXT","nullable":true,"default":null,"comment":""},{"name":"deleted_at","type":"TIMESTAMP","nullable":true,"default":null,"comment":""},{"name":"deleted_by","type":"TEXT","nullable":true,"default":null,"comment":""},{"name":"activity_log","type":"TEXT","nullable":true,"default":null,"comment":"{\"isSqlDomainZodDescrMeta\":true,\"isJsonSqlDomain\":true}"}],"indexes":[{"name":"idx_ur_ingest_session_task__ingest_session_id","def":"CREATE INDEX \"idx_ur_ingest_session_task__ingest_session_id\" ON \"ur_ingest_session_task\"(\"ingest_session_id\")","table":"ur_ingest_session_task","columns":["ingest_session_id"],"comment":""},{"name":"sqlite_autoindex_ur_ingest_session_task_1","def":"PRIMARY KEY (ur_ingest_session_task_id)","table":"ur_ingest_session_task","columns":["ur_ingest_session_task_id"],"comment":""}],"constraints":[{"name":"ur_ingest_session_task_id","type":"PRIMARY KEY","def":"PRIMARY KEY (ur_ingest_session_task_id)","table":"ur_ingest_session_task","referenced_table":null,"columns":["ur_ingest_session_task_id"],"referenced_columns":null,"comment":""},{"name":"- (Foreign key ID: 0)","type":"FOREIGN KEY","def":"FOREIGN KEY (uniform_resource_id) REFERENCES uniform_resource (uniform_resource_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE","table":"ur_ingest_session_task","referenced_table":"uniform_resource","columns":["uniform_resource_id"],"referenced_columns":["uniform_resource_id"],"comment":""},{"name":"- (Foreign key ID: 1)","type":"FOREIGN KEY","def":"FOREIGN KEY (ingest_session_id) REFERENCES ur_ingest_session (ur_ingest_session_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE","table":"ur_ingest_session_task","referenced_table":"ur_ingest_session","columns":["ingest_session_id"],"referenced_columns":["ur_ingest_session_id"],"comment":""},{"name":"sqlite_autoindex_ur_ingest_session_task_1","type":"PRIMARY KEY","def":"PRIMARY KEY (ur_ingest_session_task_id)","table":"ur_ingest_session_task","referenced_table":null,"columns":["ur_ingest_session_task_id"],"referenced_columns":null,"comment":""},{"name":"-","type":"CHECK","def":"CHECK(json_valid(captured_executable))","table":"ur_ingest_session_task","referenced_table":null,"columns":["captured_executable"],"referenced_columns":null,"comment":""},{"name":"-","type":"CHECK","def":"CHECK(json_valid(ur_diagnostics) OR ur_diagnostics IS NULL)","table":"ur_ingest_session_task","referenced_table":null,"columns":["ur_diagnostics"],"referenced_columns":null,"comment":""},{"name":"-","type":"CHECK","def":"CHECK(json_valid(ur_transformations) OR ur_transformations IS NULL)","table":"ur_ingest_session_task","referenced_table":null,"columns":["ur_transformations"],"referenced_columns":null,"comment":""},{"name":"-","type":"CHECK","def":"CHECK(json_valid(elaboration) OR elaboration IS NULL)","table":"ur_ingest_session_task","referenced_table":null,"columns":["elaboration"],"referenced_columns":null,"comment":""}],"triggers":[],"def":"CREATE TABLE \"ur_ingest_session_task\" (\n    \"ur_ingest_session_task_id\" VARCHAR PRIMARY KEY NOT NULL,\n    \"ingest_session_id\" VARCHAR NOT NULL,\n    \"uniform_resource_id\" VARCHAR,\n    \"captured_executable\" TEXT CHECK(json_valid(captured_executable)) NOT NULL,\n    \"ur_status\" TEXT,\n    \"ur_diagnostics\" TEXT CHECK(json_valid(ur_diagnostics) OR ur_diagnostics IS NULL),\n    \"ur_transformations\" TEXT CHECK(json_valid(ur_transformations) OR ur_transformations IS NULL),\n    \"elaboration\" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    \"created_by\" TEXT DEFAULT ''UNKNOWN'',\n    \"updated_at\" TIMESTAMP,\n    \"updated_by\" TEXT,\n    \"deleted_at\" TIMESTAMP,\n    \"deleted_by\" TEXT,\n    \"activity_log\" TEXT,\n    FOREIGN KEY(\"ingest_session_id\") REFERENCES \"ur_ingest_session\"(\"ur_ingest_session_id\"),\n    FOREIGN KEY(\"uniform_resource_id\") REFERENCES \"uniform_resource\"(\"uniform_resource_id\")\n)"}],"relations":[{"table":"behavior","columns":["device_id"],"cardinality":"Zero or more","parent_table":"device","parent_columns":["device_id"],"parent_cardinality":"Exactly one","def":"FOREIGN KEY (device_id) REFERENCES device (device_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE","virtual":false},{"table":"ur_ingest_session","columns":["behavior_id"],"cardinality":"Zero or more","parent_table":"behavior","parent_columns":["behavior_id"],"parent_cardinality":"Zero or one","def":"FOREIGN KEY (behavior_id) REFERENCES behavior (behavior_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE","virtual":false},{"table":"ur_ingest_session","columns":["device_id"],"cardinality":"Zero or more","parent_table":"device","parent_columns":["device_id"],"parent_cardinality":"Exactly one","def":"FOREIGN KEY (device_id) REFERENCES device (device_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE","virtual":false},{"table":"ur_ingest_session_fs_path","columns":["ingest_session_id"],"cardinality":"Zero or more","parent_table":"ur_ingest_session","parent_columns":["ur_ingest_session_id"],"parent_cardinality":"Exactly one","def":"FOREIGN KEY (ingest_session_id) REFERENCES ur_ingest_session (ur_ingest_session_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE","virtual":false},{"table":"uniform_resource","columns":["ingest_fs_path_id"],"cardinality":"Zero or more","parent_table":"ur_ingest_session_fs_path","parent_columns":["ur_ingest_session_fs_path_id"],"parent_cardinality":"Zero or one","def":"FOREIGN KEY (ingest_fs_path_id) REFERENCES ur_ingest_session_fs_path (ur_ingest_session_fs_path_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE","virtual":false},{"table":"uniform_resource","columns":["ingest_session_id"],"cardinality":"Zero or more","parent_table":"ur_ingest_session","parent_columns":["ur_ingest_session_id"],"parent_cardinality":"Exactly one","def":"FOREIGN KEY (ingest_session_id) REFERENCES ur_ingest_session (ur_ingest_session_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE","virtual":false},{"table":"uniform_resource","columns":["device_id"],"cardinality":"Zero or more","parent_table":"device","parent_columns":["device_id"],"parent_cardinality":"Exactly one","def":"FOREIGN KEY (device_id) REFERENCES device (device_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE","virtual":false},{"table":"uniform_resource_transform","columns":["uniform_resource_id"],"cardinality":"Zero or more","parent_table":"uniform_resource","parent_columns":["uniform_resource_id"],"parent_cardinality":"Exactly one","def":"FOREIGN KEY (uniform_resource_id) REFERENCES uniform_resource (uniform_resource_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE","virtual":false},{"table":"ur_ingest_session_fs_path_entry","columns":["uniform_resource_id"],"cardinality":"Zero or more","parent_table":"uniform_resource","parent_columns":["uniform_resource_id"],"parent_cardinality":"Zero or one","def":"FOREIGN KEY (uniform_resource_id) REFERENCES uniform_resource (uniform_resource_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE","virtual":false},{"table":"ur_ingest_session_fs_path_entry","columns":["ingest_fs_path_id"],"cardinality":"Zero or more","parent_table":"ur_ingest_session_fs_path","parent_columns":["ur_ingest_session_fs_path_id"],"parent_cardinality":"Exactly one","def":"FOREIGN KEY (ingest_fs_path_id) REFERENCES ur_ingest_session_fs_path (ur_ingest_session_fs_path_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE","virtual":false},{"table":"ur_ingest_session_fs_path_entry","columns":["ingest_session_id"],"cardinality":"Zero or more","parent_table":"ur_ingest_session","parent_columns":["ur_ingest_session_id"],"parent_cardinality":"Exactly one","def":"FOREIGN KEY (ingest_session_id) REFERENCES ur_ingest_session (ur_ingest_session_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE","virtual":false},{"table":"ur_ingest_session_task","columns":["uniform_resource_id"],"cardinality":"Zero or more","parent_table":"uniform_resource","parent_columns":["uniform_resource_id"],"parent_cardinality":"Zero or one","def":"FOREIGN KEY (uniform_resource_id) REFERENCES uniform_resource (uniform_resource_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE","virtual":false},{"table":"ur_ingest_session_task","columns":["ingest_session_id"],"cardinality":"Zero or more","parent_table":"ur_ingest_session","parent_columns":["ur_ingest_session_id"],"parent_cardinality":"Exactly one","def":"FOREIGN KEY (ingest_session_id) REFERENCES ur_ingest_session (ur_ingest_session_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE","virtual":false}],"functions":null,"driver":{"name":"sqlite","database_version":"3.42.0","meta":{}}}\012','\012',char(10)),'json',55957,'2023-12-04 02:56:00.329340919 UTC',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFFG4ZCC78SRNJ4AFAK189','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/ur_ingest_session_task.md','cf02bfc43869bae31255116312e96c0fc38463be',replace('# ur_ingest_session_task\n\n## Description\n\nContains entries related to task content ingestion paths. On multiple executions,  unlike uniform_resource, ur_ingest_session_task rows are always inserted and  references the uniform_resource primary key of its related content.  This method allows for a more efficient query of file version differences across  sessions. With SQL queries, you can detect which sessions have a file added or modified,  which sessions have a file deleted, and what the differences are in file contents  if they were modified across sessions.\n\n<details>\n<summary><strong>Table Definition</strong></summary>\n\n```sql\nCREATE TABLE "ur_ingest_session_task" (\n    "ur_ingest_session_task_id" VARCHAR PRIMARY KEY NOT NULL,\n    "ingest_session_id" VARCHAR NOT NULL,\n    "uniform_resource_id" VARCHAR,\n    "captured_executable" TEXT CHECK(json_valid(captured_executable)) NOT NULL,\n    "ur_status" TEXT,\n    "ur_diagnostics" TEXT CHECK(json_valid(ur_diagnostics) OR ur_diagnostics IS NULL),\n    "ur_transformations" TEXT CHECK(json_valid(ur_transformations) OR ur_transformations IS NULL),\n    "elaboration" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "created_by" TEXT DEFAULT ''UNKNOWN'',\n    "updated_at" TIMESTAMP,\n    "updated_by" TEXT,\n    "deleted_at" TIMESTAMP,\n    "deleted_by" TEXT,\n    "activity_log" TEXT,\n    FOREIGN KEY("ingest_session_id") REFERENCES "ur_ingest_session"("ur_ingest_session_id"),\n    FOREIGN KEY("uniform_resource_id") REFERENCES "uniform_resource"("uniform_resource_id")\n)\n```\n\n</details>\n\n## Columns\n\n| Name                      | Type      | Default           | Nullable | Parents                                   | Comment                                                 |\n| ------------------------- | --------- | ----------------- | -------- | ----------------------------------------- | ------------------------------------------------------- |\n| ur_ingest_session_task_id | VARCHAR   |                   | false    |                                           | {"isSqlDomainZodDescrMeta":true,"isVarChar":true}       |\n| ingest_session_id         | VARCHAR   |                   | false    | [ur_ingest_session](ur_ingest_session.md) | {"isSqlDomainZodDescrMeta":true,"isVarChar":true}       |\n| uniform_resource_id       | VARCHAR   |                   | true     | [uniform_resource](uniform_resource.md)   | {"isSqlDomainZodDescrMeta":true,"isVarChar":true}       |\n| captured_executable       | TEXT      |                   | false    |                                           | {"isSqlDomainZodDescrMeta":true,"isJsonText":true}      |\n| ur_status                 | TEXT      |                   | true     |                                           |                                                         |\n| ur_diagnostics            | TEXT      |                   | true     |                                           | {"isSqlDomainZodDescrMeta":true,"isJsonText":true}      |\n| ur_transformations        | TEXT      |                   | true     |                                           | {"isSqlDomainZodDescrMeta":true,"isJsonText":true}      |\n| elaboration               | TEXT      |                   | true     |                                           | {"isSqlDomainZodDescrMeta":true,"isJsonText":true}      |\n| created_at                | TIMESTAMP | CURRENT_TIMESTAMP | true     |                                           |                                                         |\n| created_by                | TEXT      | ''UNKNOWN''         | true     |                                           |                                                         |\n| updated_at                | TIMESTAMP |                   | true     |                                           |                                                         |\n| updated_by                | TEXT      |                   | true     |                                           |                                                         |\n| deleted_at                | TIMESTAMP |                   | true     |                                           |                                                         |\n| deleted_by                | TEXT      |                   | true     |                                           |                                                         |\n| activity_log              | TEXT      |                   | true     |                                           | {"isSqlDomainZodDescrMeta":true,"isJsonSqlDomain":true} |\n\n## Constraints\n\n| Name                                      | Type        | Definition                                                                                                                             |\n| ----------------------------------------- | ----------- | -------------------------------------------------------------------------------------------------------------------------------------- |\n| ur_ingest_session_task_id                 | PRIMARY KEY | PRIMARY KEY (ur_ingest_session_task_id)                                                                                                |\n| - (Foreign key ID: 0)                     | FOREIGN KEY | FOREIGN KEY (uniform_resource_id) REFERENCES uniform_resource (uniform_resource_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE |\n| - (Foreign key ID: 1)                     | FOREIGN KEY | FOREIGN KEY (ingest_session_id) REFERENCES ur_ingest_session (ur_ingest_session_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE |\n| sqlite_autoindex_ur_ingest_session_task_1 | PRIMARY KEY | PRIMARY KEY (ur_ingest_session_task_id)                                                                                                |\n| -                                         | CHECK       | CHECK(json_valid(captured_executable))                                                                                                 |\n| -                                         | CHECK       | CHECK(json_valid(ur_diagnostics) OR ur_diagnostics IS NULL)                                                                            |\n| -                                         | CHECK       | CHECK(json_valid(ur_transformations) OR ur_transformations IS NULL)                                                                    |\n| -                                         | CHECK       | CHECK(json_valid(elaboration) OR elaboration IS NULL)                                                                                  |\n\n## Indexes\n\n| Name                                          | Definition                                                                                                    |\n| --------------------------------------------- | ------------------------------------------------------------------------------------------------------------- |\n| idx_ur_ingest_session_task__ingest_session_id | CREATE INDEX "idx_ur_ingest_session_task__ingest_session_id" ON "ur_ingest_session_task"("ingest_session_id") |\n| sqlite_autoindex_ur_ingest_session_task_1     | PRIMARY KEY (ur_ingest_session_task_id)                                                                       |\n\n## Relations\n\n![er](ur_ingest_session_task.svg)\n\n---\n\n> Generated by [tbls](https://github.com/k1LoW/tbls)\n','\n',char(10)),'md',7352,'2023-12-04 02:56:00.329340919 UTC',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFFG51CN370CN2JK9WVYFH','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/README.md','f5c7dd4e90ff5ab63805e2424bb3f2bca81b785e',replace('# Resource Surveillance State Schema\n\n## Tables\n\n| Name                                                                            | Columns | Comment                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     | Type  |\n| ------------------------------------------------------------------------------- | ------- || ----- |\n| [device](device.md)                                                             | 14      | Identity, network segmentation, and sysinfo for devices on which uniform_resource are found                                                                                                                                                                                                                                                                                                                                                                                                                                                                 | table |\n| [behavior](behavior.md)                                                         | 13      | Behaviors are configuration "presets" that can be used to drive<br>application operations at runtime. For example, ingest behaviors<br>include configs that indicate which files to ignore, which to<br>scan, when to load content, etc. This is more convenient than<br>creating<br><br>behavior has a foreign key reference to the device table since<br>behaviors might be device-specific.                                                                                                                                                              | table |\n| [ur_ingest_resource_path_match_rule](ur_ingest_resource_path_match_rule.md)     | 13      | A regular expression can determine the flags to apply to an ingestion path<br>and if the regular expr contains a nature capture group that pattern match<br>will assign the nature too.                                                                                                                                                                                                                                                                                                                                                                     | table |\n| [ur_ingest_resource_path_rewrite_rule](ur_ingest_resource_path_rewrite_rule.md) | 12      | A regular expression can determine the flags to apply to an ingestion path<br>and if the regular expr contains a nature capture group that pattern match<br>will assign the nature too.                                                                                                                                                                                                                                                                                                                                                                     | table |\n| [ur_ingest_session](ur_ingest_session.md)                                       | 14      | Immutable ingestion sessions represents any "discovery" or "walk" operation.  This could be a device file system scan or any other resource discovery  session. Each time a discovery operation starts, a record is created.  ur_ingest_session has a foreign key reference to the device table so that the  same device can be used for multiple ingest sessions but also the ingest  sessions can be merged across workstations / servers for easier detection  of changes and similaries between file systems on different devices.                      | table |\n| [ur_ingest_session_fs_path](ur_ingest_session_fs_path.md)                       | 11      | Immutable ingest session file system path represents a discovery or "walk" path. If  the session included a file system scan, then root_path is the  root file system path that was scanned. If the session was discovering  resources in another target then root_path would be  representative of the target path (could be a URI).                                                                                                                                                                                                                       | table |\n| [uniform_resource](uniform_resource.md)                                         | 20      | Immutable resource and content information. On multiple executions,<br>uniform_resource are inserted only if the the content (see unique<br>index for details). For historical logging, uniform_resource has foreign<br>key references to both ur_ingest_session and ur_ingest_session_fs_path<br>tables to indicate which particular session and ingestion path the<br>resourced was inserted during.                                                                                                                                                      | table |\n| [uniform_resource_transform](uniform_resource_transform.md)                     | 15      | uniform_resource transformed content| table |\n| [ur_ingest_session_fs_path_entry](ur_ingest_session_fs_path_entry.md)           | 21      | Contains entries related to file system content ingestion paths. On multiple executions,  unlike uniform_resource, ur_ingest_session_fs_path_entry rows are always inserted and  references the uniform_resource primary key of its related content.  This method allows for a more efficient query of file version differences across  sessions. With SQL queries, you can detect which sessions have a file added or modified,  which sessions have a file deleted, and what the differences are in file contents  if they were modified across sessions. | table |\n| [ur_ingest_session_task](ur_ingest_session_task.md)                             | 15      | Contains entries related to task content ingestion paths. On multiple executions,  unlike uniform_resource, ur_ingest_session_task rows are always inserted and  references the uniform_resource primary key of its related content.  This method allows for a more efficient query of file version differences across  sessions. With SQL queries, you can detect which sessions have a file added or modified,  which sessions have a file deleted, and what the differences are in file contents  if they were modified across sessions.                 | table |\n\n## Relations\n\n![er](schema.svg)\n\n---\n\n> Generated by [tbls](https://github.com/k1LoW/tbls)\n','\n',char(10)),'md',7869,'2023-12-04 02:56:00.319340920 UTC',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFFG52QM019KET2KQCKD3C','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/ur_ingest_session.md','53dbaf7f53bdc7e4d13dfc148614cca6b5e44973',replace('# ur_ingest_session\n\n## Description\n\nImmutable ingestion sessions represents any "discovery" or "walk" operation.  This could be a device file system scan or any other resource discovery  session. Each time a discovery operation starts, a record is created.  ur_ingest_session has a foreign key reference to the device table so that the  same device can be used for multiple ingest sessions but also the ingest  sessions can be merged across workstations / servers for easier detection  of changes and similaries between file systems on different devices.\n\n<details>\n<summary><strong>Table Definition</strong></summary>\n\n```sql\nCREATE TABLE "ur_ingest_session" (\n    "ur_ingest_session_id" VARCHAR PRIMARY KEY NOT NULL,\n    "device_id" VARCHAR NOT NULL,\n    "behavior_id" VARCHAR,\n    "behavior_json" TEXT CHECK(json_valid(behavior_json) OR behavior_json IS NULL),\n    "ingest_started_at" TIMESTAMP NOT NULL,\n    "ingest_finished_at" TIMESTAMP,\n    "elaboration" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "created_by" TEXT DEFAULT ''UNKNOWN'',\n    "updated_at" TIMESTAMP,\n    "updated_by" TEXT,\n    "deleted_at" TIMESTAMP,\n    "deleted_by" TEXT,\n    "activity_log" TEXT,\n    FOREIGN KEY("device_id") REFERENCES "device"("device_id"),\n    FOREIGN KEY("behavior_id") REFERENCES "behavior"("behavior_id"),\n    UNIQUE("device_id", "created_at")\n)\n```\n\n</details>\n\n## Columns\n\n| Name                 | Type      | Default           | Nullable | Children                                                                                                                                                                                                                    | Parents                 | Comment                                                                   |\n| -------------------- | --------- | ----------------- | -------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------- | ------------------------------------------------------------------------- |\n| ur_ingest_session_id | VARCHAR   |                   | false    | [ur_ingest_session_fs_path](ur_ingest_session_fs_path.md) [uniform_resource](uniform_resource.md) [ur_ingest_session_fs_path_entry](ur_ingest_session_fs_path_entry.md) [ur_ingest_session_task](ur_ingest_session_task.md) |                         | {"isSqlDomainZodDescrMeta":true,"isVarChar":true}                         |\n| device_id            | VARCHAR   |                   | false    |                                                                                                                                                                                                                             | [device](device.md)     | {"isSqlDomainZodDescrMeta":true,"isVarChar":true}                         |\n| behavior_id          | VARCHAR   |                   | true     |                                                                                                                                                                                                                             | [behavior](behavior.md) | {"isSqlDomainZodDescrMeta":true,"isVarChar":true}                         |\n| behavior_json        | TEXT      |                   | true     |                                                                                                                                                                                                                             |                         | {"isSqlDomainZodDescrMeta":true,"isJsonText":true}                        |\n| ingest_started_at    | TIMESTAMP |                   | false    |                                                                                                                                                                                                                             |                         | {"isSqlDomainZodDescrMeta":true,"isDateSqlDomain":true,"isDateTime":true} |\n| ingest_finished_at   | TIMESTAMP |                   | true     |                                                                                                                                                                                                                             |                         | {"isSqlDomainZodDescrMeta":true,"isDateSqlDomain":true,"isDateTime":true} |\n| elaboration          | TEXT      |                   | true     |                                                                                                                                                                                                                             |                         | {"isSqlDomainZodDescrMeta":true,"isJsonText":true}                        |\n| created_at           | TIMESTAMP | CURRENT_TIMESTAMP | true     |                                                                                                                                                                                                                             |                         |                                                                           |\n| created_by           | TEXT      | ''UNKNOWN''         | true     |                                                                                                                                                                                                                             |                         |                                                                           |\n| updated_at           | TIMESTAMP |                   | true     |                                                                                                                                                                                                                             |                         |                                                                           |\n| updated_by           | TEXT      |                   | true     |                                                                                                                                                                                                                             |                         |                                                                           |\n| deleted_at           | TIMESTAMP |                   | true     |                                                                                                                                                                                                                             |                         |                                                                           |\n| deleted_by           | TEXT      |                   | true     |                                                                                                                                                                                                                             |                         |                                                                           |\n| activity_log         | TEXT      |                   | true     |                                                                                                                                                                                                                             |                         | {"isSqlDomainZodDescrMeta":true,"isJsonSqlDomain":true}                   |\n\n## Constraints\n\n| Name                                 | Type        | Definition                                                                                                     |\n| ------------------------------------ | ----------- | -------------------------------------------------------------------------------------------------------------- |\n| ur_ingest_session_id                 | PRIMARY KEY | PRIMARY KEY (ur_ingest_session_id)                                                                             |\n| - (Foreign key ID: 0)                | FOREIGN KEY | FOREIGN KEY (behavior_id) REFERENCES behavior (behavior_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE |\n| - (Foreign key ID: 1)                | FOREIGN KEY | FOREIGN KEY (device_id) REFERENCES device (device_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE       |\n| sqlite_autoindex_ur_ingest_session_2 | UNIQUE      | UNIQUE (device_id, created_at)                                                                                 |\n| sqlite_autoindex_ur_ingest_session_1 | PRIMARY KEY | PRIMARY KEY (ur_ingest_session_id)                                                                             |\n| -                                    | CHECK       | CHECK(json_valid(behavior_json) OR behavior_json IS NULL)                                                      |\n| -                                    | CHECK       | CHECK(json_valid(elaboration) OR elaboration IS NULL)                                                          |\n\n## Indexes\n\n| Name                                 | Definition                         |\n| ------------------------------------ | ---------------------------------- |\n| sqlite_autoindex_ur_ingest_session_2 | UNIQUE (device_id, created_at)     |\n| sqlite_autoindex_ur_ingest_session_1 | PRIMARY KEY (ur_ingest_session_id) |\n\n## Relations\n\n![er](ur_ingest_session.svg)\n\n---\n\n> Generated by [tbls](https://github.com/k1LoW/tbls)\n','\n',char(10)),'md',9675,'2023-12-04 02:56:00.329340919 UTC',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFFG54T53N2718J34JPJFG','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/uniform_resource.md','3607f694d7436b99c780c4542acc721a0139e414',replace('# uniform_resource\n\n## Description\n\nImmutable resource and content information. On multiple executions,  \nuniform_resource are inserted only if the the content (see unique  \nindex for details). For historical logging, uniform_resource has foreign  \nkey references to both ur_ingest_session and ur_ingest_session_fs_path  \ntables to indicate which particular session and ingestion path the  \nresourced was inserted during.\n\n<details>\n<summary><strong>Table Definition</strong></summary>\n\n```sql\nCREATE TABLE "uniform_resource" (\n    "uniform_resource_id" VARCHAR PRIMARY KEY NOT NULL,\n    "device_id" VARCHAR NOT NULL,\n    "ingest_session_id" VARCHAR NOT NULL,\n    "ingest_fs_path_id" VARCHAR,\n    "uri" TEXT NOT NULL,\n    "content_digest" TEXT NOT NULL,\n    "content" BLOB,\n    "nature" TEXT,\n    "size_bytes" INTEGER,\n    "last_modified_at" TIMESTAMP,\n    "content_fm_body_attrs" TEXT CHECK(json_valid(content_fm_body_attrs) OR content_fm_body_attrs IS NULL),\n    "frontmatter" TEXT CHECK(json_valid(frontmatter) OR frontmatter IS NULL),\n    "elaboration" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "created_by" TEXT DEFAULT ''UNKNOWN'',\n    "updated_at" TIMESTAMP,\n    "updated_by" TEXT,\n    "deleted_at" TIMESTAMP,\n    "deleted_by" TEXT,\n    "activity_log" TEXT,\n    FOREIGN KEY("device_id") REFERENCES "device"("device_id"),\n    FOREIGN KEY("ingest_session_id") REFERENCES "ur_ingest_session"("ur_ingest_session_id"),\n    FOREIGN KEY("ingest_fs_path_id") REFERENCES "ur_ingest_session_fs_path"("ur_ingest_session_fs_path_id"),\n    UNIQUE("device_id", "content_digest", "uri", "size_bytes", "last_modified_at")\n)\n```\n\n</details>\n\n## Columns\n\n| Name                  | Type      | Default           | Nullable | Children                                                                                                                                                                              | Parents                                                   | Comment                                                                                                |\n| --------------------- | --------- | ----------------- | -------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------- | ------------------------------------------------------------------------------------------------------ |\n| uniform_resource_id   | VARCHAR   |                   | false    | [uniform_resource_transform](uniform_resource_transform.md) [ur_ingest_session_fs_path_entry](ur_ingest_session_fs_path_entry.md) [ur_ingest_session_task](ur_ingest_session_task.md) |                                                           | uniform_resource ULID primary key                                                                      |\n| device_id             | VARCHAR   |                   | false    |                                                                                                                                                                                       | [device](device.md)                                       | which device row introduced this resource                                                              |\n| ingest_session_id     | VARCHAR   |                   | false    |                                                                                                                                                                                       | [ur_ingest_session](ur_ingest_session.md)                 | which ur_ingest_session row introduced this resource                                                   |\n| ingest_fs_path_id     | VARCHAR   |                   | true     |                                                                                                                                                                                       | [ur_ingest_session_fs_path](ur_ingest_session_fs_path.md) | which ur_ingest_session_fs_path row introduced this resource                                           |\n| uri                   | TEXT      |                   | false    |                                                                                                                                                                                       |                                                           | the resource''s URI (dependent on how it was acquired and on which device)                              |\n| content_digest        | TEXT      |                   | false    |                                                                                                                                                                                       |                                                           | ''-'' when no hash was computed (not NULL); content_digest for symlinks will be the same as their target |\n| content               | BLOB      |                   | true     |                                                                                                                                                                                       |                                                           | either NULL if no content was acquired or the actual blob/text of the content                          |\n| nature                | TEXT      |                   | true     |                                                                                                                                                                                       |                                                           | file extension or MIME                                                                                 |\n| size_bytes            | INTEGER   |                   | true     |                                                                                                                                                                                       |                                                           |                                                                                                        |\n| last_modified_at      | TIMESTAMP |                   | true     |                                                                                                                                                                                       |                                                           | {"isSqlDomainZodDescrMeta":true,"isDateSqlDomain":true,"isDateTime":true}                              |\n| content_fm_body_attrs | TEXT      |                   | true     |                                                                                                                                                                                       |                                                           | each component of frontmatter-based content ({ frontMatter: '''', body: '''', attrs: {...} })              |\n| frontmatter           | TEXT      |                   | true     |                                                                                                                                                                                       |                                                           | meta data or other "frontmatter" in JSON format                                                        |\n| elaboration           | TEXT      |                   | true     |                                                                                                                                                                                       |                                                           | anything that doesn''t fit in other columns (JSON)                                                      |\n| created_at            | TIMESTAMP | CURRENT_TIMESTAMP | true     |                                                                                                                                                                                       |                                                           |                                                                                                        |\n| created_by            | TEXT      | ''UNKNOWN''         | true     |                                                                                                                                                                                       |                                                           |                                                                                                        |\n| updated_at            | TIMESTAMP |                   | true     |                                                                                                                                                                                       |                                                           |                                                                                                        |\n| updated_by            | TEXT      |                   | true     |                                                                                                                                                                                       |                                                           |                                                                                                        |\n| deleted_at            | TIMESTAMP |                   | true     |                                                                                                                                                                                       |                                                           |                                                                                                        |\n| deleted_by            | TEXT      |                   | true     |                                                                                                                                                                                       |                                                           |                                                                                                        |\n| activity_log          | TEXT      |                   | true     |                                                                                                                                                                                       |                                                           | {"isSqlDomainZodDescrMeta":true,"isJsonSqlDomain":true}                                                |\n\n## Constraints\n\n| Name                                | Type        | Definition                                                                                                                                             |\n| ----------------------------------- | ----------- | ------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| uniform_resource_id                 | PRIMARY KEY | PRIMARY KEY (uniform_resource_id)                                                                                                                      |\n| - (Foreign key ID: 0)               | FOREIGN KEY | FOREIGN KEY (ingest_fs_path_id) REFERENCES ur_ingest_session_fs_path (ur_ingest_session_fs_path_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE |\n| - (Foreign key ID: 1)               | FOREIGN KEY | FOREIGN KEY (ingest_session_id) REFERENCES ur_ingest_session (ur_ingest_session_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE                 |\n| - (Foreign key ID: 2)               | FOREIGN KEY | FOREIGN KEY (device_id) REFERENCES device (device_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE                                               |\n| sqlite_autoindex_uniform_resource_2 | UNIQUE      | UNIQUE (device_id, content_digest, uri, size_bytes, last_modified_at)                                                                                  |\n| sqlite_autoindex_uniform_resource_1 | PRIMARY KEY | PRIMARY KEY (uniform_resource_id)                                                                                                                      |\n| -                                   | CHECK       | CHECK(json_valid(content_fm_body_attrs) OR content_fm_body_attrs IS NULL)                                                                              |\n| -                                   | CHECK       | CHECK(json_valid(frontmatter) OR frontmatter IS NULL)                                                                                                  |\n| -                                   | CHECK       | CHECK(json_valid(elaboration) OR elaboration IS NULL)                                                                                                  |\n\n## Indexes\n\n| Name                                 | Definition                                                                                    |\n| ------------------------------------ | --------------------------------------------------------------------------------------------- |\n| idx_uniform_resource__device_id__uri | CREATE INDEX "idx_uniform_resource__device_id__uri" ON "uniform_resource"("device_id", "uri") |\n| sqlite_autoindex_uniform_resource_2  | UNIQUE (device_id, content_digest, uri, size_bytes, last_modified_at)                         |\n| sqlite_autoindex_uniform_resource_1  | PRIMARY KEY (uniform_resource_id)                                                             |\n\n## Relations\n\n![er](uniform_resource.svg)\n\n---\n\n> Generated by [tbls](https://github.com/k1LoW/tbls)\n','\n',char(10)),'md',14008,'2023-12-04 02:56:00.329340919 UTC',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFFG567NA23WBY4A0JWC45','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/device.md','0da916d452da4be63a8c697a2c7b564ba0de341e',replace('# device\n\n## Description\n\nIdentity, network segmentation, and sysinfo for devices on which uniform_resource are found\n\n<details>\n<summary><strong>Table Definition</strong></summary>\n\n```sql\nCREATE TABLE "device" (\n    "device_id" VARCHAR PRIMARY KEY NOT NULL,\n    "name" TEXT NOT NULL,\n    "state" TEXT CHECK(json_valid(state)) NOT NULL,\n    "boundary" TEXT NOT NULL,\n    "segmentation" TEXT CHECK(json_valid(segmentation) OR segmentation IS NULL),\n    "state_sysinfo" TEXT CHECK(json_valid(state_sysinfo) OR state_sysinfo IS NULL),\n    "elaboration" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "created_by" TEXT DEFAULT ''UNKNOWN'',\n    "updated_at" TIMESTAMP,\n    "updated_by" TEXT,\n    "deleted_at" TIMESTAMP,\n    "deleted_by" TEXT,\n    "activity_log" TEXT,\n    UNIQUE("name", "state", "boundary")\n)\n```\n\n</details>\n\n## Columns\n\n| Name          | Type      | Default           | Nullable | Children                                                                                                  | Comment                                                                                          |\n| ------------- | --------- | ----------------- | -------- | --------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------ |\n| device_id     | VARCHAR   |                   | false    | [behavior](behavior.md) [ur_ingest_session](ur_ingest_session.md) [uniform_resource](uniform_resource.md) | {"isSqlDomainZodDescrMeta":true,"isVarChar":true}                                                |\n| name          | TEXT      |                   | false    |                                                                                                           | unique device identifier (defaults to hostname)                                                  |\n| state         | TEXT      |                   | false    |                                                                                                           | should be "SINGLETON" if only one state is allowed, or other tags if multiple states are allowed |\n| boundary      | TEXT      |                   | false    |                                                                                                           | can be IP address, VLAN, or any other device name differentiator                                 |\n| segmentation  | TEXT      |                   | true     |                                                                                                           | zero trust or other network segmentation                                                         |\n| state_sysinfo | TEXT      |                   | true     |                                                                                                           | any sysinfo or other state data that is specific to this device (mutable)                        |\n| elaboration   | TEXT      |                   | true     |                                                                                                           | any elaboration needed for the device (mutable)                                                  |\n| created_at    | TIMESTAMP | CURRENT_TIMESTAMP | true     |                                                                                                           |                                                                                                  |\n| created_by    | TEXT      | ''UNKNOWN''         | true     |                                                                                                           |                                                                                                  |\n| updated_at    | TIMESTAMP |                   | true     |                                                                                                           |                                                                                                  |\n| updated_by    | TEXT      |                   | true     |                                                                                                           |                                                                                                  |\n| deleted_at    | TIMESTAMP |                   | true     |                                                                                                           |                                                                                                  |\n| deleted_by    | TEXT      |                   | true     |                                                                                                           |                                                                                                  |\n| activity_log  | TEXT      |                   | true     |                                                                                                           | {"isSqlDomainZodDescrMeta":true,"isJsonSqlDomain":true}                                          |\n\n## Constraints\n\n| Name                      | Type        | Definition                                                |\n| ------------------------- | ----------- | --------------------------------------------------------- |\n| device_id                 | PRIMARY KEY | PRIMARY KEY (device_id)                                   |\n| sqlite_autoindex_device_2 | UNIQUE      | UNIQUE (name, state, boundary)                            |\n| sqlite_autoindex_device_1 | PRIMARY KEY | PRIMARY KEY (device_id)                                   |\n| -                         | CHECK       | CHECK(json_valid(state))                                  |\n| -                         | CHECK       | CHECK(json_valid(segmentation) OR segmentation IS NULL)   |\n| -                         | CHECK       | CHECK(json_valid(state_sysinfo) OR state_sysinfo IS NULL) |\n| -                         | CHECK       | CHECK(json_valid(elaboration) OR elaboration IS NULL)     |\n\n## Indexes\n\n| Name                      | Definition                                                          |\n| ------------------------- | ------------------------------------------------------------------- |\n| idx_device__name__state   | CREATE INDEX "idx_device__name__state" ON "device"("name", "state") |\n| sqlite_autoindex_device_2 | UNIQUE (name, state, boundary)                                      |\n| sqlite_autoindex_device_1 | PRIMARY KEY (device_id)                                             |\n\n## Relations\n\n![er](device.svg)\n\n---\n\n> Generated by [tbls](https://github.com/k1LoW/tbls)\n','\n',char(10)),'md',6750,'2023-12-04 02:56:00.319340920 UTC',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFFG58AN1614GCNA7SSVC9','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/uniform_resource_transform.md','bf744b995c1c9af18166381408c4266ae4b9e776',replace('# uniform_resource_transform\n\n## Description\n\nuniform_resource transformed content\n\n<details>\n<summary><strong>Table Definition</strong></summary>\n\n```sql\nCREATE TABLE "uniform_resource_transform" (\n    "uniform_resource_transform_id" VARCHAR PRIMARY KEY NOT NULL,\n    "uniform_resource_id" VARCHAR NOT NULL,\n    "uri" TEXT NOT NULL,\n    "content_digest" TEXT NOT NULL,\n    "content" BLOB,\n    "nature" TEXT,\n    "size_bytes" INTEGER,\n    "elaboration" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "created_by" TEXT DEFAULT ''UNKNOWN'',\n    "updated_at" TIMESTAMP,\n    "updated_by" TEXT,\n    "deleted_at" TIMESTAMP,\n    "deleted_by" TEXT,\n    "activity_log" TEXT,\n    FOREIGN KEY("uniform_resource_id") REFERENCES "uniform_resource"("uniform_resource_id"),\n    UNIQUE("uniform_resource_id", "content_digest", "nature", "size_bytes")\n)\n```\n\n</details>\n\n## Columns\n\n| Name                          | Type      | Default           | Nullable | Parents                                 | Comment                                                 |\n| ----------------------------- | --------- | ----------------- | -------- | --------------------------------------- | ------------------------------------------------------- |\n| uniform_resource_transform_id | VARCHAR   |                   | false    |                                         | uniform_resource_transform ULID primary key             |\n| uniform_resource_id           | VARCHAR   |                   | false    | [uniform_resource](uniform_resource.md) | uniform_resource row ID of original content             |\n| uri                           | TEXT      |                   | false    |                                         |                                                         |\n| content_digest                | TEXT      |                   | false    |                                         | transformed content hash                                |\n| content                       | BLOB      |                   | true     |                                         | transformed content                                     |\n| nature                        | TEXT      |                   | true     |                                         | file extension or MIME                                  |\n| size_bytes                    | INTEGER   |                   | true     |                                         |                                                         |\n| elaboration                   | TEXT      |                   | true     |                                         | anything that doesn''t fit in other columns (JSON)       |\n| created_at                    | TIMESTAMP | CURRENT_TIMESTAMP | true     |                                         |                                                         |\n| created_by                    | TEXT      | ''UNKNOWN''         | true     |                                         |                                                         |\n| updated_at                    | TIMESTAMP |                   | true     |                                         |                                                         |\n| updated_by                    | TEXT      |                   | true     |                                         |                                                         |\n| deleted_at                    | TIMESTAMP |                   | true     |                                         |                                                         |\n| deleted_by                    | TEXT      |                   | true     |                                         |                                                         |\n| activity_log                  | TEXT      |                   | true     |                                         | {"isSqlDomainZodDescrMeta":true,"isJsonSqlDomain":true} |\n\n## Constraints\n\n| Name                                          | Type        | Definition                                                                                                                             |\n| --------------------------------------------- | ----------- | -------------------------------------------------------------------------------------------------------------------------------------- |\n| uniform_resource_transform_id                 | PRIMARY KEY | PRIMARY KEY (uniform_resource_transform_id)                                                                                            |\n| - (Foreign key ID: 0)                         | FOREIGN KEY | FOREIGN KEY (uniform_resource_id) REFERENCES uniform_resource (uniform_resource_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE |\n| sqlite_autoindex_uniform_resource_transform_2 | UNIQUE      | UNIQUE (uniform_resource_id, content_digest, nature, size_bytes)                                                                       |\n| sqlite_autoindex_uniform_resource_transform_1 | PRIMARY KEY | PRIMARY KEY (uniform_resource_transform_id)                                                                                            |\n| -                                             | CHECK       | CHECK(json_valid(elaboration) OR elaboration IS NULL)                                                                                  |\n\n## Indexes\n\n| Name                                                                | Definition                                                                                                                                                  |\n| ------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| idx_uniform_resource_transform__uniform_resource_id__content_digest | CREATE INDEX "idx_uniform_resource_transform__uniform_resource_id__content_digest" ON "uniform_resource_transform"("uniform_resource_id", "content_digest") |\n| sqlite_autoindex_uniform_resource_transform_2                       | UNIQUE (uniform_resource_id, content_digest, nature, size_bytes)                                                                                            |\n| sqlite_autoindex_uniform_resource_transform_1                       | PRIMARY KEY (uniform_resource_transform_id)                                                                                                                 |\n\n## Relations\n\n![er](uniform_resource_transform.svg)\n\n---\n\n> Generated by [tbls](https://github.com/k1LoW/tbls)\n','\n',char(10)),'md',6643,'2023-12-04 02:56:00.329340919 UTC',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFFG5AWCM7RN85YD0RWW0K','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/ur_ingest_session_fs_path_entry.md','6e1b58d537bd3d150a26824fb34d4ce39842722c',replace('# ur_ingest_session_fs_path_entry\n\n## Description\n\nContains entries related to file system content ingestion paths. On multiple executions,  unlike uniform_resource, ur_ingest_session_fs_path_entry rows are always inserted and  references the uniform_resource primary key of its related content.  This method allows for a more efficient query of file version differences across  sessions. With SQL queries, you can detect which sessions have a file added or modified,  which sessions have a file deleted, and what the differences are in file contents  if they were modified across sessions.\n\n<details>\n<summary><strong>Table Definition</strong></summary>\n\n```sql\nCREATE TABLE "ur_ingest_session_fs_path_entry" (\n    "ur_ingest_session_fs_path_entry_id" VARCHAR PRIMARY KEY NOT NULL,\n    "ingest_session_id" VARCHAR NOT NULL,\n    "ingest_fs_path_id" VARCHAR NOT NULL,\n    "uniform_resource_id" VARCHAR,\n    "file_path_abs" TEXT NOT NULL,\n    "file_path_rel_parent" TEXT NOT NULL,\n    "file_path_rel" TEXT NOT NULL,\n    "file_basename" TEXT NOT NULL,\n    "file_extn" TEXT,\n    "captured_executable" TEXT CHECK(json_valid(captured_executable) OR captured_executable IS NULL),\n    "ur_status" TEXT,\n    "ur_diagnostics" TEXT CHECK(json_valid(ur_diagnostics) OR ur_diagnostics IS NULL),\n    "ur_transformations" TEXT CHECK(json_valid(ur_transformations) OR ur_transformations IS NULL),\n    "elaboration" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "created_by" TEXT DEFAULT ''UNKNOWN'',\n    "updated_at" TIMESTAMP,\n    "updated_by" TEXT,\n    "deleted_at" TIMESTAMP,\n    "deleted_by" TEXT,\n    "activity_log" TEXT,\n    FOREIGN KEY("ingest_session_id") REFERENCES "ur_ingest_session"("ur_ingest_session_id"),\n    FOREIGN KEY("ingest_fs_path_id") REFERENCES "ur_ingest_session_fs_path"("ur_ingest_session_fs_path_id"),\n    FOREIGN KEY("uniform_resource_id") REFERENCES "uniform_resource"("uniform_resource_id")\n)\n```\n\n</details>\n\n## Columns\n\n| Name                               | Type      | Default           | Nullable | Parents                                                   | Comment                                                 |\n| ---------------------------------- | --------- | ----------------- | -------- | --------------------------------------------------------- | ------------------------------------------------------- |\n| ur_ingest_session_fs_path_entry_id | VARCHAR   |                   | false    |                                                           | {"isSqlDomainZodDescrMeta":true,"isVarChar":true}       |\n| ingest_session_id                  | VARCHAR   |                   | false    | [ur_ingest_session](ur_ingest_session.md)                 | {"isSqlDomainZodDescrMeta":true,"isVarChar":true}       |\n| ingest_fs_path_id                  | VARCHAR   |                   | false    | [ur_ingest_session_fs_path](ur_ingest_session_fs_path.md) | {"isSqlDomainZodDescrMeta":true,"isVarChar":true}       |\n| uniform_resource_id                | VARCHAR   |                   | true     | [uniform_resource](uniform_resource.md)                   | {"isSqlDomainZodDescrMeta":true,"isVarChar":true}       |\n| file_path_abs                      | TEXT      |                   | false    |                                                           |                                                         |\n| file_path_rel_parent               | TEXT      |                   | false    |                                                           |                                                         |\n| file_path_rel                      | TEXT      |                   | false    |                                                           |                                                         |\n| file_basename                      | TEXT      |                   | false    |                                                           |                                                         |\n| file_extn                          | TEXT      |                   | true     |                                                           |                                                         |\n| captured_executable                | TEXT      |                   | true     |                                                           | {"isSqlDomainZodDescrMeta":true,"isJsonText":true}      |\n| ur_status                          | TEXT      |                   | true     |                                                           |                                                         |\n| ur_diagnostics                     | TEXT      |                   | true     |                                                           | {"isSqlDomainZodDescrMeta":true,"isJsonText":true}      |\n| ur_transformations                 | TEXT      |                   | true     |                                                           | {"isSqlDomainZodDescrMeta":true,"isJsonText":true}      |\n| elaboration                        | TEXT      |                   | true     |                                                           | {"isSqlDomainZodDescrMeta":true,"isJsonText":true}      |\n| created_at                         | TIMESTAMP | CURRENT_TIMESTAMP | true     |                                                           |                                                         |\n| created_by                         | TEXT      | ''UNKNOWN''         | true     |                                                           |                                                         |\n| updated_at                         | TIMESTAMP |                   | true     |                                                           |                                                         |\n| updated_by                         | TEXT      |                   | true     |                                                           |                                                         |\n| deleted_at                         | TIMESTAMP |                   | true     |                                                           |                                                         |\n| deleted_by                         | TEXT      |                   | true     |                                                           |                                                         |\n| activity_log                       | TEXT      |                   | true     |                                                           | {"isSqlDomainZodDescrMeta":true,"isJsonSqlDomain":true} |\n\n## Constraints\n\n| Name                                               | Type        | Definition                                                                                                                                             |\n| -------------------------------------------------- | ----------- | ------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| ur_ingest_session_fs_path_entry_id                 | PRIMARY KEY | PRIMARY KEY (ur_ingest_session_fs_path_entry_id)                                                                                                       |\n| - (Foreign key ID: 0)                              | FOREIGN KEY | FOREIGN KEY (uniform_resource_id) REFERENCES uniform_resource (uniform_resource_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE                 |\n| - (Foreign key ID: 1)                              | FOREIGN KEY | FOREIGN KEY (ingest_fs_path_id) REFERENCES ur_ingest_session_fs_path (ur_ingest_session_fs_path_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE |\n| - (Foreign key ID: 2)                              | FOREIGN KEY | FOREIGN KEY (ingest_session_id) REFERENCES ur_ingest_session (ur_ingest_session_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE                 |\n| sqlite_autoindex_ur_ingest_session_fs_path_entry_1 | PRIMARY KEY | PRIMARY KEY (ur_ingest_session_fs_path_entry_id)                                                                                                       |\n| -                                                  | CHECK       | CHECK(json_valid(captured_executable) OR captured_executable IS NULL)                                                                                  |\n| -                                                  | CHECK       | CHECK(json_valid(ur_diagnostics) OR ur_diagnostics IS NULL)                                                                                            |\n| -                                                  | CHECK       | CHECK(json_valid(ur_transformations) OR ur_transformations IS NULL)                                                                                    |\n| -                                                  | CHECK       | CHECK(json_valid(elaboration) OR elaboration IS NULL)                                                                                                  |\n\n## Indexes\n\n| Name                                                                  | Definition                                                                                                                                                      |\n| --------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| idx_ur_ingest_session_fs_path_entry__ingest_session_id__file_path_abs | CREATE INDEX "idx_ur_ingest_session_fs_path_entry__ingest_session_id__file_path_abs" ON "ur_ingest_session_fs_path_entry"("ingest_session_id", "file_path_abs") |\n| sqlite_autoindex_ur_ingest_session_fs_path_entry_1                    | PRIMARY KEY (ur_ingest_session_fs_path_entry_id)                                                                                                                |\n\n## Relations\n\n![er](ur_ingest_session_fs_path_entry.svg)\n\n---\n\n> Generated by [tbls](https://github.com/k1LoW/tbls)\n','\n',char(10)),'md',10139,'2023-12-04 02:56:00.329340919 UTC',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFFG5CPME4MMY6WV5N04FF','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/behavior.md','cf6054927ac6eb55aada7884974e7358e599c3f2',replace('# behavior\n\n## Description\n\nBehaviors are configuration "presets" that can be used to drive  \napplication operations at runtime. For example, ingest behaviors  \ninclude configs that indicate which files to ignore, which to  \nscan, when to load content, etc. This is more convenient than  \ncreating  \n  \nbehavior has a foreign key reference to the device table since  \nbehaviors might be device-specific.\n\n<details>\n<summary><strong>Table Definition</strong></summary>\n\n```sql\nCREATE TABLE "behavior" (\n    "behavior_id" VARCHAR PRIMARY KEY NOT NULL,\n    "device_id" VARCHAR NOT NULL,\n    "behavior_name" TEXT NOT NULL,\n    "behavior_conf_json" TEXT CHECK(json_valid(behavior_conf_json)) NOT NULL,\n    "assurance_schema_id" VARCHAR,\n    "governance" TEXT CHECK(json_valid(governance) OR governance IS NULL),\n    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "created_by" TEXT DEFAULT ''UNKNOWN'',\n    "updated_at" TIMESTAMP,\n    "updated_by" TEXT,\n    "deleted_at" TIMESTAMP,\n    "deleted_by" TEXT,\n    "activity_log" TEXT,\n    FOREIGN KEY("device_id") REFERENCES "device"("device_id"),\n    FOREIGN KEY("assurance_schema_id") REFERENCES "assurance_schema"("assurance_schema_id"),\n    UNIQUE("device_id", "behavior_name")\n)\n```\n\n</details>\n\n## Columns\n\n| Name                | Type      | Default           | Nullable | Children                                  | Parents             | Comment                                                                                      |\n| ------------------- | --------- | ----------------- | -------- | ----------------------------------------- | ------------------- | -------------------------------------------------------------------------------------------- |\n| behavior_id         | VARCHAR   |                   | false    | [ur_ingest_session](ur_ingest_session.md) |                     | {"isSqlDomainZodDescrMeta":true,"isVarChar":true}                                            |\n| device_id           | VARCHAR   |                   | false    |                                           | [device](device.md) | {"isSqlDomainZodDescrMeta":true,"isVarChar":true}                                            |\n| behavior_name       | TEXT      |                   | false    |                                           |                     | Arbitrary but unique per-device behavior name (e.g. ingest::xyz)                             |\n| behavior_conf_json  | TEXT      |                   | false    |                                           |                     | Configuration, settings, parameters, etc. describing the behavior (JSON, behavior-dependent) |\n| assurance_schema_id | VARCHAR   |                   | true     |                                           |                     | {"isSqlDomainZodDescrMeta":true,"isVarChar":true}                                            |\n| governance          | TEXT      |                   | true     |                                           |                     | Descriptions or other "governance" details (JSON, behavior-dependent)                        |\n| created_at          | TIMESTAMP | CURRENT_TIMESTAMP | true     |                                           |                     |                                                                                              |\n| created_by          | TEXT      | ''UNKNOWN''         | true     |                                           |                     |                                                                                              |\n| updated_at          | TIMESTAMP |                   | true     |                                           |                     |                                                                                              |\n| updated_by          | TEXT      |                   | true     |                                           |                     |                                                                                              |\n| deleted_at          | TIMESTAMP |                   | true     |                                           |                     |                                                                                              |\n| deleted_by          | TEXT      |                   | true     |                                           |                     |                                                                                              |\n| activity_log        | TEXT      |                   | true     |                                           |                     | {"isSqlDomainZodDescrMeta":true,"isJsonSqlDomain":true}                                      |\n\n## Constraints\n\n| Name                        | Type        | Definition                                                                                                                             |\n| --------------------------- | ----------- | -------------------------------------------------------------------------------------------------------------------------------------- |\n| behavior_id                 | PRIMARY KEY | PRIMARY KEY (behavior_id)                                                                                                              |\n| - (Foreign key ID: 0)       | FOREIGN KEY | FOREIGN KEY (assurance_schema_id) REFERENCES assurance_schema (assurance_schema_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE |\n| - (Foreign key ID: 1)       | FOREIGN KEY | FOREIGN KEY (device_id) REFERENCES device (device_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE                               |\n| sqlite_autoindex_behavior_2 | UNIQUE      | UNIQUE (device_id, behavior_name)                                                                                                      |\n| sqlite_autoindex_behavior_1 | PRIMARY KEY | PRIMARY KEY (behavior_id)                                                                                                              |\n| -                           | CHECK       | CHECK(json_valid(behavior_conf_json))                                                                                                  |\n| -                           | CHECK       | CHECK(json_valid(governance) OR governance IS NULL)                                                                                    |\n\n## Indexes\n\n| Name                        | Definition                        |\n| --------------------------- | --------------------------------- |\n| sqlite_autoindex_behavior_2 | UNIQUE (device_id, behavior_name) |\n| sqlite_autoindex_behavior_1 | PRIMARY KEY (behavior_id)         |\n\n## Relations\n\n![er](behavior.svg)\n\n---\n\n> Generated by [tbls](https://github.com/k1LoW/tbls)\n','\n',char(10)),'md',6720,'2023-12-04 02:56:00.319340920 UTC',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFFG5E6TFFG249SJTGXKMZ','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/ur_ingest_resource_path_rewrite_rule.md','346a5562c25d99d45e1563d16f802e90d255e715',replace('# ur_ingest_resource_path_rewrite_rule\n\n## Description\n\nA regular expression can determine the flags to apply to an ingestion path  \nand if the regular expr contains a nature capture group that pattern match  \nwill assign the nature too.\n\n<details>\n<summary><strong>Table Definition</strong></summary>\n\n```sql\nCREATE TABLE "ur_ingest_resource_path_rewrite_rule" (\n    "ur_ingest_resource_path_rewrite_rule_id" VARCHAR PRIMARY KEY NOT NULL,\n    "namespace" TEXT NOT NULL,\n    "regex" TEXT NOT NULL,\n    "replace" TEXT NOT NULL,\n    "description" TEXT,\n    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "created_by" TEXT DEFAULT ''UNKNOWN'',\n    "updated_at" TIMESTAMP,\n    "updated_by" TEXT,\n    "deleted_at" TIMESTAMP,\n    "deleted_by" TEXT,\n    "activity_log" TEXT,\n    UNIQUE("namespace", "regex", "replace")\n)\n```\n\n</details>\n\n## Columns\n\n| Name                                    | Type      | Default           | Nullable | Comment                                                 |\n| --------------------------------------- | --------- | ----------------- | -------- | ------------------------------------------------------- |\n| ur_ingest_resource_path_rewrite_rule_id | VARCHAR   |                   | false    | {"isSqlDomainZodDescrMeta":true,"isVarChar":true}       |\n| namespace                               | TEXT      |                   | false    |                                                         |\n| regex                                   | TEXT      |                   | false    |                                                         |\n| replace                                 | TEXT      |                   | false    |                                                         |\n| description                             | TEXT      |                   | true     |                                                         |\n| created_at                              | TIMESTAMP | CURRENT_TIMESTAMP | true     |                                                         |\n| created_by                              | TEXT      | ''UNKNOWN''         | true     |                                                         |\n| updated_at                              | TIMESTAMP |                   | true     |                                                         |\n| updated_by                              | TEXT      |                   | true     |                                                         |\n| deleted_at                              | TIMESTAMP |                   | true     |                                                         |\n| deleted_by                              | TEXT      |                   | true     |                                                         |\n| activity_log                            | TEXT      |                   | true     | {"isSqlDomainZodDescrMeta":true,"isJsonSqlDomain":true} |\n\n## Constraints\n\n| Name                                                    | Type        | Definition                                            |\n| ------------------------------------------------------- | ----------- | ----------------------------------------------------- |\n| ur_ingest_resource_path_rewrite_rule_id                 | PRIMARY KEY | PRIMARY KEY (ur_ingest_resource_path_rewrite_rule_id) |\n| sqlite_autoindex_ur_ingest_resource_path_rewrite_rule_2 | UNIQUE      | UNIQUE (namespace, regex, replace)                    |\n| sqlite_autoindex_ur_ingest_resource_path_rewrite_rule_1 | PRIMARY KEY | PRIMARY KEY (ur_ingest_resource_path_rewrite_rule_id) |\n\n## Indexes\n\n| Name                                                    | Definition                                            |\n| ------------------------------------------------------- | ----------------------------------------------------- |\n| sqlite_autoindex_ur_ingest_resource_path_rewrite_rule_2 | UNIQUE (namespace, regex, replace)                    |\n| sqlite_autoindex_ur_ingest_resource_path_rewrite_rule_1 | PRIMARY KEY (ur_ingest_resource_path_rewrite_rule_id) |\n\n## Relations\n\n![er](ur_ingest_resource_path_rewrite_rule.svg)\n\n---\n\n> Generated by [tbls](https://github.com/k1LoW/tbls)\n','\n',char(10)),'md',4144,'2023-12-04 02:56:00.329340919 UTC',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFFG5F2M2K0AKD3WW2K74B','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/ur_ingest_session_fs_path.md','9ea65a03308a233b7e68811167505574dd7870fb',replace('# ur_ingest_session_fs_path\n\n## Description\n\nImmutable ingest session file system path represents a discovery or "walk" path. If  the session included a file system scan, then root_path is the  root file system path that was scanned. If the session was discovering  resources in another target then root_path would be  representative of the target path (could be a URI).\n\n<details>\n<summary><strong>Table Definition</strong></summary>\n\n```sql\nCREATE TABLE "ur_ingest_session_fs_path" (\n    "ur_ingest_session_fs_path_id" VARCHAR PRIMARY KEY NOT NULL,\n    "ingest_session_id" VARCHAR NOT NULL,\n    "root_path" TEXT NOT NULL,\n    "elaboration" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),\n    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "created_by" TEXT DEFAULT ''UNKNOWN'',\n    "updated_at" TIMESTAMP,\n    "updated_by" TEXT,\n    "deleted_at" TIMESTAMP,\n    "deleted_by" TEXT,\n    "activity_log" TEXT,\n    FOREIGN KEY("ingest_session_id") REFERENCES "ur_ingest_session"("ur_ingest_session_id"),\n    UNIQUE("ingest_session_id", "root_path", "created_at")\n)\n```\n\n</details>\n\n## Columns\n\n| Name                         | Type      | Default           | Nullable | Children                                                                                                      | Parents                                   | Comment                                                 |\n| ---------------------------- | --------- | ----------------- | -------- | ------------------------------------------------------------------------------------------------------------- | ----------------------------------------- | ------------------------------------------------------- |\n| ur_ingest_session_fs_path_id | VARCHAR   |                   | false    | [uniform_resource](uniform_resource.md) [ur_ingest_session_fs_path_entry](ur_ingest_session_fs_path_entry.md) |                                           | {"isSqlDomainZodDescrMeta":true,"isVarChar":true}       |\n| ingest_session_id            | VARCHAR   |                   | false    |                                                                                                               | [ur_ingest_session](ur_ingest_session.md) | {"isSqlDomainZodDescrMeta":true,"isVarChar":true}       |\n| root_path                    | TEXT      |                   | false    |                                                                                                               |                                           |                                                         |\n| elaboration                  | TEXT      |                   | true     |                                                                                                               |                                           | {"isSqlDomainZodDescrMeta":true,"isJsonText":true}      |\n| created_at                   | TIMESTAMP | CURRENT_TIMESTAMP | true     |                                                                                                               |                                           |                                                         |\n| created_by                   | TEXT      | ''UNKNOWN''         | true     |                                                                                                               |                                           |                                                         |\n| updated_at                   | TIMESTAMP |                   | true     |                                                                                                               |                                           |                                                         |\n| updated_by                   | TEXT      |                   | true     |                                                                                                               |                                           |                                                         |\n| deleted_at                   | TIMESTAMP |                   | true     |                                                                                                               |                                           |                                                         |\n| deleted_by                   | TEXT      |                   | true     |                                                                                                               |                                           |                                                         |\n| activity_log                 | TEXT      |                   | true     |                                                                                                               |                                           | {"isSqlDomainZodDescrMeta":true,"isJsonSqlDomain":true} |\n\n## Constraints\n\n| Name                                         | Type        | Definition                                                                                                                             |\n| -------------------------------------------- | ----------- | -------------------------------------------------------------------------------------------------------------------------------------- |\n| ur_ingest_session_fs_path_id                 | PRIMARY KEY | PRIMARY KEY (ur_ingest_session_fs_path_id)                                                                                             |\n| - (Foreign key ID: 0)                        | FOREIGN KEY | FOREIGN KEY (ingest_session_id) REFERENCES ur_ingest_session (ur_ingest_session_id) ON UPDATE NO ACTION ON DELETE NO ACTION MATCH NONE |\n| sqlite_autoindex_ur_ingest_session_fs_path_2 | UNIQUE      | UNIQUE (ingest_session_id, root_path, created_at)                                                                                      |\n| sqlite_autoindex_ur_ingest_session_fs_path_1 | PRIMARY KEY | PRIMARY KEY (ur_ingest_session_fs_path_id)                                                                                             |\n| -                                            | CHECK       | CHECK(json_valid(elaboration) OR elaboration IS NULL)                                                                                  |\n\n## Indexes\n\n| Name                                                        | Definition                                                                                                                                  |\n| ----------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------- |\n| idx_ur_ingest_session_fs_path__ingest_session_id__root_path | CREATE INDEX "idx_ur_ingest_session_fs_path__ingest_session_id__root_path" ON "ur_ingest_session_fs_path"("ingest_session_id", "root_path") |\n| sqlite_autoindex_ur_ingest_session_fs_path_2                | UNIQUE (ingest_session_id, root_path, created_at)                                                                                           |\n| sqlite_autoindex_ur_ingest_session_fs_path_1                | PRIMARY KEY (ur_ingest_session_fs_path_id)                                                                                                  |\n\n## Relations\n\n![er](ur_ingest_session_fs_path.svg)\n\n---\n\n> Generated by [tbls](https://github.com/k1LoW/tbls)\n','\n',char(10)),'md',7448,'2023-12-04 02:56:00.329340919 UTC',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFFG5HR6EV7GSEEWEZF49E','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/ur_ingest_resource_path_match_rule.md','214b44d0ea743b090b93e07a38b48ef0aa78cfa7',replace('# ur_ingest_resource_path_match_rule\n\n## Description\n\nA regular expression can determine the flags to apply to an ingestion path  \nand if the regular expr contains a nature capture group that pattern match  \nwill assign the nature too.\n\n<details>\n<summary><strong>Table Definition</strong></summary>\n\n```sql\nCREATE TABLE "ur_ingest_resource_path_match_rule" (\n    "ur_ingest_resource_path_match_rule_id" VARCHAR PRIMARY KEY NOT NULL,\n    "namespace" TEXT NOT NULL,\n    "regex" TEXT NOT NULL,\n    "flags" TEXT NOT NULL,\n    "nature_regex_capture" TEXT,\n    "description" TEXT,\n    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    "created_by" TEXT DEFAULT ''UNKNOWN'',\n    "updated_at" TIMESTAMP,\n    "updated_by" TEXT,\n    "deleted_at" TIMESTAMP,\n    "deleted_by" TEXT,\n    "activity_log" TEXT,\n    UNIQUE("namespace", "regex")\n)\n```\n\n</details>\n\n## Columns\n\n| Name                                  | Type      | Default           | Nullable | Comment                                                 |\n| ------------------------------------- | --------- | ----------------- | -------- | ------------------------------------------------------- |\n| ur_ingest_resource_path_match_rule_id | VARCHAR   |                   | false    | {"isSqlDomainZodDescrMeta":true,"isVarChar":true}       |\n| namespace                             | TEXT      |                   | false    |                                                         |\n| regex                                 | TEXT      |                   | false    |                                                         |\n| flags                                 | TEXT      |                   | false    |                                                         |\n| nature_regex_capture                  | TEXT      |                   | true     |                                                         |\n| description                           | TEXT      |                   | true     |                                                         |\n| created_at                            | TIMESTAMP | CURRENT_TIMESTAMP | true     |                                                         |\n| created_by                            | TEXT      | ''UNKNOWN''         | true     |                                                         |\n| updated_at                            | TIMESTAMP |                   | true     |                                                         |\n| updated_by                            | TEXT      |                   | true     |                                                         |\n| deleted_at                            | TIMESTAMP |                   | true     |                                                         |\n| deleted_by                            | TEXT      |                   | true     |                                                         |\n| activity_log                          | TEXT      |                   | true     | {"isSqlDomainZodDescrMeta":true,"isJsonSqlDomain":true} |\n\n## Constraints\n\n| Name                                                  | Type        | Definition                                          |\n| ----------------------------------------------------- | ----------- | --------------------------------------------------- |\n| ur_ingest_resource_path_match_rule_id                 | PRIMARY KEY | PRIMARY KEY (ur_ingest_resource_path_match_rule_id) |\n| sqlite_autoindex_ur_ingest_resource_path_match_rule_2 | UNIQUE      | UNIQUE (namespace, regex)                           |\n| sqlite_autoindex_ur_ingest_resource_path_match_rule_1 | PRIMARY KEY | PRIMARY KEY (ur_ingest_resource_path_match_rule_id) |\n\n## Indexes\n\n| Name                                                  | Definition                                          |\n| ----------------------------------------------------- | --------------------------------------------------- |\n| sqlite_autoindex_ur_ingest_resource_path_match_rule_2 | UNIQUE (namespace, regex)                           |\n| sqlite_autoindex_ur_ingest_resource_path_match_rule_1 | PRIMARY KEY (ur_ingest_resource_path_match_rule_id) |\n\n## Relations\n\n![er](ur_ingest_resource_path_match_rule.svg)\n\n---\n\n> Generated by [tbls](https://github.com/k1LoW/tbls)\n','\n',char(10)),'md',4235,'2023-12-04 02:56:00.319340920 UTC',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFFG5KGEK09739NA9SN2A0','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/CONTRIBUTING.md','685907f6dc1b4f921ac43a5c76b9bcbab7cecd85',replace('# Development and Contributors Guide\n\n**IMPORTANT**: Use SQLa to generate all SQL so it''s portable but use Rusqlite to\nmake working with SQLite more ergonomic. Remember to only use libraries to help\nimprove developer productivity, always assume SQLite database will be used\nacross polyglot programming environments so SQL code should be transparent and\nportable.\n\nDevelopment prerequisites:\n\n- Install Rust toolchain (1.73 or above, best to use `rustup`, `asdf` or `rtx`\n  for multiple simultaneous versions)\n- `cargo install just` so we can use `Justfile` for task management\n\nRegular use:\n\n```bash\n$ just --completions fish | source            # setup completions to reduce typing\n\n$ just test                                   # run unit tests with cargo nextest\n\n$ just run                                    # get CLI help\n$ cargo run -- --help                         # get CLI help, same as above\n\n$ just run admin cli-help-md                  # get CLI in Markdown and update this README.md manually\n$ cargo run -- --help-markdown > CLI-help.md  # get CLI in Markdown, same as above\n\n$ just run ingest --help                     # get CLI help for ingest subcommand\n$ just run --debug ingest                    # walk the current working directory (CWD) with debug messages\n$ just run ingest -r /other -r /other2       # walk some other director(ies)\n$ just run ingest -i .git/                   # walk CWD, ignore .git/ paths\n$ just run ingest -i .git/ -i target/        # walk CWD, ignore .git/ and target/ paths\n\n$ just sqla-sync                              # generate SQLa bootstrap and other SQL\n                                             \n$ just dev                                    # turn on auto-compile, auto-run during development\n                                              # using cargo-watch command\n```\n','\n',char(10)),'md',1832,'2023-11-24 14:13:51.593935050 UTC',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFFG5N8145CZ4Q7YXTSYHM','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/sql-aide/README.md','d411150d2edc6fa75403cc0ad54d41b055b996ed',replace('# SQL Aide (`SQLa`) Notebooks\n\nThis directory is a SQL generator which produces all the SQL used by our utility\nin consistent, high-quality manner.\n\n## Notebook Cells for Script Storage & Execution Tracking\n\nThe `code_notebook_cell` table serves as a comprehensive repository to store\nand manage SQL scripts of all kinds, including but not limited to:\n\n- `SQL DDL`: For database structure modifications such as `CREATE`, `ALTER`, and\n  `DROP`.\n- `SQL DQL`: Scripts related to data querying like `SELECT` operations.\n- `SQL DML`: Scripts for data manipulation including `INSERT`, `UPDATE`, and\n  `DELETE`.\n- ... and other SQL operations.\n\nWhile it''s versatile enough to manage various SQL tasks, `code_notebook_cell`\ntable''s primary advantage lies in storing SQL DDL scripts needed for migrations\n\n**Columns**:\n\n- `code_notebook_cell_id`: A unique identifier for each SQL script.\n- `notebook_name`: Broad categorization or project name. Especially useful for\n  grouping related migration scripts.\n- `cell_name`: A descriptive name for the SQL operation or step.\n- `cell_governance`: Optional JSON field for any governance or\n  compliance-related data.\n- `kernel`: The SQL dialect or interpreter the script targets, such as\n  PostgreSQL, MySQL, etc. (might also support shebang-style for non SQL)\n- `interpretable_code`: The SQL script itself (or any other runtime).\n- `description`: A brief description or context regarding the purpose of the\n  script.\n- `activity_log`: optional JSON which stores the history of the changes to thie\n  notebook cell\n\n### Migration Scripts & Database Evolution\n\nOne of the best uses for `code_notebook_cell` is to manage SQL DDL scripts\ncrucial for database migrations. As databases evolve, tracking structural\nchanges becomes vital. By cataloging these DDL scripts, one can maintain a clear\nversion history, ensuring that database evolution is orderly, reversible, and\nauditable.\n\nTo maintain a clear audit trail of script execution, the `code_notebook_state`\ntable logs each execution''s status. And, migration scripts can use the state to\nknow whether something has already been executed.\n\n**Inserting a New Execution State**:\n\nTo log the execution of a script, you can add an entry like so:\n\n```sql\nINSERT INTO code_notebook_state \n(code_notebook_state_id, code_notebook_cell_id, from_state, to_state, created_at, created_by)\nVALUES\n(\n    ''generated_or_provided_state_id'',\n    (SELECT code_notebook_cell_id \n     FROM code_notebook_cell \n     WHERE notebook_name = ''specific_project_name'' \n     AND cell_name = ''specific_script_name''),\n    ''INITIAL'',\n    ''EXECUTED'',\n    CURRENT_TIMESTAMP,\n    ''executor_name_or_system''\n);\n```\n\n**State Transitions**:\n\nWith `from_state` and `to_state`, you can track a script''s lifecycle, from its\n`INITIAL` state to any subsequent states like ''EXECUTED'', ''ROLLED_BACK'', etc.\nThis provides a traceable path of script interactions.\n\n### CLI Use\n\nOne way to keep your code and the database in sync is to just use the database\nto get its SQL (instead of putting it into an app) and execute the SQL directly\nin the database.\n\n```bash\n$ sqlite3 xyz.db "select sql from code_notebook_cell where code_notebook_cell_id = ''infoSchemaMarkdown''" | sqlite3 xyz.db\n```\n\nYou can pass in arguments using `.parameter` or `sql_parameters` table, like:\n\n```bash\n$ echo ".parameter set X Y; $(sqlite3 xyz.db \"SELECT sql FROM code_notebook_cell where code_notebook_cell_id = ''init''\")" | sqlite3 xyz.db\n```\n','\n',char(10)),'md',3455,'2023-11-02 16:38:18.034030851 UTC',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFFG5N8QN53AYWTR830Q9B','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/synthetic.conf.sql','-',NULL,'sql',459,'2023-11-24 18:56:37.009026818 UTC',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFFG5STJ2HMB5QEXPFFN5N','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/README.md','e2c1c37ab4eee0368ad815f7dc0884d828510101',replace('# Resource Surveillance Test Fixtures\n\nThis directory contains _test fixtures_ (synthetic files) that can be used by\n`ingest` and similar commands during end-to-end testing.\n','\n',char(10)),'md',174,'2023-11-24 14:03:03.804132677 UTC',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFFG5VP15S87H0495H8H72','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/capturable-executable.surveilr[json].sh','e407d82af11d1956b7d777fbb71983eae20e9da5',replace('{ "test": "JSON" }\n','\n',char(10)),'json',19,'2023-12-04 03:55:46.747568598 UTC',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFFGASNV3BDA5SRQEP487G','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/capturable-executable.surveilr[json].ts','8ade03175686fefafdb346dfec5e25515d038dec',replace('{\n    "opsfolio-evidence": [\n        {\n            "fii": "xyz1",\n            "producer": "cmd1",\n            "evidence": "output from cmd1"\n        },\n        {\n            "fii": "xyz2",\n            "producer": "cmd2",\n            "evidence": "output from cmd2"\n        }\n    ]\n}\n','\n',char(10)),'json',282,'2023-12-04 03:55:46.905757528 UTC',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFFGAW0YGJJ3YVHAZM4W2F','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/markdown-with-frontmatter.md','7905c5fc0c3c06b6cc4d195ba8de75e05d2e74e8',replace('---\ntitle: "Markdown with YAML Frontmatter Fixture"\ntags:\n  - tag1\n  - tag2\n  - tag3\n---\n\nThis is a **test** of _Markdown with Frontmatter_.\n','\n',char(10)),'md',141,'2023-11-22 15:52:12.097279429 UTC',replace('{\012  "attrs": {\012    "tags": [\012      "tag1",\012      "tag2",\012      "tag3"\012    ],\012    "title": "Markdown with YAML Frontmatter Fixture"\012  },\012  "body": "\nThis is a **test** of _Markdown with Frontmatter_.\n",\012  "frontMatter": "---\ntitle: \"Markdown with YAML Frontmatter Fixture\"\ntags:\n  - tag1\n  - tag2\n  - tag3\n---\n"\012}','\012',char(10)),replace('{\n  "tags": [\n    "tag1",\n    "tag2",\n    "tag3"\n  ],\n  "title": "Markdown with YAML Frontmatter Fixture"\n}','\n',char(10)),NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFFGAY0H9P4WERGGYZ9YZC','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/echo-stdin.surveilr[json].sh','e2146cd55eeb3e2fd5463c5e5ef8a71043433214',replace('{\n  "surveilr-ingest": {\n    "args": {\n      "state_db_fs_path": "resource-surveillance.sqlite.db"\n    },\n    "behavior": {\n      "classifier": {\n        "flaggables": [\n          {\n            "flags": "IGNORE_RESOURCE",\n            "nature_regex_capture": null,\n            "regex": "/(\\.git|node_modules)/"\n          },\n          {\n            "flags": "CONTENT_ACQUIRABLE",\n            "nature_regex_capture": "nature",\n            "regex": "\\.(?P<nature>md|mdx|html|json|jsonc|puml|txt|toml|yml)$"\n          },\n          {\n            "flags": "CAPTURABLE_EXECUTABLE",\n            "nature_regex_capture": "nature",\n            "regex": "surveilr\\[(?P<nature>[^\\]]*)\\]"\n          },\n          {\n            "flags": "CAPTURABLE_EXECUTABLE | CAPTURABLE_SQL",\n            "nature_regex_capture": null,\n            "regex": "surveilr-SQL"\n          },\n          {\n            "flags": "IGNORE_RESOURCE",\n            "nature_regex_capture": null,\n            "regex": "^/home/snshah/workspaces/github\\.com/opsfolio/resource\\-surveillance/resource\\-surveillance\\.sqlite\\.db$"\n          },\n          {\n            "flags": "IGNORE_RESOURCE",\n            "nature_regex_capture": null,\n            "regex": "^/home/snshah/workspaces/github\\.com/opsfolio/resource\\-surveillance/resource\\-surveillance\\.sqlite\\.wal$"\n          },\n          {\n            "flags": "IGNORE_RESOURCE",\n            "nature_regex_capture": null,\n            "regex": "^/home/snshah/workspaces/github\\.com/opsfolio/resource\\-surveillance/resource\\-surveillance\\.sqlite\\.db\\-journal$"\n          }\n        ],\n        "rewrite_nature_regexs": [\n          {\n            "regex": "(?P<nature>\\.plantuml)$",\n            "replace": ".puml"\n          },\n          {\n            "regex": "(?P<nature>\\.text)$",\n            "replace": ".txt"\n          },\n          {\n            "regex": "(?P<nature>\\.yaml)$",\n            "replace": ".yml"\n          }\n        ],\n        "smart_ignore_conf_files": [\n          ".surveilr_ignore"\n        ]\n      },\n      "root_fs_paths": [\n        "."\n      ]\n    },\n    "device": {\n      "device_id": "01HGSFFG3F3T79WAZ4YN0C59ZD"\n    },\n    "env": {\n      "current_dir": "/home/snshah/workspaces/github.com/opsfolio/resource-surveillance"\n    },\n    "session": {\n      "dir-entry": {\n        "path": "/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/echo-stdin.surveilr[json].sh"\n      },\n      "walk-path-id": "01HGSFFG3KKSY9VM7TN4AT7A30",\n      "walk-session-id": "01HGSFFG3KT5WQX7HKZDPPXHE2"\n    }\n  }\n}','\n',char(10)),'json',2565,'2023-12-04 03:55:46.910614783 UTC',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFFGB0CYJG930HVMV4WXNG','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/unknown-extension.xyz','-',NULL,'xyz',94,'2023-11-20 13:27:12.901990620 UTC',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFFGB001C068JPVZ37Z1DC','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/plain.text','848996f810906943e0fe79127a3ec811272b6f9d','this is plain text content','txt',26,'2023-11-21 14:56:08.385477741 UTC',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFFGB04V7FFK30G5Y88G6X','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/plain-text.txt','848996f810906943e0fe79127a3ec811272b6f9d','this is plain text content','txt',26,'2023-11-20 13:59:26.521399983 UTC',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFFGB01G2WVFCCYBMC38B5','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/.github/workflows/release.yml','e00d6acab53d8ac5ef2790bf6568824a1150a3b6',replace('on:\n  release:\n    types: [created]\n\njobs:\n  linux-windows-release:\n    name: release ${{ matrix.target }}\n    runs-on: ${{ matrix.os }}\n    strategy:\n      fail-fast: false\n      matrix:\n        include:\n          - target: x86_64-pc-windows-gnu\n            archive: zip\n            os: ubuntu-latest\n          - target: x86_64-unknown-linux-musl\n            archive: tar.gz tar.xz tar.zst\n            os: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - name: Compile and release\n        uses: rust-build/rust-build.action@v1.4.4\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n        with:\n          RUSTTARGET: ${{ matrix.target }}\n          ARCHIVE_TYPES: ${{ matrix.archive }}\n\n  macos-release:\n    name: release x86_64-apple-darwin\n    runs-on: macos-latest\n    strategy:\n      matrix:\n        toolchain: [stable]\n        triple:\n          - { target: x86_64-apple-darwin, cross: false }\n    steps:\n      - uses: actions/checkout@v2\n      - name: Install toolchain\n        uses: actions-rs/toolchain@v1\n        with:\n          profile: minimal\n          toolchain: ${{ matrix.toolchain }}\n          override: true\n      - name: Build with Cargo\n        run: |\n          cargo build --release --target ${{ matrix.triple.target }}\n          ./target/${{ matrix.triple.target }}/release/surveilr --help\n          zip -r ${{ matrix.triple.target }}-release.zip target/${{ matrix.triple.target }}/release/surveilr\n      - name: Upload to Release\n        uses: actions/upload-release-asset@v1\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n        with:\n          upload_url: ${{ github.event.release.upload_url }} # This is the upload URL for the release\n          asset_path: ${{ matrix.triple.target }}-release.zip\n          asset_name: ${{ matrix.triple.target }}-release.zip\n          asset_content_type: application/zip\n','\n',char(10)),'yml',1881,'2023-11-15 14:08:18.753609625 UTC',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFFGB1YK51463A3MSNE639','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/.github/workflows/rust.yml','df819aad5090c0edc5c515cd3e0224b9c479e365',replace('name: Rust\n\non:\n  push:\n    branches: ["main"]\n  pull_request:\n    branches: ["main"]\n\nenv:\n  CARGO_TERM_COLOR: always\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n\n    steps:\n      - uses: actions/checkout@v3\n      - name: Build\n        run: cargo build --verbose\n      - name: Run tests\n        run: cargo test --verbose\n      - name: Lint (try cargo clippy --fix on your own workstation)\n        run: cargo clippy --verbose -- -D warnings\n      - name: Security audit\n        run: cargo install cargo-audit && cargo audit\n','\n',char(10)),'yml',523,'2023-11-02 16:38:18.034030851 UTC',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFFGB19N4BAFW5YKCN7CJZ','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/Cargo.lock','-',NULL,'lock',44371,'2023-12-04 02:32:21.169775127 UTC',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFFGB1SV0QTKW9N8F6H2EG','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/Cargo.toml','04cd2d2a7e29bd39e4083377b33b31075e15d734',replace('[package]\nname = "surveilr"\nversion = "0.11.1"\nedition = "2021"\n\n# Before getting arbitrary crates check https://blessed.rs for opinionated list of "best" crates.\n[dependencies]\nanyhow = "1.0.75"\nbase64 = "0.21.5"\nbitflags = { version = "2.4.1", features = ["serde"] }\nchrono = { version = "0.4.31", features = ["serde"] }\nclap = { version = "4.4.7", features = ["derive", "env"] }\nclap-markdown = "0.1.3"\ncomfy-table = "7.1.0"\ndeno_task_shell = { version = "0.14.2", features = ["shell", "serialization"] }\nglob = "0.3.1"\nglobset = "0.4.13"\nglobwalk = "0.8.1"\nhostname = "0.3.1"\nignore = "0.4.20"\nindoc = "2.0.4"\nis_executable = "1.0.1"\nlazy_static = "1.4.0"\nos_pipe = { version = "1.1.4", optional = true }\npretty_assertions = "1.4.0"\nregex = { version = "1.10.2", features = ["std"], default-features = false }\nrusqlite = { version = "0.30.0", features = ["bundled", "functions"] }\nserde = { version = "1.0.190", features = ["derive"] }\nserde_json = "1.0.107"\nserde_rusqlite = "0.34.0"\nserde_regex = "1.1.0"\nserde_yaml = "0.9.27"\nsha1 = "0.10.6"\nsubprocess = "0.2.9"\nsysinfo = { version = "0.29.10", features = ["multithread", "rayon", "serde"] }\ntempfile = "3.8.1"\ntokio = { version = "1.34.0", features = ["full"] }\ntoml = "0.8.8"\nulid = { version = "1.1.0", features = ["rand", "std", "serde", "uuid"] }\nvfs = { version = "0.10.0", features = ["embedded-fs"] }\nwalkdir = "2.4.0"\n','\n',char(10)),'toml',1385,'2023-12-04 02:32:20.669775409 UTC',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFFGB1MHCTASK6B8AG4SP8','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/.vscode/settings.json','67a5e33227d760149d6ad2ee0f65824585a4e227',replace('{\n  "editor.formatOnSave": true,\n  "git.autofetch": true,\n  "deno.enable": true,\n  "deno.lint": true,\n  "deno.unstable": true,\n  "todo-tree.regex.regex": "(//|#|<!--|;|/\\*|^|^[ \\t]*(-|\\d+.))\\s*($TAGS)|todo!",\n  "rust-analyzer.check.command": "clippy",\n  "terminal.integrated.fontFamily": "CascadianCode NF",\n  "rust-analyzer.linkedProjects": ["./Cargo.toml"],\n  "hediet.vscode-drawio.theme": "atlas"\n}\n','\n',char(10)),'json',406,'2023-11-09 18:40:38.666393845 UTC',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFFGB1V54XWPES3S08AYHM','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/.vscode/extensions.json','98d162b61b4404913a5c2f963fe3c26be2991739',replace('{\n  "recommendations": [\n    "usernamehw.errorlens",\n    "serayuzgur.crates",\n    "rust-lang.rust-analyzer",\n    "yzhang.markdown-all-in-one",\n    "shd101wyy.markdown-preview-enhanced",\n    "denoland.vscode-deno",\n    "tamasfe.even-better-toml",\n    "gruntfuggly.todo-tree",\n    "kokakiwi.vscode-just",\n    "yy0931.vscode-sqlite3-editor",\n    "hediet.vscode-drawio",\n    "jebbs.plantuml"\n  ]\n}\n','\n',char(10)),'json',394,'2023-12-03 17:06:36.052110792 UTC',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFFGB1MAX1JXPYF7V94V6G','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/install.sh','-',NULL,'sh',843,'2023-11-09 01:17:56.299890262 UTC',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFR038N8N14QRMB7TRKS12','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/capturable-executable.surveilr[json].sh','e407d82af11d1956b7d777fbb71983eae20e9da5',replace('{ "test": "JSON" }\n','\n',char(10)),'json',19,'2023-12-04 04:00:25.191981231 UTC',NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFR06WX55MZCSCK48VRRKH','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/capturable-executable.surveilr[json].ts','8ade03175686fefafdb346dfec5e25515d038dec',replace('{\n    "opsfolio-evidence": [\n        {\n            "fii": "xyz1",\n            "producer": "cmd1",\n            "evidence": "output from cmd1"\n        },\n        {\n            "fii": "xyz2",\n            "producer": "cmd2",\n            "evidence": "output from cmd2"\n        }\n    ]\n}\n','\n',char(10)),'json',282,'2023-12-04 04:00:25.308409220 UTC',NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO uniform_resource VALUES('01HGSFR071YYMWWXCYSARZF2VV','01HGSFFG3F3T79WAZ4YN0C59ZD','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/echo-stdin.surveilr[json].sh','5f492f6a10662a74b65c0db190f39a025d9abb61',replace('{\n  "surveilr-ingest": {\n    "args": {\n      "state_db_fs_path": "resource-surveillance.sqlite.db"\n    },\n    "behavior": {\n      "classifier": {\n        "flaggables": [\n          {\n            "flags": "IGNORE_RESOURCE",\n            "nature_regex_capture": null,\n            "regex": "/(\\.git|node_modules)/"\n          },\n          {\n            "flags": "CONTENT_ACQUIRABLE",\n            "nature_regex_capture": "nature",\n            "regex": "\\.(?P<nature>md|mdx|html|json|jsonc|puml|txt|toml|yml)$"\n          },\n          {\n            "flags": "CAPTURABLE_EXECUTABLE",\n            "nature_regex_capture": "nature",\n            "regex": "surveilr\\[(?P<nature>[^\\]]*)\\]"\n          },\n          {\n            "flags": "CAPTURABLE_EXECUTABLE | CAPTURABLE_SQL",\n            "nature_regex_capture": null,\n            "regex": "surveilr-SQL"\n          },\n          {\n            "flags": "IGNORE_RESOURCE",\n            "nature_regex_capture": null,\n            "regex": "^/home/snshah/workspaces/github\\.com/opsfolio/resource\\-surveillance/resource\\-surveillance\\.sqlite\\.db$"\n          },\n          {\n            "flags": "IGNORE_RESOURCE",\n            "nature_regex_capture": null,\n            "regex": "^/home/snshah/workspaces/github\\.com/opsfolio/resource\\-surveillance/resource\\-surveillance\\.sqlite\\.wal$"\n          },\n          {\n            "flags": "IGNORE_RESOURCE",\n            "nature_regex_capture": null,\n            "regex": "^/home/snshah/workspaces/github\\.com/opsfolio/resource\\-surveillance/resource\\-surveillance\\.sqlite\\.db\\-journal$"\n          }\n        ],\n        "rewrite_path_regexs": [\n          {\n            "regex": "(?P<nature>\\.plantuml)$",\n            "replace": ".puml"\n          },\n          {\n            "regex": "(?P<nature>\\.text)$",\n            "replace": ".txt"\n          },\n          {\n            "regex": "(?P<nature>\\.yaml)$",\n            "replace": ".yml"\n          }\n        ],\n        "smart_ignore_conf_files": [\n          ".surveilr_ignore"\n        ]\n      },\n      "root_fs_paths": [\n        "."\n      ]\n    },\n    "device": {\n      "device_id": "01HGSFFG3F3T79WAZ4YN0C59ZD"\n    },\n    "env": {\n      "current_dir": "/home/snshah/workspaces/github.com/opsfolio/resource-surveillance"\n    },\n    "session": {\n      "dir-entry": {\n        "path": "/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/echo-stdin.surveilr[json].sh"\n      },\n      "walk-path-id": "01HGSFR00WGR9GM0MNCNT5EKGH",\n      "walk-session-id": "01HGSFR00WZXEBGM9YWA2R02XM"\n    }\n  }\n}','\n',char(10)),'json',2563,'2023-12-04 04:00:25.313434289 UTC',NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
CREATE TABLE IF NOT EXISTS "uniform_resource_transform" (
    "uniform_resource_transform_id" VARCHAR PRIMARY KEY NOT NULL,
    "uniform_resource_id" VARCHAR NOT NULL,
    "uri" TEXT NOT NULL,
    "content_digest" TEXT NOT NULL,
    "content" BLOB,
    "nature" TEXT,
    "size_bytes" INTEGER,
    "elaboration" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),
    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    "created_by" TEXT DEFAULT 'UNKNOWN',
    "updated_at" TIMESTAMP,
    "updated_by" TEXT,
    "deleted_at" TIMESTAMP,
    "deleted_by" TEXT,
    "activity_log" TEXT,
    FOREIGN KEY("uniform_resource_id") REFERENCES "uniform_resource"("uniform_resource_id"),
    UNIQUE("uniform_resource_id", "content_digest", "nature", "size_bytes")
);
CREATE TABLE IF NOT EXISTS "ur_ingest_session_fs_path_entry" (
    "ur_ingest_session_fs_path_entry_id" VARCHAR PRIMARY KEY NOT NULL,
    "ingest_session_id" VARCHAR NOT NULL,
    "ingest_fs_path_id" VARCHAR NOT NULL,
    "uniform_resource_id" VARCHAR,
    "file_path_abs" TEXT NOT NULL,
    "file_path_rel_parent" TEXT NOT NULL,
    "file_path_rel" TEXT NOT NULL,
    "file_basename" TEXT NOT NULL,
    "file_extn" TEXT,
    "captured_executable" TEXT CHECK(json_valid(captured_executable) OR captured_executable IS NULL),
    "ur_status" TEXT,
    "ur_diagnostics" TEXT CHECK(json_valid(ur_diagnostics) OR ur_diagnostics IS NULL),
    "ur_transformations" TEXT CHECK(json_valid(ur_transformations) OR ur_transformations IS NULL),
    "elaboration" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),
    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    "created_by" TEXT DEFAULT 'UNKNOWN',
    "updated_at" TIMESTAMP,
    "updated_by" TEXT,
    "deleted_at" TIMESTAMP,
    "deleted_by" TEXT,
    "activity_log" TEXT,
    FOREIGN KEY("ingest_session_id") REFERENCES "ur_ingest_session"("ur_ingest_session_id"),
    FOREIGN KEY("ingest_fs_path_id") REFERENCES "ur_ingest_session_fs_path"("ur_ingest_session_fs_path_id"),
    FOREIGN KEY("uniform_resource_id") REFERENCES "uniform_resource"("uniform_resource_id")
);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG45YMF7Y7M3VAS8WM7M','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src/helpers.rs','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src','src/helpers.rs','helpers.rs','rs',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG46ZCF7ZZC5DPDK8097','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src/main.rs','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src','src/main.rs','main.rs','rs',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG462235BHBYCS9650B0','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src/shell.rs','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src','src/shell.rs','shell.rs','rs',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG460C25EK2NDYS330AX','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src/resource.rs','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src','src/resource.rs','resource.rs','rs',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG46PSQER76ENFZ2VSAQ','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src/device.rs','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src','src/device.rs','device.rs','rs',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG46FPEX36E2SM4X7S29','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src/bootstrap.sql','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src','src/bootstrap.sql','bootstrap.sql','sql',NULL,'UKNOWN_NATURE(sql)',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG46Z2QJ4N7MAQ280TSY','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','01HGSFFG46GW12V10R4YR9NF6Q','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src/resources.states.puml','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src','src/resources.states.puml','resources.states.puml','puml',NULL,NULL,NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG46B8EZGV3R4NH03B0P','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src/format.rs','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src','src/format.rs','format.rs','rs',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG46AW66565Q6TBRDNMV','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src/ingest.rs','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src','src/ingest.rs','ingest.rs','rs',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG466VS9RYDZAE6RMM9B','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src/cmd/admin.rs','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src/cmd','src/cmd/admin.rs','admin.rs','rs',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG46JM7WQW8Y7SPPCZWA','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src/cmd/mod.rs','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src/cmd','src/cmd/mod.rs','mod.rs','rs',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG46NM7HGE6WHQZVTH1D','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src/cmd/notebooks.rs','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src/cmd','src/cmd/notebooks.rs','notebooks.rs','rs',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG46H8DNHE0A6ZFQ20MJ','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src/cmd/ingest.rs','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src/cmd','src/cmd/ingest.rs','ingest.rs','rs',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG46FCKP6QTT9XR6SS6C','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src/cmd/capexec.rs','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src/cmd','src/cmd/capexec.rs','capexec.rs','rs',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG46SWTRAGWS9SC1F0AR','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src/frontmatter.rs','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src','src/frontmatter.rs','frontmatter.rs','rs',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG4621DA3AKN939SNSD3','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src/persist.rs','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src','src/persist.rs','persist.rs','rs',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG46N7B7YB5CA7PX6DJN','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/Justfile','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance','Justfile','Justfile','',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG464YETJQGJMYCG8JJR','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/.gitignore','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance','.gitignore','.gitignore','',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG48V7T63VBMX2BP31R1','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','01HGSFFG483CTQ2F3YBPG9EQA6','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/README.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance','README.md','README.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG4ECC2MNX0NWFWS6M25','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','01HGSFFG4EAA880XNP6NN1VNX6','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/quality-system/surveilr-sbom.spdx.json','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/quality-system','support/quality-system/surveilr-sbom.spdx.json','surveilr-sbom.spdx.json','json',NULL,NULL,NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG4EK2KJ306HJT38N0J1','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/surveilr-logo-with-text-264x66px.png','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support','support/surveilr-logo-with-text-264x66px.png','surveilr-logo-with-text-264x66px.png','png',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG4ECV2NC0AG1YKQS1R3','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','01HGSFFG4EWTPZG0ZJG4KFG2NC','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks.tbls.auto.yml','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs','support/docs/surveilr-code-notebooks.tbls.auto.yml','surveilr-code-notebooks.tbls.auto.yml','yml',NULL,NULL,NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG4GM4EGKVKX8849C5AP','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','01HGSFFG4G0KVCG95YPPCS43CF','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/GPM.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs','support/docs/GPM.md','GPM.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG4G4175DT02FAG9FQT1','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','01HGSFFG4G4ZQ7BZCJEM6C6370','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema/schema.json','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema','support/docs/surveilr-code-notebooks-schema/schema.json','schema.json','json',NULL,NULL,NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG4JBPY0TK29F722NBVQ','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','01HGSFFG4J69RDKKTYVQQE5PYA','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema/code_notebook_state.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema','support/docs/surveilr-code-notebooks-schema/code_notebook_state.md','code_notebook_state.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG4JBW8PFJ6QBY9V59VQ','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema/assurance_schema.svg','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema','support/docs/surveilr-code-notebooks-schema/assurance_schema.svg','assurance_schema.svg','svg',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG4M6SDXWRV1CBA3N2GA','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','01HGSFFG4MEGMY17D3RZG2ZP17','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema/README.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema','support/docs/surveilr-code-notebooks-schema/README.md','README.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG4M8D0MNK9NVT0QK8J0','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema/code_notebook_cell.svg','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema','support/docs/surveilr-code-notebooks-schema/code_notebook_cell.svg','code_notebook_cell.svg','svg',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG4M7N9TR0VZZ6GG45W0','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema/code_notebook_kernel.svg','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema','support/docs/surveilr-code-notebooks-schema/code_notebook_kernel.svg','code_notebook_kernel.svg','svg',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG4PJP625QB5R2XNA1RX','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','01HGSFFG4NCC7S7M34H0BDATS1','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema/assurance_schema.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema','support/docs/surveilr-code-notebooks-schema/assurance_schema.md','assurance_schema.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG4PJ5ZQY99KBPP45T25','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema/code_notebook_state.svg','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema','support/docs/surveilr-code-notebooks-schema/code_notebook_state.svg','code_notebook_state.svg','svg',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG4PQH1V89MPJNKPZBZ8','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema/schema.svg','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema','support/docs/surveilr-code-notebooks-schema/schema.svg','schema.svg','svg',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG4QQS26KJFKV95F9H5G','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','01HGSFFG4Q4AT8D1FW9S1W287P','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema/code_notebook_kernel.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema','support/docs/surveilr-code-notebooks-schema/code_notebook_kernel.md','code_notebook_kernel.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG4SXQX87MTYES1MMCM6','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','01HGSFFG4S33FDWWEBW7DCVCYQ','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema/code_notebook_cell.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema','support/docs/surveilr-code-notebooks-schema/code_notebook_cell.md','code_notebook_cell.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG4VK4AMPX9420KZHQ4R','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','01HGSFFG4VRNERBVS5ECVX0JC6','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/CLI-help.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs','support/docs/CLI-help.md','CLI-help.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG4V221JPRN4JA6C2Q4P','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','01HGSFFG4VZ15A0JENGQRC6DA4','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state.tbls.auto.yml','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs','support/docs/surveilr-state.tbls.auto.yml','surveilr-state.tbls.auto.yml','yml',NULL,NULL,NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG4VJYPQ2WT3VF0WQ09Z','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/architecture.drawio.svg','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs','support/docs/architecture.drawio.svg','architecture.drawio.svg','svg',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG4WHWBXJHV6TA8QEDBH','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','01HGSFFG4WM9R5NATPEJFMTSPF','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/ULID.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs','support/docs/ULID.md','ULID.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG4XVRB67D2MB5Q74VQ0','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','01HGSFFG4XEH9AWKNH9G0SWS9C','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/schema.json','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/schema.json','schema.json','json',NULL,NULL,NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG4XAV4YMPTSTR3VQHZ1','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/ur_ingest_resource_path_match_rule.svg','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/ur_ingest_resource_path_match_rule.svg','ur_ingest_resource_path_match_rule.svg','svg',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG4X5MV7T820RFSNN3E1','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/device.svg','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/device.svg','device.svg','svg',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG4Z924ATXP168MNBQ0M','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','01HGSFFG4ZCC78SRNJ4AFAK189','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/ur_ingest_session_task.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/ur_ingest_session_task.md','ur_ingest_session_task.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG51JMVTFFGMDXAB1AHF','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','01HGSFFG51CN370CN2JK9WVYFH','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/README.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/README.md','README.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG52BASHTQWSZP2YY45G','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','01HGSFFG52QM019KET2KQCKD3C','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/ur_ingest_session.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/ur_ingest_session.md','ur_ingest_session.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG546YX12T6W09291T4C','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','01HGSFFG54T53N2718J34JPJFG','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/uniform_resource.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/uniform_resource.md','uniform_resource.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG54YQ2KE0SXREJ7SBN1','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/ur_ingest_session_task.svg','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/ur_ingest_session_task.svg','ur_ingest_session_task.svg','svg',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG54NRWG9JFDP8JTQAK6','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/ur_ingest_resource_path_rewrite_rule.svg','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/ur_ingest_resource_path_rewrite_rule.svg','ur_ingest_resource_path_rewrite_rule.svg','svg',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG5437W0VYSVW0396P0J','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/schema.svg','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/schema.svg','schema.svg','svg',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG56VMXVE4M0BZ3331R1','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','01HGSFFG567NA23WBY4A0JWC45','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/device.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/device.md','device.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG58TV18W2HVFW8PNJXP','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','01HGSFFG58AN1614GCNA7SSVC9','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/uniform_resource_transform.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/uniform_resource_transform.md','uniform_resource_transform.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG5A4HTXXFW7Z33K9P6A','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','01HGSFFG5AWCM7RN85YD0RWW0K','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/ur_ingest_session_fs_path_entry.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/ur_ingest_session_fs_path_entry.md','ur_ingest_session_fs_path_entry.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG5ANWXPYKHTDDKZQ0EK','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/uniform_resource.svg','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/uniform_resource.svg','uniform_resource.svg','svg',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG5A6TDJ09XMKTA3P5TK','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/uniform_resource_transform.svg','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/uniform_resource_transform.svg','uniform_resource_transform.svg','svg',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG5A46E34QSEHWVGVC90','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/behavior.svg','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/behavior.svg','behavior.svg','svg',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG5AXJT9XSRRFE75AE5S','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/ur_ingest_session.svg','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/ur_ingest_session.svg','ur_ingest_session.svg','svg',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG5AA7B68AZVJW8S4HNZ','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/ur_ingest_session_fs_path_entry.svg','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/ur_ingest_session_fs_path_entry.svg','ur_ingest_session_fs_path_entry.svg','svg',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG5CPDX8ZC0YES0F9MN3','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','01HGSFFG5CPME4MMY6WV5N04FF','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/behavior.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/behavior.md','behavior.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG5EE1HTF5MZ0WQ2WPBN','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','01HGSFFG5E6TFFG249SJTGXKMZ','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/ur_ingest_resource_path_rewrite_rule.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/ur_ingest_resource_path_rewrite_rule.md','ur_ingest_resource_path_rewrite_rule.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG5F3Q2N4XWZQA82QGE7','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','01HGSFFG5F2M2K0AKD3WW2K74B','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/ur_ingest_session_fs_path.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/ur_ingest_session_fs_path.md','ur_ingest_session_fs_path.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG5F9H2H1FMS4T01E13F','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/ur_ingest_session_fs_path.svg','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/ur_ingest_session_fs_path.svg','ur_ingest_session_fs_path.svg','svg',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG5HC8KSB90YNJ5N2VHK','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','01HGSFFG5HR6EV7GSEEWEZF49E','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/ur_ingest_resource_path_match_rule.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/ur_ingest_resource_path_match_rule.md','ur_ingest_resource_path_match_rule.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG5KG8XZNMN5DHG3JB1S','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','01HGSFFG5KGEK09739NA9SN2A0','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/CONTRIBUTING.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs','support/docs/CONTRIBUTING.md','CONTRIBUTING.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG5K8262HSK7KMGM9MDF','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/surveilr-logo184x173px.png','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support','support/surveilr-logo184x173px.png','surveilr-logo184x173px.png','png',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG5NPAQX2WT7S91Z79V9','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','01HGSFFG5N8145CZ4Q7YXTSYHM','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/sql-aide/README.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/sql-aide','support/sql-aide/README.md','README.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG5NPT7MS58JCT8S1G1X','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/sql-aide/notebooks.ts','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/sql-aide','support/sql-aide/notebooks.ts','notebooks.ts','ts',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG5NKYSGEB78KP8TF012','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/sql-aide/sqlactl.ts','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/sql-aide','support/sql-aide/sqlactl.ts','sqlactl.ts','ts',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG5N613P9HKSNQAZMV03','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/sql-aide/models.ts','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/sql-aide','support/sql-aide/models.ts','models.ts','ts',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG5N97CG7HGMNW2CKWYT','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/sql-aide/deps.ts','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/sql-aide','support/sql-aide/deps.ts','deps.ts','ts',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG5NSXE0GD8VTAD6R3KS','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/synthetic.conf.sql','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures','support/test-fixtures/synthetic.conf.sql','synthetic.conf.sql','sql',NULL,'UKNOWN_NATURE(sql)',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG5QG3NSJQQJQD2VHQHB','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/idempotent.surveilr-SQL.sh','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures','support/test-fixtures/idempotent.surveilr-SQL.sh','idempotent.surveilr-SQL.sh','sh',replace('{\n  "args": [],\n  "exit-status": "Exited(0)",\n  "interpretable-code": "/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/idempotent.surveilr-SQL.sh",\n  "stderr": "",\n  "stdin": {\n    "surveilr-ingest": {\n      "args": {\n        "state_db_fs_path": "resource-surveillance.sqlite.db"\n      },\n      "behavior": {\n        "classifier": {\n          "flaggables": [\n            {\n              "flags": "IGNORE_RESOURCE",\n              "nature_regex_capture": null,\n              "regex": "/(\\.git|node_modules)/"\n            },\n            {\n              "flags": "CONTENT_ACQUIRABLE",\n              "nature_regex_capture": "nature",\n              "regex": "\\.(?P<nature>md|mdx|html|json|jsonc|puml|txt|toml|yml)$"\n            },\n            {\n              "flags": "CAPTURABLE_EXECUTABLE",\n              "nature_regex_capture": "nature",\n              "regex": "surveilr\\[(?P<nature>[^\\]]*)\\]"\n            },\n            {\n              "flags": "CAPTURABLE_EXECUTABLE | CAPTURABLE_SQL",\n              "nature_regex_capture": null,\n              "regex": "surveilr-SQL"\n            },\n            {\n              "flags": "IGNORE_RESOURCE",\n              "nature_regex_capture": null,\n              "regex": "^/home/snshah/workspaces/github\\.com/opsfolio/resource\\-surveillance/resource\\-surveillance\\.sqlite\\.db$"\n            },\n            {\n              "flags": "IGNORE_RESOURCE",\n              "nature_regex_capture": null,\n              "regex": "^/home/snshah/workspaces/github\\.com/opsfolio/resource\\-surveillance/resource\\-surveillance\\.sqlite\\.wal$"\n            },\n            {\n              "flags": "IGNORE_RESOURCE",\n              "nature_regex_capture": null,\n              "regex": "^/home/snshah/workspaces/github\\.com/opsfolio/resource\\-surveillance/resource\\-surveillance\\.sqlite\\.db\\-journal$"\n            }\n          ],\n          "rewrite_nature_regexs": [\n            {\n              "regex": "(?P<nature>\\.plantuml)$",\n              "replace": ".puml"\n            },\n            {\n              "regex": "(?P<nature>\\.text)$",\n              "replace": ".txt"\n            },\n            {\n              "regex": "(?P<nature>\\.yaml)$",\n              "replace": ".yml"\n            }\n          ],\n          "smart_ignore_conf_files": [\n            ".surveilr_ignore"\n          ]\n        },\n        "root_fs_paths": [\n          "."\n        ]\n      },\n      "device": {\n        "device_id": "01HGSFFG3F3T79WAZ4YN0C59ZD"\n      },\n      "env": {\n        "current_dir": "/home/snshah/workspaces/github.com/opsfolio/resource-surveillance"\n      },\n      "session": {\n        "dir-entry": {\n          "path": "/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/idempotent.surveilr-SQL.sh"\n        },\n        "walk-path-id": "01HGSFFG3KKSY9VM7TN4AT7A30",\n        "walk-session-id": "01HGSFFG3KT5WQX7HKZDPPXHE2"\n      }\n    }\n  }\n}','\n',char(10)),'EXECUTED_CAPTURED_SQL',replace('{\012  "SQL": "CREATE TABLE IF NOT EXISTS my_table_from_captured_executable_sql (column1, column2);\n",\012  "instance": "UniformResourceWriterAction::CapturedExecutableSqlOutput(err)"\012}','\012',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG5TDJ2W7S9BYE2QBJF4','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','01HGSFFG5STJ2HMB5QEXPFFN5N','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/README.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures','support/test-fixtures/README.md','README.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG5V2SNN2SE870PNQHJ2','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','01HGSFFG5VP15S87H0495H8H72','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/capturable-executable.surveilr[json].sh','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures','support/test-fixtures/capturable-executable.surveilr[json].sh','capturable-executable.surveilr[json].sh','sh',replace('{\n  "args": [],\n  "exit-status": "Exited(0)",\n  "interpretable-code": "/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/capturable-executable.surveilr[json].sh",\n  "stderr": "",\n  "stdin": {\n    "surveilr-ingest": {\n      "args": {\n        "state_db_fs_path": "resource-surveillance.sqlite.db"\n      },\n      "behavior": {\n        "classifier": {\n          "flaggables": [\n            {\n              "flags": "IGNORE_RESOURCE",\n              "nature_regex_capture": null,\n              "regex": "/(\\.git|node_modules)/"\n            },\n            {\n              "flags": "CONTENT_ACQUIRABLE",\n              "nature_regex_capture": "nature",\n              "regex": "\\.(?P<nature>md|mdx|html|json|jsonc|puml|txt|toml|yml)$"\n            },\n            {\n              "flags": "CAPTURABLE_EXECUTABLE",\n              "nature_regex_capture": "nature",\n              "regex": "surveilr\\[(?P<nature>[^\\]]*)\\]"\n            },\n            {\n              "flags": "CAPTURABLE_EXECUTABLE | CAPTURABLE_SQL",\n              "nature_regex_capture": null,\n              "regex": "surveilr-SQL"\n            },\n            {\n              "flags": "IGNORE_RESOURCE",\n              "nature_regex_capture": null,\n              "regex": "^/home/snshah/workspaces/github\\.com/opsfolio/resource\\-surveillance/resource\\-surveillance\\.sqlite\\.db$"\n            },\n            {\n              "flags": "IGNORE_RESOURCE",\n              "nature_regex_capture": null,\n              "regex": "^/home/snshah/workspaces/github\\.com/opsfolio/resource\\-surveillance/resource\\-surveillance\\.sqlite\\.wal$"\n            },\n            {\n              "flags": "IGNORE_RESOURCE",\n              "nature_regex_capture": null,\n              "regex": "^/home/snshah/workspaces/github\\.com/opsfolio/resource\\-surveillance/resource\\-surveillance\\.sqlite\\.db\\-journal$"\n            }\n          ],\n          "rewrite_nature_regexs": [\n            {\n              "regex": "(?P<nature>\\.plantuml)$",\n              "replace": ".puml"\n            },\n            {\n              "regex": "(?P<nature>\\.text)$",\n              "replace": ".txt"\n            },\n            {\n              "regex": "(?P<nature>\\.yaml)$",\n              "replace": ".yml"\n            }\n          ],\n          "smart_ignore_conf_files": [\n            ".surveilr_ignore"\n          ]\n        },\n        "root_fs_paths": [\n          "."\n        ]\n      },\n      "device": {\n        "device_id": "01HGSFFG3F3T79WAZ4YN0C59ZD"\n      },\n      "env": {\n        "current_dir": "/home/snshah/workspaces/github.com/opsfolio/resource-surveillance"\n      },\n      "session": {\n        "dir-entry": {\n          "path": "/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/capturable-executable.surveilr[json].sh"\n        },\n        "walk-path-id": "01HGSFFG3KKSY9VM7TN4AT7A30",\n        "walk-session-id": "01HGSFFG3KT5WQX7HKZDPPXHE2"\n      }\n    }\n  }\n}','\n',char(10)),NULL,NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFG5VYRDR96NGH7BN5992','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/.surveilr_ignore','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures','support/test-fixtures/.surveilr_ignore','.surveilr_ignore','',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFGASW9YG7AGA4253D1JC','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','01HGSFFGASNV3BDA5SRQEP487G','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/capturable-executable.surveilr[json].ts','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures','support/test-fixtures/capturable-executable.surveilr[json].ts','capturable-executable.surveilr[json].ts','ts',replace('{\n  "args": [],\n  "exit-status": "Exited(0)",\n  "interpretable-code": "/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/capturable-executable.surveilr[json].ts",\n  "stderr": "",\n  "stdin": {\n    "surveilr-ingest": {\n      "args": {\n        "state_db_fs_path": "resource-surveillance.sqlite.db"\n      },\n      "behavior": {\n        "classifier": {\n          "flaggables": [\n            {\n              "flags": "IGNORE_RESOURCE",\n              "nature_regex_capture": null,\n              "regex": "/(\\.git|node_modules)/"\n            },\n            {\n              "flags": "CONTENT_ACQUIRABLE",\n              "nature_regex_capture": "nature",\n              "regex": "\\.(?P<nature>md|mdx|html|json|jsonc|puml|txt|toml|yml)$"\n            },\n            {\n              "flags": "CAPTURABLE_EXECUTABLE",\n              "nature_regex_capture": "nature",\n              "regex": "surveilr\\[(?P<nature>[^\\]]*)\\]"\n            },\n            {\n              "flags": "CAPTURABLE_EXECUTABLE | CAPTURABLE_SQL",\n              "nature_regex_capture": null,\n              "regex": "surveilr-SQL"\n            },\n            {\n              "flags": "IGNORE_RESOURCE",\n              "nature_regex_capture": null,\n              "regex": "^/home/snshah/workspaces/github\\.com/opsfolio/resource\\-surveillance/resource\\-surveillance\\.sqlite\\.db$"\n            },\n            {\n              "flags": "IGNORE_RESOURCE",\n              "nature_regex_capture": null,\n              "regex": "^/home/snshah/workspaces/github\\.com/opsfolio/resource\\-surveillance/resource\\-surveillance\\.sqlite\\.wal$"\n            },\n            {\n              "flags": "IGNORE_RESOURCE",\n              "nature_regex_capture": null,\n              "regex": "^/home/snshah/workspaces/github\\.com/opsfolio/resource\\-surveillance/resource\\-surveillance\\.sqlite\\.db\\-journal$"\n            }\n          ],\n          "rewrite_nature_regexs": [\n            {\n              "regex": "(?P<nature>\\.plantuml)$",\n              "replace": ".puml"\n            },\n            {\n              "regex": "(?P<nature>\\.text)$",\n              "replace": ".txt"\n            },\n            {\n              "regex": "(?P<nature>\\.yaml)$",\n              "replace": ".yml"\n            }\n          ],\n          "smart_ignore_conf_files": [\n            ".surveilr_ignore"\n          ]\n        },\n        "root_fs_paths": [\n          "."\n        ]\n      },\n      "device": {\n        "device_id": "01HGSFFG3F3T79WAZ4YN0C59ZD"\n      },\n      "env": {\n        "current_dir": "/home/snshah/workspaces/github.com/opsfolio/resource-surveillance"\n      },\n      "session": {\n        "dir-entry": {\n          "path": "/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/capturable-executable.surveilr[json].ts"\n        },\n        "walk-path-id": "01HGSFFG3KKSY9VM7TN4AT7A30",\n        "walk-session-id": "01HGSFFG3KT5WQX7HKZDPPXHE2"\n      }\n    }\n  }\n}','\n',char(10)),NULL,NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFGAWJTVAQHRE8R7EPZX1','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','01HGSFFGAW0YGJJ3YVHAZM4W2F','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/markdown-with-frontmatter.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures','support/test-fixtures/markdown-with-frontmatter.md','markdown-with-frontmatter.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFGAW9Q87RWFHZTKB3MWA','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/synthetic.conf.sql.ts','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures','support/test-fixtures/synthetic.conf.sql.ts','synthetic.conf.sql.ts','ts',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFGAY369W71HY7HJ0PDEF','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','01HGSFFGAY0H9P4WERGGYZ9YZC','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/echo-stdin.surveilr[json].sh','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures','support/test-fixtures/echo-stdin.surveilr[json].sh','echo-stdin.surveilr[json].sh','sh',replace('{\n  "args": [],\n  "exit-status": "Exited(0)",\n  "interpretable-code": "/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/echo-stdin.surveilr[json].sh",\n  "stderr": "",\n  "stdin": {\n    "surveilr-ingest": {\n      "args": {\n        "state_db_fs_path": "resource-surveillance.sqlite.db"\n      },\n      "behavior": {\n        "classifier": {\n          "flaggables": [\n            {\n              "flags": "IGNORE_RESOURCE",\n              "nature_regex_capture": null,\n              "regex": "/(\\.git|node_modules)/"\n            },\n            {\n              "flags": "CONTENT_ACQUIRABLE",\n              "nature_regex_capture": "nature",\n              "regex": "\\.(?P<nature>md|mdx|html|json|jsonc|puml|txt|toml|yml)$"\n            },\n            {\n              "flags": "CAPTURABLE_EXECUTABLE",\n              "nature_regex_capture": "nature",\n              "regex": "surveilr\\[(?P<nature>[^\\]]*)\\]"\n            },\n            {\n              "flags": "CAPTURABLE_EXECUTABLE | CAPTURABLE_SQL",\n              "nature_regex_capture": null,\n              "regex": "surveilr-SQL"\n            },\n            {\n              "flags": "IGNORE_RESOURCE",\n              "nature_regex_capture": null,\n              "regex": "^/home/snshah/workspaces/github\\.com/opsfolio/resource\\-surveillance/resource\\-surveillance\\.sqlite\\.db$"\n            },\n            {\n              "flags": "IGNORE_RESOURCE",\n              "nature_regex_capture": null,\n              "regex": "^/home/snshah/workspaces/github\\.com/opsfolio/resource\\-surveillance/resource\\-surveillance\\.sqlite\\.wal$"\n            },\n            {\n              "flags": "IGNORE_RESOURCE",\n              "nature_regex_capture": null,\n              "regex": "^/home/snshah/workspaces/github\\.com/opsfolio/resource\\-surveillance/resource\\-surveillance\\.sqlite\\.db\\-journal$"\n            }\n          ],\n          "rewrite_nature_regexs": [\n            {\n              "regex": "(?P<nature>\\.plantuml)$",\n              "replace": ".puml"\n            },\n            {\n              "regex": "(?P<nature>\\.text)$",\n              "replace": ".txt"\n            },\n            {\n              "regex": "(?P<nature>\\.yaml)$",\n              "replace": ".yml"\n            }\n          ],\n          "smart_ignore_conf_files": [\n            ".surveilr_ignore"\n          ]\n        },\n        "root_fs_paths": [\n          "."\n        ]\n      },\n      "device": {\n        "device_id": "01HGSFFG3F3T79WAZ4YN0C59ZD"\n      },\n      "env": {\n        "current_dir": "/home/snshah/workspaces/github.com/opsfolio/resource-surveillance"\n      },\n      "session": {\n        "dir-entry": {\n          "path": "/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/echo-stdin.surveilr[json].sh"\n        },\n        "walk-path-id": "01HGSFFG3KKSY9VM7TN4AT7A30",\n        "walk-session-id": "01HGSFFG3KT5WQX7HKZDPPXHE2"\n      }\n    }\n  }\n}','\n',char(10)),NULL,NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFGB0ASWXKPVA06H0GCYA','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/capturable-executable-bad-exit-status.surveilr[txt].sh','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures','support/test-fixtures/capturable-executable-bad-exit-status.surveilr[txt].sh','capturable-executable-bad-exit-status.surveilr[txt].sh','sh',NULL,'ERROR',replace('{\n  "diagnostics": {\n    "args": [],\n    "exit-status": "Exited(1)",\n    "interpretable-code": "/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/capturable-executable-bad-exit-status.surveilr[txt].sh",\n    "stderr": "",\n    "stdin": {\n      "surveilr-ingest": {\n        "args": {\n          "state_db_fs_path": "resource-surveillance.sqlite.db"\n        },\n        "behavior": {\n          "classifier": {\n            "flaggables": [\n              {\n                "flags": "IGNORE_RESOURCE",\n                "nature_regex_capture": null,\n                "regex": "/(\\.git|node_modules)/"\n              },\n              {\n                "flags": "CONTENT_ACQUIRABLE",\n                "nature_regex_capture": "nature",\n                "regex": "\\.(?P<nature>md|mdx|html|json|jsonc|puml|txt|toml|yml)$"\n              },\n              {\n                "flags": "CAPTURABLE_EXECUTABLE",\n                "nature_regex_capture": "nature",\n                "regex": "surveilr\\[(?P<nature>[^\\]]*)\\]"\n              },\n              {\n                "flags": "CAPTURABLE_EXECUTABLE | CAPTURABLE_SQL",\n                "nature_regex_capture": null,\n                "regex": "surveilr-SQL"\n              },\n              {\n                "flags": "IGNORE_RESOURCE",\n                "nature_regex_capture": null,\n                "regex": "^/home/snshah/workspaces/github\\.com/opsfolio/resource\\-surveillance/resource\\-surveillance\\.sqlite\\.db$"\n              },\n              {\n                "flags": "IGNORE_RESOURCE",\n                "nature_regex_capture": null,\n                "regex": "^/home/snshah/workspaces/github\\.com/opsfolio/resource\\-surveillance/resource\\-surveillance\\.sqlite\\.wal$"\n              },\n              {\n                "flags": "IGNORE_RESOURCE",\n                "nature_regex_capture": null,\n                "regex": "^/home/snshah/workspaces/github\\.com/opsfolio/resource\\-surveillance/resource\\-surveillance\\.sqlite\\.db\\-journal$"\n              }\n            ],\n            "rewrite_nature_regexs": [\n              {\n                "regex": "(?P<nature>\\.plantuml)$",\n                "replace": ".puml"\n              },\n              {\n                "regex": "(?P<nature>\\.text)$",\n                "replace": ".txt"\n              },\n              {\n                "regex": "(?P<nature>\\.yaml)$",\n                "replace": ".yml"\n              }\n            ],\n            "smart_ignore_conf_files": [\n              ".surveilr_ignore"\n            ]\n          },\n          "root_fs_paths": [\n            "."\n          ]\n        },\n        "device": {\n          "device_id": "01HGSFFG3F3T79WAZ4YN0C59ZD"\n        },\n        "env": {\n          "current_dir": "/home/snshah/workspaces/github.com/opsfolio/resource-surveillance"\n        },\n        "session": {\n          "dir-entry": {\n            "path": "/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/capturable-executable-bad-exit-status.surveilr[txt].sh"\n          },\n          "walk-path-id": "01HGSFFG3KKSY9VM7TN4AT7A30",\n          "walk-session-id": "01HGSFFG3KT5WQX7HKZDPPXHE2"\n        }\n      }\n    }\n  },\n  "instance": "UniformResourceWriterAction::CapturedExecutableError(exit, stderr, diags)",\n  "message": "Non-zero exit status when executing capturable executable"\n}','\n',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFGB057NYEFGKT0SZQRYX','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/unknown-extension.xyz','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures','support/test-fixtures/unknown-extension.xyz','unknown-extension.xyz','xyz',NULL,'UKNOWN_NATURE(xyz)',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFGB0M617XM94P1QM3YY8','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','01HGSFFGB001C068JPVZ37Z1DC','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/plain.text','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures','support/test-fixtures/plain.text','plain.text','text',NULL,NULL,NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFGB089W38BS0YTVGC2RK','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','01HGSFFGB04V7FFK30G5Y88G6X','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/plain-text.txt','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures','support/test-fixtures/plain-text.txt','plain-text.txt','txt',NULL,NULL,NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFGB0ZCQ39GM6HD671GKV','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/capturable-executable-no-permissions.surveilr[json].sh','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures','support/test-fixtures/capturable-executable-no-permissions.surveilr[json].sh','capturable-executable-no-permissions.surveilr[json].sh','sh',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::CapturableExecNotExecutable",\n  "message": "File matched as a potential capturable executable but the file permissions do not allow execution"\n}','\n',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFGB04J0N5F014D1QAA2F','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/surveilr-logo-with-text-755x190px.png','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support','support/surveilr-logo-with-text-755x190px.png','surveilr-logo-with-text-755x190px.png','png',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFGB1RWDWHNCVZMBAHX8E','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','01HGSFFGB01G2WVFCCYBMC38B5','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/.github/workflows/release.yml','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/.github/workflows','.github/workflows/release.yml','release.yml','yml',NULL,NULL,NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFGB1AZ5EECDX7YK0TE1N','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','01HGSFFGB1YK51463A3MSNE639','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/.github/workflows/rust.yml','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/.github/workflows','.github/workflows/rust.yml','rust.yml','yml',NULL,NULL,NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFGB1SR6XSGXQ9H0878G3','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/Cargo.lock','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance','Cargo.lock','Cargo.lock','lock',NULL,'UKNOWN_NATURE(lock)',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFGB10Q49ZFQS7FQHVPRZ','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','01HGSFFGB1SV0QTKW9N8F6H2EG','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/Cargo.toml','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance','Cargo.toml','Cargo.toml','toml',NULL,NULL,NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFGB1XDT636Q643T47CHH','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','01HGSFFGB1MHCTASK6B8AG4SP8','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/.vscode/settings.json','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/.vscode','.vscode/settings.json','settings.json','json',NULL,NULL,NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFGB101Z3X7ZC1WABEBDJ','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30','01HGSFFGB1V54XWPES3S08AYHM','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/.vscode/extensions.json','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/.vscode','.vscode/extensions.json','extensions.json','json',NULL,NULL,NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFFGB1CK588C85SEV4DKDE','01HGSFFG3KT5WQX7HKZDPPXHE2','01HGSFFG3KKSY9VM7TN4AT7A30',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/install.sh','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance','install.sh','install.sh','sh',NULL,'UKNOWN_NATURE(sh)',NULL,NULL,NULL,'2023-12-04 03:55:46','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR01GX5D4YGNJV7ZBZY24','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src/helpers.rs','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src','src/helpers.rs','helpers.rs','rs',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR01G3SE37STX9B76Y7MK','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src/main.rs','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src','src/main.rs','main.rs','rs',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR01GC7008964T8XHAWM9','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src/shell.rs','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src','src/shell.rs','shell.rs','rs',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR01GCXC3NR9296306YYP','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src/resource.rs','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src','src/resource.rs','resource.rs','rs',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR01GMJKSAYZTXWGAXSEA','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src/device.rs','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src','src/device.rs','device.rs','rs',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR01G41NNYB1M103Q7140','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src/bootstrap.sql','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src','src/bootstrap.sql','bootstrap.sql','sql',NULL,'UKNOWN_NATURE(sql)',NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR01HSKF3WDYN1X7WKJSE','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH','01HGSFFG46GW12V10R4YR9NF6Q','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src/resources.states.puml','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src','src/resources.states.puml','resources.states.puml','puml',NULL,NULL,NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR01HBD0M9T1P8RR5X8YN','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src/format.rs','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src','src/format.rs','format.rs','rs',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR01H2ZPB42X5FJEGSYD8','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src/ingest.rs','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src','src/ingest.rs','ingest.rs','rs',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR01HF0BJJGZG0VARFR7R','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src/cmd/admin.rs','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src/cmd','src/cmd/admin.rs','admin.rs','rs',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR01HWWHBSWETFN1XJGR9','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src/cmd/mod.rs','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src/cmd','src/cmd/mod.rs','mod.rs','rs',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR01HQSX7JCDMBNW7JV2H','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src/cmd/notebooks.rs','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src/cmd','src/cmd/notebooks.rs','notebooks.rs','rs',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR01HZDQV2YDE4M6VXMJJ','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src/cmd/ingest.rs','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src/cmd','src/cmd/ingest.rs','ingest.rs','rs',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR01H17B24GDR86F9EDD8','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src/cmd/capexec.rs','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src/cmd','src/cmd/capexec.rs','capexec.rs','rs',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR01HB7VS7NWKJM1AH1FN','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src/frontmatter.rs','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src','src/frontmatter.rs','frontmatter.rs','rs',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR01H2GW80JH7J0HE8576','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src/persist.rs','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/src','src/persist.rs','persist.rs','rs',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR01HBJ7N6KFAF9ZKPENH','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/Justfile','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance','Justfile','Justfile','',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR01HD4VFB3T32WJRVE07','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/.gitignore','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance','.gitignore','.gitignore','',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR01K6QZCDFGTBZN08NKF','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH','01HGSFFG483CTQ2F3YBPG9EQA6','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/README.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance','README.md','README.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR01S16MZ7YYMZKZ1WCGM','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH','01HGSFFG4EAA880XNP6NN1VNX6','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/quality-system/surveilr-sbom.spdx.json','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/quality-system','support/quality-system/surveilr-sbom.spdx.json','surveilr-sbom.spdx.json','json',NULL,NULL,NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR01SC1PBCNTTYKJK6EHH','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/surveilr-logo-with-text-264x66px.png','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support','support/surveilr-logo-with-text-264x66px.png','surveilr-logo-with-text-264x66px.png','png',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR01SN5C9ET4TGP1W0FRH','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH','01HGSFFG4EWTPZG0ZJG4KFG2NC','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks.tbls.auto.yml','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs','support/docs/surveilr-code-notebooks.tbls.auto.yml','surveilr-code-notebooks.tbls.auto.yml','yml',NULL,NULL,NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR01VPYPY6AEY6JG5309M','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH','01HGSFFG4G0KVCG95YPPCS43CF','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/GPM.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs','support/docs/GPM.md','GPM.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR01W460WKEWB8RK1QWQX','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH','01HGSFFG4G4ZQ7BZCJEM6C6370','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema/schema.json','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema','support/docs/surveilr-code-notebooks-schema/schema.json','schema.json','json',NULL,NULL,NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR01YEEG96XYYRH7SPGD8','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH','01HGSFFG4J69RDKKTYVQQE5PYA','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema/code_notebook_state.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema','support/docs/surveilr-code-notebooks-schema/code_notebook_state.md','code_notebook_state.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR01YBTKK0GBPYT3097M9','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema/assurance_schema.svg','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema','support/docs/surveilr-code-notebooks-schema/assurance_schema.svg','assurance_schema.svg','svg',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR01ZPX0SC4MWB2QS8NA8','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH','01HGSFFG4MEGMY17D3RZG2ZP17','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema/README.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema','support/docs/surveilr-code-notebooks-schema/README.md','README.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR01ZSSF8HKN21FJW8Q9F','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema/code_notebook_cell.svg','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema','support/docs/surveilr-code-notebooks-schema/code_notebook_cell.svg','code_notebook_cell.svg','svg',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR01ZW9X7X05XP60RFR3M','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema/code_notebook_kernel.svg','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema','support/docs/surveilr-code-notebooks-schema/code_notebook_kernel.svg','code_notebook_kernel.svg','svg',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR021BVZ7HEKYWZ3QK80W','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH','01HGSFFG4NCC7S7M34H0BDATS1','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema/assurance_schema.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema','support/docs/surveilr-code-notebooks-schema/assurance_schema.md','assurance_schema.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR021V66T4TE79PJZK01W','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema/code_notebook_state.svg','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema','support/docs/surveilr-code-notebooks-schema/code_notebook_state.svg','code_notebook_state.svg','svg',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR0210VCVWS11DD0DXRKY','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema/schema.svg','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema','support/docs/surveilr-code-notebooks-schema/schema.svg','schema.svg','svg',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR023MY8NQG3B0CKSYQJ1','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH','01HGSFFG4Q4AT8D1FW9S1W287P','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema/code_notebook_kernel.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema','support/docs/surveilr-code-notebooks-schema/code_notebook_kernel.md','code_notebook_kernel.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR0250AMQMP12T6R5SA1C','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH','01HGSFFG4S33FDWWEBW7DCVCYQ','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema/code_notebook_cell.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-code-notebooks-schema','support/docs/surveilr-code-notebooks-schema/code_notebook_cell.md','code_notebook_cell.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR02738VGFAJ18VJDNXFZ','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH','01HGSFFG4VRNERBVS5ECVX0JC6','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/CLI-help.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs','support/docs/CLI-help.md','CLI-help.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR027BDRBDPD7RS7ZMG21','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH','01HGSFFG4VZ15A0JENGQRC6DA4','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state.tbls.auto.yml','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs','support/docs/surveilr-state.tbls.auto.yml','surveilr-state.tbls.auto.yml','yml',NULL,NULL,NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR027A2TMFPH9325GBNXD','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/architecture.drawio.svg','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs','support/docs/architecture.drawio.svg','architecture.drawio.svg','svg',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR029ET06681N4CEXNZRF','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH','01HGSFFG4WM9R5NATPEJFMTSPF','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/ULID.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs','support/docs/ULID.md','ULID.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR029XPSVFCDV343QJA46','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH','01HGSFFG4XEH9AWKNH9G0SWS9C','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/schema.json','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/schema.json','schema.json','json',NULL,NULL,NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR0293ESEW1SD83P3HPZD','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/ur_ingest_resource_path_match_rule.svg','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/ur_ingest_resource_path_match_rule.svg','ur_ingest_resource_path_match_rule.svg','svg',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR029P6V57GAPP67A7V92','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/device.svg','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/device.svg','device.svg','svg',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR02B61XF0MHM8ZM8MXR4','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH','01HGSFFG4ZCC78SRNJ4AFAK189','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/ur_ingest_session_task.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/ur_ingest_session_task.md','ur_ingest_session_task.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR02DD5367G112JNGM913','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH','01HGSFFG51CN370CN2JK9WVYFH','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/README.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/README.md','README.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR02F4WJMG0308XFCMF40','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH','01HGSFFG52QM019KET2KQCKD3C','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/ur_ingest_session.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/ur_ingest_session.md','ur_ingest_session.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR02HA74FAY8GDJZRDCB2','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH','01HGSFFG54T53N2718J34JPJFG','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/uniform_resource.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/uniform_resource.md','uniform_resource.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR02HTYMG7QAGPEZMHYG2','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/ur_ingest_session_task.svg','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/ur_ingest_session_task.svg','ur_ingest_session_task.svg','svg',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR02HTFBWAPA690M2K7H4','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/ur_ingest_resource_path_rewrite_rule.svg','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/ur_ingest_resource_path_rewrite_rule.svg','ur_ingest_resource_path_rewrite_rule.svg','svg',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR02H4NCEMGMF8ZGKTAXC','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/schema.svg','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/schema.svg','schema.svg','svg',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR02KW4J5GA6RMRJRHCB3','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH','01HGSFFG567NA23WBY4A0JWC45','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/device.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/device.md','device.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR02NBFC76WQHTS8QND4A','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH','01HGSFFG58AN1614GCNA7SSVC9','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/uniform_resource_transform.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/uniform_resource_transform.md','uniform_resource_transform.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR02PR3QNP69772GZ6ZYA','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH','01HGSFFG5AWCM7RN85YD0RWW0K','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/ur_ingest_session_fs_path_entry.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/ur_ingest_session_fs_path_entry.md','ur_ingest_session_fs_path_entry.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR02PDWNARG2NXG6PZ4X9','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/uniform_resource.svg','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/uniform_resource.svg','uniform_resource.svg','svg',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR02PAZXRGX712QEHSHJ3','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/uniform_resource_transform.svg','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/uniform_resource_transform.svg','uniform_resource_transform.svg','svg',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR02P3M9KT7B641QRN5P5','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/behavior.svg','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/behavior.svg','behavior.svg','svg',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR02PDFFSEHXN3PA6WD7E','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/ur_ingest_session.svg','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/ur_ingest_session.svg','ur_ingest_session.svg','svg',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR02PZEWF15F8K06S82PS','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/ur_ingest_session_fs_path_entry.svg','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/ur_ingest_session_fs_path_entry.svg','ur_ingest_session_fs_path_entry.svg','svg',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR02RZF8DJA7P6TBXAZW1','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH','01HGSFFG5CPME4MMY6WV5N04FF','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/behavior.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/behavior.md','behavior.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR02V844CKCHZRVP8HXF6','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH','01HGSFFG5E6TFFG249SJTGXKMZ','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/ur_ingest_resource_path_rewrite_rule.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/ur_ingest_resource_path_rewrite_rule.md','ur_ingest_resource_path_rewrite_rule.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR02W7P8QP47ETHGE9EA8','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH','01HGSFFG5F2M2K0AKD3WW2K74B','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/ur_ingest_session_fs_path.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/ur_ingest_session_fs_path.md','ur_ingest_session_fs_path.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR02W7AX1DVTXHYDHN5EE','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/ur_ingest_session_fs_path.svg','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/ur_ingest_session_fs_path.svg','ur_ingest_session_fs_path.svg','svg',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR02Y479RYB5H1P3XCDSV','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH','01HGSFFG5HR6EV7GSEEWEZF49E','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema/ur_ingest_resource_path_match_rule.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/surveilr-state-schema','support/docs/surveilr-state-schema/ur_ingest_resource_path_match_rule.md','ur_ingest_resource_path_match_rule.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR030AJ16DJ4TD9SMYV9Q','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH','01HGSFFG5KGEK09739NA9SN2A0','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs/CONTRIBUTING.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/docs','support/docs/CONTRIBUTING.md','CONTRIBUTING.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR030VTS43PSHPY6QR2XT','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/surveilr-logo184x173px.png','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support','support/surveilr-logo184x173px.png','surveilr-logo184x173px.png','png',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR032PXRMXEMNVBY9X9SG','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH','01HGSFFG5N8145CZ4Q7YXTSYHM','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/sql-aide/README.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/sql-aide','support/sql-aide/README.md','README.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR0320ZXVTVYJ85J2WBG1','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/sql-aide/notebooks.ts','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/sql-aide','support/sql-aide/notebooks.ts','notebooks.ts','ts',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR032Y11QG9QD0P3Z7M30','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/sql-aide/sqlactl.ts','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/sql-aide','support/sql-aide/sqlactl.ts','sqlactl.ts','ts',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR032F82BDD5B9AVDV9EP','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/sql-aide/models.ts','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/sql-aide','support/sql-aide/models.ts','models.ts','ts',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR03298YP5FDQ86P3CDVV','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/sql-aide/deps.ts','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/sql-aide','support/sql-aide/deps.ts','deps.ts','ts',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR032EKKA4D7HEJ11Q1YK','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/synthetic.conf.sql','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures','support/test-fixtures/synthetic.conf.sql','synthetic.conf.sql','sql',NULL,'UKNOWN_NATURE(sql)',NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR034ETPA01X2J442KY0C','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/idempotent.surveilr-SQL.sh','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures','support/test-fixtures/idempotent.surveilr-SQL.sh','idempotent.surveilr-SQL.sh','sh',replace('{\n  "args": [],\n  "exit-status": "Exited(0)",\n  "interpretable-code": "/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/idempotent.surveilr-SQL.sh",\n  "stderr": "",\n  "stdin": {\n    "surveilr-ingest": {\n      "args": {\n        "state_db_fs_path": "resource-surveillance.sqlite.db"\n      },\n      "behavior": {\n        "classifier": {\n          "flaggables": [\n            {\n              "flags": "IGNORE_RESOURCE",\n              "nature_regex_capture": null,\n              "regex": "/(\\.git|node_modules)/"\n            },\n            {\n              "flags": "CONTENT_ACQUIRABLE",\n              "nature_regex_capture": "nature",\n              "regex": "\\.(?P<nature>md|mdx|html|json|jsonc|puml|txt|toml|yml)$"\n            },\n            {\n              "flags": "CAPTURABLE_EXECUTABLE",\n              "nature_regex_capture": "nature",\n              "regex": "surveilr\\[(?P<nature>[^\\]]*)\\]"\n            },\n            {\n              "flags": "CAPTURABLE_EXECUTABLE | CAPTURABLE_SQL",\n              "nature_regex_capture": null,\n              "regex": "surveilr-SQL"\n            },\n            {\n              "flags": "IGNORE_RESOURCE",\n              "nature_regex_capture": null,\n              "regex": "^/home/snshah/workspaces/github\\.com/opsfolio/resource\\-surveillance/resource\\-surveillance\\.sqlite\\.db$"\n            },\n            {\n              "flags": "IGNORE_RESOURCE",\n              "nature_regex_capture": null,\n              "regex": "^/home/snshah/workspaces/github\\.com/opsfolio/resource\\-surveillance/resource\\-surveillance\\.sqlite\\.wal$"\n            },\n            {\n              "flags": "IGNORE_RESOURCE",\n              "nature_regex_capture": null,\n              "regex": "^/home/snshah/workspaces/github\\.com/opsfolio/resource\\-surveillance/resource\\-surveillance\\.sqlite\\.db\\-journal$"\n            }\n          ],\n          "rewrite_path_regexs": [\n            {\n              "regex": "(?P<nature>\\.plantuml)$",\n              "replace": ".puml"\n            },\n            {\n              "regex": "(?P<nature>\\.text)$",\n              "replace": ".txt"\n            },\n            {\n              "regex": "(?P<nature>\\.yaml)$",\n              "replace": ".yml"\n            }\n          ],\n          "smart_ignore_conf_files": [\n            ".surveilr_ignore"\n          ]\n        },\n        "root_fs_paths": [\n          "."\n        ]\n      },\n      "device": {\n        "device_id": "01HGSFFG3F3T79WAZ4YN0C59ZD"\n      },\n      "env": {\n        "current_dir": "/home/snshah/workspaces/github.com/opsfolio/resource-surveillance"\n      },\n      "session": {\n        "dir-entry": {\n          "path": "/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/idempotent.surveilr-SQL.sh"\n        },\n        "walk-path-id": "01HGSFR00WGR9GM0MNCNT5EKGH",\n        "walk-session-id": "01HGSFR00WZXEBGM9YWA2R02XM"\n      }\n    }\n  }\n}','\n',char(10)),'EXECUTED_CAPTURED_SQL',replace('{\012  "SQL": "CREATE TABLE IF NOT EXISTS my_table_from_captured_executable_sql (column1, column2);\n",\012  "instance": "UniformResourceWriterAction::CapturedExecutableSqlOutput(err)"\012}','\012',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR036X8HCPK7NCFRJ0V21','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH','01HGSFFG5STJ2HMB5QEXPFFN5N','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/README.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures','support/test-fixtures/README.md','README.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR038343S3DTJBG2VF7HQ','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH','01HGSFR038N8N14QRMB7TRKS12','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/capturable-executable.surveilr[json].sh','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures','support/test-fixtures/capturable-executable.surveilr[json].sh','capturable-executable.surveilr[json].sh','sh',replace('{\n  "args": [],\n  "exit-status": "Exited(0)",\n  "interpretable-code": "/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/capturable-executable.surveilr[json].sh",\n  "stderr": "",\n  "stdin": {\n    "surveilr-ingest": {\n      "args": {\n        "state_db_fs_path": "resource-surveillance.sqlite.db"\n      },\n      "behavior": {\n        "classifier": {\n          "flaggables": [\n            {\n              "flags": "IGNORE_RESOURCE",\n              "nature_regex_capture": null,\n              "regex": "/(\\.git|node_modules)/"\n            },\n            {\n              "flags": "CONTENT_ACQUIRABLE",\n              "nature_regex_capture": "nature",\n              "regex": "\\.(?P<nature>md|mdx|html|json|jsonc|puml|txt|toml|yml)$"\n            },\n            {\n              "flags": "CAPTURABLE_EXECUTABLE",\n              "nature_regex_capture": "nature",\n              "regex": "surveilr\\[(?P<nature>[^\\]]*)\\]"\n            },\n            {\n              "flags": "CAPTURABLE_EXECUTABLE | CAPTURABLE_SQL",\n              "nature_regex_capture": null,\n              "regex": "surveilr-SQL"\n            },\n            {\n              "flags": "IGNORE_RESOURCE",\n              "nature_regex_capture": null,\n              "regex": "^/home/snshah/workspaces/github\\.com/opsfolio/resource\\-surveillance/resource\\-surveillance\\.sqlite\\.db$"\n            },\n            {\n              "flags": "IGNORE_RESOURCE",\n              "nature_regex_capture": null,\n              "regex": "^/home/snshah/workspaces/github\\.com/opsfolio/resource\\-surveillance/resource\\-surveillance\\.sqlite\\.wal$"\n            },\n            {\n              "flags": "IGNORE_RESOURCE",\n              "nature_regex_capture": null,\n              "regex": "^/home/snshah/workspaces/github\\.com/opsfolio/resource\\-surveillance/resource\\-surveillance\\.sqlite\\.db\\-journal$"\n            }\n          ],\n          "rewrite_path_regexs": [\n            {\n              "regex": "(?P<nature>\\.plantuml)$",\n              "replace": ".puml"\n            },\n            {\n              "regex": "(?P<nature>\\.text)$",\n              "replace": ".txt"\n            },\n            {\n              "regex": "(?P<nature>\\.yaml)$",\n              "replace": ".yml"\n            }\n          ],\n          "smart_ignore_conf_files": [\n            ".surveilr_ignore"\n          ]\n        },\n        "root_fs_paths": [\n          "."\n        ]\n      },\n      "device": {\n        "device_id": "01HGSFFG3F3T79WAZ4YN0C59ZD"\n      },\n      "env": {\n        "current_dir": "/home/snshah/workspaces/github.com/opsfolio/resource-surveillance"\n      },\n      "session": {\n        "dir-entry": {\n          "path": "/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/capturable-executable.surveilr[json].sh"\n        },\n        "walk-path-id": "01HGSFR00WGR9GM0MNCNT5EKGH",\n        "walk-session-id": "01HGSFR00WZXEBGM9YWA2R02XM"\n      }\n    }\n  }\n}','\n',char(10)),NULL,NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR03872WZS3F09MK59ARR','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/.surveilr_ignore','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures','support/test-fixtures/.surveilr_ignore','.surveilr_ignore','',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR06WPBN12AMH1PEV5VY0','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH','01HGSFR06WX55MZCSCK48VRRKH','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/capturable-executable.surveilr[json].ts','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures','support/test-fixtures/capturable-executable.surveilr[json].ts','capturable-executable.surveilr[json].ts','ts',replace('{\n  "args": [],\n  "exit-status": "Exited(0)",\n  "interpretable-code": "/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/capturable-executable.surveilr[json].ts",\n  "stderr": "",\n  "stdin": {\n    "surveilr-ingest": {\n      "args": {\n        "state_db_fs_path": "resource-surveillance.sqlite.db"\n      },\n      "behavior": {\n        "classifier": {\n          "flaggables": [\n            {\n              "flags": "IGNORE_RESOURCE",\n              "nature_regex_capture": null,\n              "regex": "/(\\.git|node_modules)/"\n            },\n            {\n              "flags": "CONTENT_ACQUIRABLE",\n              "nature_regex_capture": "nature",\n              "regex": "\\.(?P<nature>md|mdx|html|json|jsonc|puml|txt|toml|yml)$"\n            },\n            {\n              "flags": "CAPTURABLE_EXECUTABLE",\n              "nature_regex_capture": "nature",\n              "regex": "surveilr\\[(?P<nature>[^\\]]*)\\]"\n            },\n            {\n              "flags": "CAPTURABLE_EXECUTABLE | CAPTURABLE_SQL",\n              "nature_regex_capture": null,\n              "regex": "surveilr-SQL"\n            },\n            {\n              "flags": "IGNORE_RESOURCE",\n              "nature_regex_capture": null,\n              "regex": "^/home/snshah/workspaces/github\\.com/opsfolio/resource\\-surveillance/resource\\-surveillance\\.sqlite\\.db$"\n            },\n            {\n              "flags": "IGNORE_RESOURCE",\n              "nature_regex_capture": null,\n              "regex": "^/home/snshah/workspaces/github\\.com/opsfolio/resource\\-surveillance/resource\\-surveillance\\.sqlite\\.wal$"\n            },\n            {\n              "flags": "IGNORE_RESOURCE",\n              "nature_regex_capture": null,\n              "regex": "^/home/snshah/workspaces/github\\.com/opsfolio/resource\\-surveillance/resource\\-surveillance\\.sqlite\\.db\\-journal$"\n            }\n          ],\n          "rewrite_path_regexs": [\n            {\n              "regex": "(?P<nature>\\.plantuml)$",\n              "replace": ".puml"\n            },\n            {\n              "regex": "(?P<nature>\\.text)$",\n              "replace": ".txt"\n            },\n            {\n              "regex": "(?P<nature>\\.yaml)$",\n              "replace": ".yml"\n            }\n          ],\n          "smart_ignore_conf_files": [\n            ".surveilr_ignore"\n          ]\n        },\n        "root_fs_paths": [\n          "."\n        ]\n      },\n      "device": {\n        "device_id": "01HGSFFG3F3T79WAZ4YN0C59ZD"\n      },\n      "env": {\n        "current_dir": "/home/snshah/workspaces/github.com/opsfolio/resource-surveillance"\n      },\n      "session": {\n        "dir-entry": {\n          "path": "/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/capturable-executable.surveilr[json].ts"\n        },\n        "walk-path-id": "01HGSFR00WGR9GM0MNCNT5EKGH",\n        "walk-session-id": "01HGSFR00WZXEBGM9YWA2R02XM"\n      }\n    }\n  }\n}','\n',char(10)),NULL,NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR06YJQBDW15P902QV180','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH','01HGSFFGAW0YGJJ3YVHAZM4W2F','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/markdown-with-frontmatter.md','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures','support/test-fixtures/markdown-with-frontmatter.md','markdown-with-frontmatter.md','md',NULL,NULL,NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR06YB35N2G7XGSCFF553','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/synthetic.conf.sql.ts','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures','support/test-fixtures/synthetic.conf.sql.ts','synthetic.conf.sql.ts','ts',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR071BG9W7P6VFB6CCWD9','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH','01HGSFR071YYMWWXCYSARZF2VV','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/echo-stdin.surveilr[json].sh','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures','support/test-fixtures/echo-stdin.surveilr[json].sh','echo-stdin.surveilr[json].sh','sh',replace('{\n  "args": [],\n  "exit-status": "Exited(0)",\n  "interpretable-code": "/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/echo-stdin.surveilr[json].sh",\n  "stderr": "",\n  "stdin": {\n    "surveilr-ingest": {\n      "args": {\n        "state_db_fs_path": "resource-surveillance.sqlite.db"\n      },\n      "behavior": {\n        "classifier": {\n          "flaggables": [\n            {\n              "flags": "IGNORE_RESOURCE",\n              "nature_regex_capture": null,\n              "regex": "/(\\.git|node_modules)/"\n            },\n            {\n              "flags": "CONTENT_ACQUIRABLE",\n              "nature_regex_capture": "nature",\n              "regex": "\\.(?P<nature>md|mdx|html|json|jsonc|puml|txt|toml|yml)$"\n            },\n            {\n              "flags": "CAPTURABLE_EXECUTABLE",\n              "nature_regex_capture": "nature",\n              "regex": "surveilr\\[(?P<nature>[^\\]]*)\\]"\n            },\n            {\n              "flags": "CAPTURABLE_EXECUTABLE | CAPTURABLE_SQL",\n              "nature_regex_capture": null,\n              "regex": "surveilr-SQL"\n            },\n            {\n              "flags": "IGNORE_RESOURCE",\n              "nature_regex_capture": null,\n              "regex": "^/home/snshah/workspaces/github\\.com/opsfolio/resource\\-surveillance/resource\\-surveillance\\.sqlite\\.db$"\n            },\n            {\n              "flags": "IGNORE_RESOURCE",\n              "nature_regex_capture": null,\n              "regex": "^/home/snshah/workspaces/github\\.com/opsfolio/resource\\-surveillance/resource\\-surveillance\\.sqlite\\.wal$"\n            },\n            {\n              "flags": "IGNORE_RESOURCE",\n              "nature_regex_capture": null,\n              "regex": "^/home/snshah/workspaces/github\\.com/opsfolio/resource\\-surveillance/resource\\-surveillance\\.sqlite\\.db\\-journal$"\n            }\n          ],\n          "rewrite_path_regexs": [\n            {\n              "regex": "(?P<nature>\\.plantuml)$",\n              "replace": ".puml"\n            },\n            {\n              "regex": "(?P<nature>\\.text)$",\n              "replace": ".txt"\n            },\n            {\n              "regex": "(?P<nature>\\.yaml)$",\n              "replace": ".yml"\n            }\n          ],\n          "smart_ignore_conf_files": [\n            ".surveilr_ignore"\n          ]\n        },\n        "root_fs_paths": [\n          "."\n        ]\n      },\n      "device": {\n        "device_id": "01HGSFFG3F3T79WAZ4YN0C59ZD"\n      },\n      "env": {\n        "current_dir": "/home/snshah/workspaces/github.com/opsfolio/resource-surveillance"\n      },\n      "session": {\n        "dir-entry": {\n          "path": "/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/echo-stdin.surveilr[json].sh"\n        },\n        "walk-path-id": "01HGSFR00WGR9GM0MNCNT5EKGH",\n        "walk-session-id": "01HGSFR00WZXEBGM9YWA2R02XM"\n      }\n    }\n  }\n}','\n',char(10)),NULL,NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR0735HEKB4FQ0ZWT7K72','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/capturable-executable-bad-exit-status.surveilr[txt].sh','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures','support/test-fixtures/capturable-executable-bad-exit-status.surveilr[txt].sh','capturable-executable-bad-exit-status.surveilr[txt].sh','sh',NULL,'ERROR',replace('{\n  "diagnostics": {\n    "args": [],\n    "exit-status": "Exited(1)",\n    "interpretable-code": "/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/capturable-executable-bad-exit-status.surveilr[txt].sh",\n    "stderr": "",\n    "stdin": {\n      "surveilr-ingest": {\n        "args": {\n          "state_db_fs_path": "resource-surveillance.sqlite.db"\n        },\n        "behavior": {\n          "classifier": {\n            "flaggables": [\n              {\n                "flags": "IGNORE_RESOURCE",\n                "nature_regex_capture": null,\n                "regex": "/(\\.git|node_modules)/"\n              },\n              {\n                "flags": "CONTENT_ACQUIRABLE",\n                "nature_regex_capture": "nature",\n                "regex": "\\.(?P<nature>md|mdx|html|json|jsonc|puml|txt|toml|yml)$"\n              },\n              {\n                "flags": "CAPTURABLE_EXECUTABLE",\n                "nature_regex_capture": "nature",\n                "regex": "surveilr\\[(?P<nature>[^\\]]*)\\]"\n              },\n              {\n                "flags": "CAPTURABLE_EXECUTABLE | CAPTURABLE_SQL",\n                "nature_regex_capture": null,\n                "regex": "surveilr-SQL"\n              },\n              {\n                "flags": "IGNORE_RESOURCE",\n                "nature_regex_capture": null,\n                "regex": "^/home/snshah/workspaces/github\\.com/opsfolio/resource\\-surveillance/resource\\-surveillance\\.sqlite\\.db$"\n              },\n              {\n                "flags": "IGNORE_RESOURCE",\n                "nature_regex_capture": null,\n                "regex": "^/home/snshah/workspaces/github\\.com/opsfolio/resource\\-surveillance/resource\\-surveillance\\.sqlite\\.wal$"\n              },\n              {\n                "flags": "IGNORE_RESOURCE",\n                "nature_regex_capture": null,\n                "regex": "^/home/snshah/workspaces/github\\.com/opsfolio/resource\\-surveillance/resource\\-surveillance\\.sqlite\\.db\\-journal$"\n              }\n            ],\n            "rewrite_path_regexs": [\n              {\n                "regex": "(?P<nature>\\.plantuml)$",\n                "replace": ".puml"\n              },\n              {\n                "regex": "(?P<nature>\\.text)$",\n                "replace": ".txt"\n              },\n              {\n                "regex": "(?P<nature>\\.yaml)$",\n                "replace": ".yml"\n              }\n            ],\n            "smart_ignore_conf_files": [\n              ".surveilr_ignore"\n            ]\n          },\n          "root_fs_paths": [\n            "."\n          ]\n        },\n        "device": {\n          "device_id": "01HGSFFG3F3T79WAZ4YN0C59ZD"\n        },\n        "env": {\n          "current_dir": "/home/snshah/workspaces/github.com/opsfolio/resource-surveillance"\n        },\n        "session": {\n          "dir-entry": {\n            "path": "/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/capturable-executable-bad-exit-status.surveilr[txt].sh"\n          },\n          "walk-path-id": "01HGSFR00WGR9GM0MNCNT5EKGH",\n          "walk-session-id": "01HGSFR00WZXEBGM9YWA2R02XM"\n        }\n      }\n    }\n  },\n  "instance": "UniformResourceWriterAction::CapturedExecutableError(exit, stderr, diags)",\n  "message": "Non-zero exit status when executing capturable executable"\n}','\n',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR073AAKRAEH9AQS3Q24A','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/unknown-extension.xyz','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures','support/test-fixtures/unknown-extension.xyz','unknown-extension.xyz','xyz',NULL,'UKNOWN_NATURE(xyz)',NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR0730ZGS8MESN9HA2WVA','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH','01HGSFFGB001C068JPVZ37Z1DC','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/plain.text','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures','support/test-fixtures/plain.text','plain.text','text',NULL,NULL,NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR073ZBY3FRPV7SXN8VHX','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH','01HGSFFGB04V7FFK30G5Y88G6X','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/plain-text.txt','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures','support/test-fixtures/plain-text.txt','plain-text.txt','txt',NULL,NULL,NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR073AAQP8CMZC5XHZXQP','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures/capturable-executable-no-permissions.surveilr[json].sh','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/test-fixtures','support/test-fixtures/capturable-executable-no-permissions.surveilr[json].sh','capturable-executable-no-permissions.surveilr[json].sh','sh',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::CapturableExecNotExecutable",\n  "message": "File matched as a potential capturable executable but the file permissions do not allow execution"\n}','\n',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR0731PBYZ88SB8WYXGPN','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support/surveilr-logo-with-text-755x190px.png','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/support','support/surveilr-logo-with-text-755x190px.png','surveilr-logo-with-text-755x190px.png','png',NULL,'ISSUE',replace('{\n  "instance": "UniformResourceWriterAction::ContentUnavailable",\n  "message": "content supplier was not provided",\n  "remediation": "see CLI args/config and request content for this extension; for security reasons this service does not load any content it has not been explicitly asked to (e.g. by extension or filename pattern in behaviors)"\n}','\n',char(10)),NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR073VY99K9GSMXNCTESS','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH','01HGSFFGB01G2WVFCCYBMC38B5','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/.github/workflows/release.yml','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/.github/workflows','.github/workflows/release.yml','release.yml','yml',NULL,NULL,NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR073P8W4NA7C5A67M6TJ','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH','01HGSFFGB1YK51463A3MSNE639','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/.github/workflows/rust.yml','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/.github/workflows','.github/workflows/rust.yml','rust.yml','yml',NULL,NULL,NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR0731T2NX0QRDNPCRFRC','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/Cargo.lock','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance','Cargo.lock','Cargo.lock','lock',NULL,'UKNOWN_NATURE(lock)',NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR073YDC6XN69VGT11YE2','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH','01HGSFFGB1SV0QTKW9N8F6H2EG','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/Cargo.toml','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance','Cargo.toml','Cargo.toml','toml',NULL,NULL,NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR0737C30ZS6YFATZMJZ6','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH','01HGSFFGB1MHCTASK6B8AG4SP8','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/.vscode/settings.json','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/.vscode','.vscode/settings.json','settings.json','json',NULL,NULL,NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR073M7G3BZ1Q2TR0T24K','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH','01HGSFFGB1V54XWPES3S08AYHM','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/.vscode/extensions.json','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/.vscode','.vscode/extensions.json','extensions.json','json',NULL,NULL,NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
INSERT INTO ur_ingest_session_fs_path_entry VALUES('01HGSFR073R9Z2B0SMNQXBRHDX','01HGSFR00WZXEBGM9YWA2R02XM','01HGSFR00WGR9GM0MNCNT5EKGH',NULL,'/home/snshah/workspaces/github.com/opsfolio/resource-surveillance/install.sh','/home/snshah/workspaces/github.com/opsfolio/resource-surveillance','install.sh','install.sh','sh',NULL,'UKNOWN_NATURE(sh)',NULL,NULL,NULL,'2023-12-04 04:00:25','UNKNOWN',NULL,NULL,NULL,NULL,NULL);
CREATE TABLE IF NOT EXISTS "ur_ingest_session_task" (
    "ur_ingest_session_task_id" VARCHAR PRIMARY KEY NOT NULL,
    "ingest_session_id" VARCHAR NOT NULL,
    "uniform_resource_id" VARCHAR,
    "captured_executable" TEXT CHECK(json_valid(captured_executable)) NOT NULL,
    "ur_status" TEXT,
    "ur_diagnostics" TEXT CHECK(json_valid(ur_diagnostics) OR ur_diagnostics IS NULL),
    "ur_transformations" TEXT CHECK(json_valid(ur_transformations) OR ur_transformations IS NULL),
    "elaboration" TEXT CHECK(json_valid(elaboration) OR elaboration IS NULL),
    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    "created_by" TEXT DEFAULT 'UNKNOWN',
    "updated_at" TIMESTAMP,
    "updated_by" TEXT,
    "deleted_at" TIMESTAMP,
    "deleted_by" TEXT,
    "activity_log" TEXT,
    FOREIGN KEY("ingest_session_id") REFERENCES "ur_ingest_session"("ur_ingest_session_id"),
    FOREIGN KEY("uniform_resource_id") REFERENCES "uniform_resource"("uniform_resource_id")
);
CREATE TABLE my_table_from_captured_executable_sql (column1, column2);
CREATE INDEX "idx_device__name__state" ON "device"("name", "state");
CREATE INDEX "idx_ur_ingest_session_fs_path__ingest_session_id__root_path" ON "ur_ingest_session_fs_path"("ingest_session_id", "root_path");
CREATE INDEX "idx_uniform_resource__device_id__uri" ON "uniform_resource"("device_id", "uri");
CREATE INDEX "idx_uniform_resource_transform__uniform_resource_id__content_digest" ON "uniform_resource_transform"("uniform_resource_id", "content_digest");
CREATE INDEX "idx_ur_ingest_session_fs_path_entry__ingest_session_id__file_path_abs" ON "ur_ingest_session_fs_path_entry"("ingest_session_id", "file_path_abs");
CREATE INDEX "idx_ur_ingest_session_task__ingest_session_id" ON "ur_ingest_session_task"("ingest_session_id");
CREATE VIEW "ur_ingest_session_files_stats_latest" AS
    SELECT iss.*
      FROM ur_ingest_session_files_stats AS iss
      JOIN (  SELECT ur_ingest_session.ur_ingest_session_id AS latest_session_id
                FROM ur_ingest_session
            ORDER BY ur_ingest_session.ingest_finished_at DESC
               LIMIT 1) AS latest
        ON iss.ingest_session_id = latest.latest_session_id;
CREATE VIEW "ur_ingest_session_files_stats" AS
    WITH Summary AS (
        SELECT
            device.device_id AS device_id,
            ur_ingest_session.ur_ingest_session_id AS ingest_session_id,
            ur_ingest_session.ingest_started_at AS ingest_session_started_at,
            ur_ingest_session.ingest_finished_at AS ingest_session_finished_at,
            COALESCE(ur_ingest_session_fs_path_entry.file_extn, '') AS file_extension,
            ur_ingest_session_fs_path.ur_ingest_session_fs_path_id as ingest_session_fs_path_id,
            ur_ingest_session_fs_path.root_path AS ingest_session_root_fs_path,
            COUNT(ur_ingest_session_fs_path_entry.uniform_resource_id) AS total_file_count,
            SUM(CASE WHEN uniform_resource.content IS NOT NULL THEN 1 ELSE 0 END) AS file_count_with_content,
            SUM(CASE WHEN uniform_resource.frontmatter IS NOT NULL THEN 1 ELSE 0 END) AS file_count_with_frontmatter,
            MIN(uniform_resource.size_bytes) AS min_file_size_bytes,
            AVG(uniform_resource.size_bytes) AS average_file_size_bytes,
            MAX(uniform_resource.size_bytes) AS max_file_size_bytes,
            MIN(uniform_resource.last_modified_at) AS oldest_file_last_modified_datetime,
            MAX(uniform_resource.last_modified_at) AS youngest_file_last_modified_datetime
        FROM
            ur_ingest_session
        JOIN
            device ON ur_ingest_session.device_id = device.device_id
        LEFT JOIN
            ur_ingest_session_fs_path ON ur_ingest_session.ur_ingest_session_id = ur_ingest_session_fs_path.ingest_session_id
        LEFT JOIN
            ur_ingest_session_fs_path_entry ON ur_ingest_session_fs_path.ur_ingest_session_fs_path_id = ur_ingest_session_fs_path_entry.ingest_fs_path_id
        LEFT JOIN
            uniform_resource ON ur_ingest_session_fs_path_entry.uniform_resource_id = uniform_resource.uniform_resource_id
        GROUP BY
            device.device_id,
            ur_ingest_session.ur_ingest_session_id,
            ur_ingest_session.ingest_started_at,
            ur_ingest_session.ingest_finished_at,
            ur_ingest_session_fs_path_entry.file_extn,
            ur_ingest_session_fs_path.root_path
    )
    SELECT
        device_id,
        ingest_session_id,
        ingest_session_started_at,
        ingest_session_finished_at,
        file_extension,
        ingest_session_fs_path_id,
        ingest_session_root_fs_path,
        total_file_count,
        file_count_with_content,
        file_count_with_frontmatter,
        min_file_size_bytes,
        CAST(ROUND(average_file_size_bytes) AS INTEGER) AS average_file_size_bytes,
        max_file_size_bytes,
        oldest_file_last_modified_datetime,
        youngest_file_last_modified_datetime
    FROM
        Summary
    ORDER BY
        device_id,
        ingest_session_finished_at,
        file_extension;
CREATE VIEW "ur_ingest_session_file_issue" AS
      SELECT us.device_id,
             us.ur_ingest_session_id,
             usp.ur_ingest_session_fs_path_id,
             usp.root_path,
             ufs.ur_ingest_session_fs_path_entry_id,
             ufs.file_path_abs,
             ufs.ur_status,
             ufs.ur_diagnostics
        FROM ur_ingest_session_fs_path_entry ufs
        JOIN ur_ingest_session_fs_path usp ON ufs.ingest_fs_path_id = usp.ur_ingest_session_fs_path_id
        JOIN ur_ingest_session us ON usp.ingest_session_id = us.ur_ingest_session_id
       WHERE ufs.ur_status IS NOT NULL
    GROUP BY us.device_id,
             us.ur_ingest_session_id,
             usp.ur_ingest_session_fs_path_id,
             usp.root_path,
             ufs.ur_ingest_session_fs_path_entry_id,
             ufs.file_path_abs,
             ufs.ur_status,
             ufs.ur_diagnostics;
CREATE VIEW "ur_ingest_session_tasks_stats_latest" AS
    SELECT iss.*
      FROM ur_ingest_session_tasks_stats AS iss
      JOIN (  SELECT ur_ingest_session.ur_ingest_session_id AS latest_session_id
                FROM ur_ingest_session
            ORDER BY ur_ingest_session.ingest_finished_at DESC
               LIMIT 1) AS latest
        ON iss.ingest_session_id = latest.latest_session_id;
CREATE VIEW "ur_ingest_session_tasks_stats" AS
      WITH Summary AS (
          SELECT
            device.device_id AS device_id,
            ur_ingest_session.ur_ingest_session_id AS ingest_session_id,
            ur_ingest_session.ingest_started_at AS ingest_session_started_at,
            ur_ingest_session.ingest_finished_at AS ingest_session_finished_at,
            COALESCE(ur_ingest_session_task.ur_status, 'Ok') AS ur_status,
            COALESCE(uniform_resource.nature, 'UNKNOWN') AS nature,
            COUNT(ur_ingest_session_task.uniform_resource_id) AS total_file_count,
            SUM(CASE WHEN uniform_resource.content IS NOT NULL THEN 1 ELSE 0 END) AS file_count_with_content,
            SUM(CASE WHEN uniform_resource.frontmatter IS NOT NULL THEN 1 ELSE 0 END) AS file_count_with_frontmatter,
            MIN(uniform_resource.size_bytes) AS min_file_size_bytes,
            AVG(uniform_resource.size_bytes) AS average_file_size_bytes,
            MAX(uniform_resource.size_bytes) AS max_file_size_bytes,
            MIN(uniform_resource.last_modified_at) AS oldest_file_last_modified_datetime,
            MAX(uniform_resource.last_modified_at) AS youngest_file_last_modified_datetime
        FROM
            ur_ingest_session
        JOIN
            device ON ur_ingest_session.device_id = device.device_id
        LEFT JOIN
            ur_ingest_session_task ON ur_ingest_session.ur_ingest_session_id = ur_ingest_session_task.ingest_session_id
        LEFT JOIN
            uniform_resource ON ur_ingest_session_task.uniform_resource_id = uniform_resource.uniform_resource_id
        GROUP BY
            device.device_id,
            ur_ingest_session.ur_ingest_session_id,
            ur_ingest_session.ingest_started_at,
            ur_ingest_session.ingest_finished_at,
            ur_ingest_session_task.captured_executable
    )
    SELECT
        device_id,
        ingest_session_id,
        ingest_session_started_at,
        ingest_session_finished_at,
        ur_status,
        nature,
        total_file_count,
        file_count_with_content,
        file_count_with_frontmatter,
        min_file_size_bytes,
        CAST(ROUND(average_file_size_bytes) AS INTEGER) AS average_file_size_bytes,
        max_file_size_bytes,
        oldest_file_last_modified_datetime,
        youngest_file_last_modified_datetime
    FROM
        Summary
    ORDER BY
        device_id,
        ingest_session_finished_at,
        ur_status;
COMMIT;
