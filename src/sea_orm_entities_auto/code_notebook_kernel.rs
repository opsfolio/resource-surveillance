//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.4

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "code_notebook_kernel")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub code_notebook_kernel_id: String,
    pub kernel_name: String,
    pub description: Option<String>,
    pub mime_type: Option<String>,
    pub file_extn: Option<String>,
    pub elaboration: Option<String>,
    pub governance: Option<String>,
    pub created_at: Option<DateTimeUtc>,
    pub created_by: Option<String>,
    pub updated_at: Option<DateTimeUtc>,
    pub updated_by: Option<String>,
    pub deleted_at: Option<DateTimeUtc>,
    pub deleted_by: Option<String>,
    pub activity_log: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::code_notebook_cell::Entity")]
    CodeNotebookCell,
}

impl Related<super::code_notebook_cell::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::CodeNotebookCell.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
