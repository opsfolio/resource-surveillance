//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.4

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "code_notebook_state")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub code_notebook_state_id: String,
    pub code_notebook_cell_id: String,
    pub from_state: String,
    pub to_state: String,
    pub transition_reason: Option<String>,
    pub transitioned_at: Option<DateTimeUtc>,
    pub elaboration: Option<String>,
    pub created_at: Option<DateTimeUtc>,
    pub created_by: Option<String>,
    pub updated_at: Option<DateTimeUtc>,
    pub updated_by: Option<String>,
    pub deleted_at: Option<DateTimeUtc>,
    pub deleted_by: Option<String>,
    pub activity_log: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::code_notebook_cell::Entity",
        from = "Column::CodeNotebookCellId",
        to = "super::code_notebook_cell::Column::CodeNotebookCellId",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    CodeNotebookCell,
}

impl Related<super::code_notebook_cell::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::CodeNotebookCell.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
